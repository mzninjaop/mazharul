{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a full-stack web application showcasing a cyberpunk-themed developer portfolio. The project features a React frontend with TypeScript, a Node.js/Express backend, and PostgreSQL database integration using Drizzle ORM. The application includes a comprehensive portfolio website with sections for projects, skills, services, testimonials, and contact information, all styled with a dark, neon-cyberpunk aesthetic using Tailwind CSS and shadcn/ui components.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern development\n- **Routing**: React Router DOM for client-side navigation with dedicated pages for Portfolio, Skills, Services, Contact, Blog, and a 404 handler\n- **Styling**: Tailwind CSS with custom cyberpunk theme variables and shadcn/ui component library for consistent UI elements\n- **State Management**: TanStack React Query for server state management and data fetching\n- **Build Tool**: Vite for fast development and optimized production builds\n- **Component Architecture**: Modular component structure with advanced sections (hero, projects, skills, services, testimonials, contact) and reusable UI components\n\n## Backend Architecture\n- **Runtime**: Node.js with Express.js framework for RESTful API development\n- **Language**: TypeScript with ES modules for modern JavaScript features\n- **Development Server**: Custom Vite integration for development mode with HMR support\n- **Middleware**: Request logging, JSON parsing, and error handling middleware\n- **Storage Interface**: Abstract storage interface with in-memory implementation for development, designed to easily swap with database implementation\n\n## Data Storage Solutions\n- **Database**: PostgreSQL with Neon serverless driver for cloud-native database operations\n- **ORM**: Drizzle ORM for type-safe database operations and schema management\n- **Schema**: User entity with username/password fields, extensible for additional entities\n- **Migrations**: Drizzle Kit for database schema migrations and management\n\n## Authentication and Authorization\n- **Current State**: Basic user schema prepared but no authentication implementation yet\n- **Prepared Infrastructure**: User table with username/password fields ready for authentication system integration\n\n## External Dependencies\n- **Database Provider**: Neon serverless PostgreSQL for cloud database hosting\n- **UI Components**: Extensive shadcn/ui component library including forms, dialogs, cards, navigation, and data display components\n- **Icons**: Lucide React for consistent iconography throughout the application\n- **Styling**: Tailwind CSS with PostCSS for utility-first styling approach\n- **Development Tools**: TypeScript for type checking, ESBuild for production builds, and Replit-specific plugins for development environment integration","size_bytes":2937},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar-background))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2787},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n});\n","size_bytes":894},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });\n","size_bytes":483},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on port 5000\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = 5000;\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":1921},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertContactSubmissionSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\nimport { sendEmailNotification } from \"./email\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Contact form submission endpoint\n  app.post(\"/api/contact\", async (req, res) => {\n    try {\n      const validatedData = insertContactSubmissionSchema.parse(req.body);\n      \n      // Save to database\n      const submission = await storage.createContactSubmission(validatedData);\n      \n      // Send email notification (formatted for manual forwarding)\n      await sendEmailNotification({\n        name: submission.name,\n        email: submission.email,\n        service: submission.service || undefined,\n        budget: submission.budget || undefined,\n        timeline: submission.timeline || undefined,\n        message: submission.message,\n        createdAt: submission.createdAt\n      });\n      \n      res.json({ \n        success: true, \n        id: submission.id, \n        message: \"Your message has been received! I'll get back to you within 24 hours.\" \n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ error: \"Invalid form data\", details: error.errors });\n      } else {\n        console.error(\"Contact form error:\", error);\n        res.status(500).json({ error: \"Failed to submit contact form\" });\n      }\n    }\n  });\n\n  // Get contact submissions (admin endpoint)\n  app.get(\"/api/contact\", async (req, res) => {\n    try {\n      const submissions = await storage.getContactSubmissions();\n      res.json(submissions);\n    } catch (error) {\n      console.error(\"Get submissions error:\", error);\n      res.status(500).json({ error: \"Failed to get submissions\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":1938},"server/storage.ts":{"content":"import { contactSubmissions, type ContactSubmission, type InsertContactSubmission } from \"@shared/schema\";\nimport { db } from \"./db\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  createContactSubmission(submission: InsertContactSubmission): Promise<ContactSubmission>;\n  getContactSubmissions(): Promise<ContactSubmission[]>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  async createContactSubmission(submission: InsertContactSubmission): Promise<ContactSubmission> {\n    const [created] = await db.insert(contactSubmissions).values(submission).returning();\n    return created;\n  }\n\n  async getContactSubmissions(): Promise<ContactSubmission[]> {\n    return await db.select().from(contactSubmissions).orderBy(contactSubmissions.createdAt);\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":855},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2254},"shared/schema.ts":{"content":"import { pgTable, text, serial, integer, boolean, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Contact form submissions table for the portfolio\nexport const contactSubmissions = pgTable(\"contact_submissions\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  service: text(\"service\"),\n  budget: text(\"budget\"),\n  timeline: text(\"timeline\"),\n  message: text(\"message\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertContactSubmissionSchema = createInsertSchema(contactSubmissions).pick({\n  name: true,\n  email: true,\n  service: true,\n  budget: true,\n  timeline: true,\n  message: true,\n});\n\nexport type InsertContactSubmission = z.infer<typeof insertContactSubmissionSchema>;\nexport type ContactSubmission = typeof contactSubmissions.$inferSelect;\n","size_bytes":922},"client/src/App.css":{"content":"#root {\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n}\n\n.logo {\n  height: 6em;\n  padding: 1.5em;\n  will-change: filter;\n  transition: filter 300ms;\n}\n.logo:hover {\n  filter: drop-shadow(0 0 2em #646cffaa);\n}\n.logo.react:hover {\n  filter: drop-shadow(0 0 2em #61dafbaa);\n}\n\n@keyframes logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  a:nth-of-type(2) .logo {\n    animation: logo-spin infinite 20s linear;\n  }\n}\n\n.card {\n  padding: 2em;\n}\n\n.read-the-docs {\n  color: #888;\n}\n","size_bytes":606},"client/src/App.tsx":{"content":"import { Toaster } from \"@/components/ui/toaster\";\nimport { Toaster as Sonner } from \"@/components/ui/sonner\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport Index from \"./pages/Index\";\nimport Portfolio from \"./pages/Portfolio\";\nimport Skills from \"./pages/Skills\";\nimport Services from \"./pages/Services\";\nimport Contact from \"./pages/Contact\";\nimport Blog from \"./pages/Blog\";\nimport NotFound from \"./pages/NotFound\";\n\nconst queryClient = new QueryClient();\n\nconst App = () => (\n  <QueryClientProvider client={queryClient}>\n    <TooltipProvider>\n      <Toaster />\n      <Sonner />\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Index />} />\n          <Route path=\"/portfolio\" element={<Portfolio />} />\n          <Route path=\"/skills\" element={<Skills />} />\n          <Route path=\"/services\" element={<Services />} />\n          <Route path=\"/contact\" element={<Contact />} />\n          <Route path=\"/blog\" element={<Blog />} />\n          {/* ADD ALL CUSTOM ROUTES ABOVE THE CATCH-ALL \"*\" ROUTE */}\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </BrowserRouter>\n    </TooltipProvider>\n  </QueryClientProvider>\n);\n\nexport default App;\n","size_bytes":1358},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* ULTIMATE CYBERPUNK DESIGN SYSTEM - Dark Abyss Theme */\n\n@layer base {\n  :root {\n    /* Ultra dark theme - Pure void */\n    --background: 0 0% 0%;\n    --foreground: 180 100% 98%;\n\n    --card: 0 0% 1%;\n    --card-foreground: 180 100% 98%;\n\n    --popover: 0 0% 1%;\n    --popover-foreground: 180 100% 98%;\n\n    /* Neon Primary - Hyper Cyan */\n    --primary: 180 100% 60%;\n    --primary-foreground: 0 0% 0%;\n\n    /* Neon Secondary - Void Purple */\n    --secondary: 270 100% 75%;\n    --secondary-foreground: 0 0% 0%;\n\n    /* Neon Accent - Matrix Green */\n    --accent: 120 100% 60%;\n    --accent-foreground: 0 0% 0%;\n\n    /* Neon Pink/Magenta */\n    --neon-pink: 320 100% 65%;\n    --neon-pink-foreground: 0 0% 0%;\n\n    /* Neon Gold */\n    --neon-gold: 50 100% 65%;\n    --neon-gold-foreground: 0 0% 0%;\n\n    /* Neon Blue */\n    --neon-blue: 240 100% 65%;\n    --neon-blue-foreground: 0 0% 0%;\n\n    /* Neon Orange */\n    --neon-orange: 20 100% 65%;\n    --neon-orange-foreground: 0 0% 0%;\n\n    --muted: 0 0% 5%;\n    --muted-foreground: 180 50% 70%;\n\n    --destructive: 0 84% 60%;\n    --destructive-foreground: 210 40% 98%;\n\n    --border: 0 0% 10%;\n    --input: 0 0% 5%;\n    --ring: 180 100% 50%;\n\n    --radius: 0.75rem;\n\n    --sidebar-background: 0 0% 98%;\n\n    --sidebar-foreground: 240 5.3% 26.1%;\n\n    --sidebar-primary: 240 5.9% 10%;\n\n    --sidebar-primary-foreground: 0 0% 98%;\n\n    --sidebar-accent: 240 4.8% 95.9%;\n\n    --sidebar-accent-foreground: 240 5.9% 10%;\n\n    --sidebar-border: 220 13% 91%;\n\n    --sidebar-ring: 217.2 91.2% 59.8%;\n\n    /* Epic gradients for cyberpunk effects */\n    --gradient-neon: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--secondary)));\n    --gradient-cyber: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--accent)));\n    --gradient-matrix: linear-gradient(180deg, hsl(var(--background)), hsl(var(--muted)));\n    --gradient-glow: linear-gradient(135deg, hsl(var(--neon-pink)), hsl(var(--neon-gold)));\n    --gradient-void: linear-gradient(45deg, hsl(var(--background)), hsl(var(--neon-blue) / 0.1));\n    --gradient-rainbow: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--secondary)), hsl(var(--accent)), hsl(var(--neon-pink)));\n    \n    /* Intense glow effects */\n    --glow-primary: 0 0 30px hsl(var(--primary) / 0.7), 0 0 60px hsl(var(--primary) / 0.3);\n    --glow-secondary: 0 0 30px hsl(var(--secondary) / 0.7), 0 0 60px hsl(var(--secondary) / 0.3);\n    --glow-accent: 0 0 30px hsl(var(--accent) / 0.7), 0 0 60px hsl(var(--accent) / 0.3);\n    --glow-pink: 0 0 30px hsl(var(--neon-pink) / 0.7), 0 0 60px hsl(var(--neon-pink) / 0.3);\n    --glow-gold: 0 0 30px hsl(var(--neon-gold) / 0.7), 0 0 60px hsl(var(--neon-gold) / 0.3);\n    --glow-blue: 0 0 30px hsl(var(--neon-blue) / 0.7), 0 0 60px hsl(var(--neon-blue) / 0.3);\n    --glow-orange: 0 0 30px hsl(var(--neon-orange) / 0.7), 0 0 60px hsl(var(--neon-orange) / 0.3);\n    \n    /* Epic box shadows */\n    --shadow-epic: 0 25px 50px -12px hsl(var(--primary) / 0.25);\n    --shadow-void: inset 0 2px 4px 0 hsl(var(--background) / 0.06);\n\n    /* Animation durations */\n    --transition-fast: 0.2s ease-out;\n    --transition-normal: 0.3s ease-out;\n    --transition-slow: 0.5s ease-out;\n  }\n\n  /* Stunning animated background */\n  @keyframes gradientShift {\n    0% { background-position: 0% 50%; }\n    50% { background-position: 100% 50%; }\n    100% { background-position: 0% 50%; }\n  }\n\n  @keyframes floatingParticles {\n    0%, 100% { transform: translateY(0px) rotate(0deg); }\n    33% { transform: translateY(-30px) rotate(120deg); }\n    66% { transform: translateY(15px) rotate(240deg); }\n  }\n\n  @keyframes matrixRain {\n    0% { transform: translateY(-100vh); opacity: 1; }\n    100% { transform: translateY(100vh); opacity: 0; }\n  }\n\n  @keyframes cyberpunkGlow {\n    0%, 100% { box-shadow: 0 0 20px hsl(var(--primary) / 0.5); }\n    50% { box-shadow: 0 0 40px hsl(var(--secondary) / 0.8), 0 0 60px hsl(var(--accent) / 0.3); }\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  /* Floating particles effect */\n  .floating-particles {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    z-index: -1;\n  }\n\n  .particle {\n    position: absolute;\n    width: 4px;\n    height: 4px;\n    background: hsl(var(--primary));\n    border-radius: 50%;\n    animation: floatingParticles 6s ease-in-out infinite;\n    box-shadow: 0 0 10px hsl(var(--primary) / 0.8);\n  }\n\n  /* Enhanced hover effects */\n  .enhanced-card {\n    @apply transition-all duration-300 ease-out;\n    transform: translateY(0);\n  }\n\n  .enhanced-card:hover {\n    transform: translateY(-10px);\n    box-shadow: 0 25px 50px -12px hsl(var(--primary) / 0.3);\n  }\n\n  /* Glowing text effects */\n  .glow-text {\n    text-shadow: 0 0 20px currentColor;\n    animation: textGlow 2s ease-in-out infinite alternate;\n  }\n\n  @keyframes textGlow {\n    from { text-shadow: 0 0 20px currentColor; }\n    to { text-shadow: 0 0 30px currentColor, 0 0 40px currentColor; }\n  }\n\n  /* Improved button animations */\n  .cyber-button {\n    @apply relative overflow-hidden;\n    transition: all 0.3s ease;\n  }\n\n  .cyber-button::before {\n    content: '';\n    @apply absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent;\n    transform: translateX(-100%);\n    transition: transform 0.6s ease;\n  }\n\n  .cyber-button:hover::before {\n    transform: translateX(100%);\n  }\n\n  /* Matrix-style falling text */\n  .matrix-text {\n    font-family: monospace;\n    color: hsl(var(--accent));\n    text-shadow: 0 0 10px currentColor;\n  }\n\n  /* Enhanced loading animation */\n  .pulse-glow {\n    animation: pulseGlow 2s ease-in-out infinite;\n  }\n\n  @keyframes pulseGlow {\n    0%, 100% { \n      box-shadow: 0 0 20px hsl(var(--primary) / 0.5);\n      transform: scale(1);\n    }\n    50% { \n      box-shadow: 0 0 40px hsl(var(--primary) / 0.8);\n      transform: scale(1.05);\n    }\n  }\n\n  body {\n    @apply bg-background text-foreground overflow-x-hidden;\n    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;\n  }\n\n  /* Enhanced Typography */\n  .font-mono {\n    font-family: 'JetBrains Mono', monospace;\n  }\n\n  h1, h2, h3 {\n    font-weight: 700;\n    letter-spacing: -0.025em;\n  }\n\n  .text-cyber-glow {\n    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--secondary)));\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    animation: textGlow 3s ease-in-out infinite alternate;\n  }\n\n  /* Improved responsive design */\n  @media (max-width: 768px) {\n    .text-6xl { font-size: 3rem; }\n    .text-8xl { font-size: 4rem; }\n    .text-4xl { font-size: 2rem; }\n  }\n\n  /* Enhanced cyberpunk scrollbar */\n  ::-webkit-scrollbar {\n    width: 12px;\n  }\n\n  ::-webkit-scrollbar-track {\n    @apply bg-muted;\n    border-radius: 6px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--secondary)));\n    border-radius: 6px;\n    box-shadow: 0 0 10px hsl(var(--primary) / 0.5);\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: linear-gradient(135deg, hsl(var(--secondary)), hsl(var(--accent)));\n    box-shadow: 0 0 15px hsl(var(--secondary) / 0.7);\n  }\n\n  ::-webkit-scrollbar-thumb {\n    @apply bg-primary rounded-full;\n    box-shadow: var(--glow-primary);\n  }\n}\n\n@layer components {\n  /* Neon text effects */\n  .text-neon-glow {\n    text-shadow: var(--glow-primary);\n  }\n\n  .text-cyber-glow {\n    text-shadow: \n      0 0 5px hsl(var(--primary)),\n      0 0 10px hsl(var(--primary)),\n      0 0 15px hsl(var(--primary));\n  }\n\n  /* Neon border effects */\n  .border-neon {\n    border: 1px solid hsl(var(--primary));\n    box-shadow: var(--glow-primary);\n  }\n\n  .border-cyber {\n    border: 2px solid transparent;\n    background: linear-gradient(var(--gradient-cyber)) border-box;\n    -webkit-mask: linear-gradient(#fff 0 0) padding-box, linear-gradient(#fff 0 0);\n    -webkit-mask-composite: exclude;\n  }\n\n  /* Background effects */\n  .bg-gradient-neon {\n    background: var(--gradient-neon);\n  }\n\n  .bg-gradient-cyber {\n    background: var(--gradient-cyber);\n  }\n\n  .bg-gradient-glow {\n    background: var(--gradient-glow);\n  }\n\n  /* Animation classes */\n  .animate-float {\n    animation: float 3s ease-in-out infinite;\n  }\n\n  .animate-pulse-glow {\n    animation: pulse-glow 2s ease-in-out infinite;\n  }\n\n  .animate-cyber-flicker {\n    animation: cyber-flicker 0.15s infinite linear alternate;\n  }\n\n  .animate-slide-up {\n    animation: slideUp 1s ease-out;\n  }\n\n  .animate-fade-in {\n    animation: fadeIn 1.5s ease-out;\n  }\n\n  .animate-matrix-rain {\n    animation: matrixRain 20s linear infinite;\n  }\n\n  /* Button variants */\n  .btn-cyber {\n    @apply bg-transparent border-2 border-primary text-primary px-8 py-3 rounded-lg;\n    @apply hover:bg-primary hover:text-primary-foreground;\n    @apply transition-all duration-300 ease-out;\n    @apply hover:shadow-[0_0_20px_theme(colors.primary)];\n    text-transform: uppercase;\n    font-weight: 600;\n    letter-spacing: 0.1em;\n  }\n\n  .btn-cyber-glow {\n    @apply btn-cyber;\n    box-shadow: var(--glow-primary);\n  }\n\n  .btn-neon-pink {\n    @apply bg-transparent border-2 px-8 py-3 rounded-lg transition-all duration-300;\n    border-color: hsl(var(--neon-pink));\n    color: hsl(var(--neon-pink));\n    text-transform: uppercase;\n    font-weight: 600;\n    letter-spacing: 0.1em;\n  }\n\n  .btn-neon-pink:hover {\n    background-color: hsl(var(--neon-pink));\n    color: hsl(var(--neon-pink-foreground));\n    box-shadow: var(--glow-pink);\n  }\n\n  .btn-neon-gold {\n    @apply bg-transparent border-2 px-8 py-3 rounded-lg transition-all duration-300;\n    border-color: hsl(var(--neon-gold));\n    color: hsl(var(--neon-gold));\n    text-transform: uppercase;\n    font-weight: 600;\n    letter-spacing: 0.1em;\n  }\n\n  .btn-neon-gold:hover {\n    background-color: hsl(var(--neon-gold));\n    color: hsl(var(--neon-gold-foreground));\n    box-shadow: var(--glow-gold);\n  }\n\n  /* Matrix-style background */\n  .matrix-bg {\n    background: linear-gradient(180deg, \n      rgba(0, 255, 255, 0.03) 0%, \n      rgba(0, 0, 0, 0.95) 50%, \n      rgba(255, 0, 255, 0.03) 100%\n    );\n  }\n\n  /* Glitch effects */\n  .glitch-text {\n    animation: glitch 2s infinite;\n  }\n\n  /* Utility classes */\n  .line-clamp-2 {\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n\n  .line-clamp-3 {\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n}\n\n@layer utilities {\n  /* Glow utilities */\n  .glow-primary {\n    box-shadow: var(--glow-primary);\n  }\n\n  .glow-secondary {\n    box-shadow: var(--glow-secondary);\n  }\n\n  .glow-accent {\n    box-shadow: var(--glow-accent);\n  }\n\n  .glow-pink {\n    box-shadow: var(--glow-pink);\n  }\n\n  .glow-gold {\n    box-shadow: var(--glow-gold);\n  }\n}\n\n/* Keyframe animations */\n@keyframes float {\n  0%, 100% {\n    transform: translateY(0px);\n  }\n  50% {\n    transform: translateY(-10px);\n  }\n}\n\n@keyframes pulse-glow {\n  0%, 100% {\n    box-shadow: 0 0 5px hsl(var(--primary) / 0.5);\n  }\n  50% {\n    box-shadow: 0 0 20px hsl(var(--primary) / 0.8), 0 0 30px hsl(var(--primary) / 0.6);\n  }\n}\n\n@keyframes cyber-flicker {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0.95;\n  }\n}\n\n@keyframes slideUp {\n  0% {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n@keyframes matrixRain {\n  0% {\n    transform: translateY(-100vh);\n  }\n  100% {\n    transform: translateY(100vh);\n  }\n}\n\n@keyframes glitch {\n  0%, 100% {\n    transform: translate(0);\n    filter: hue-rotate(0deg);\n  }\n  20% {\n    transform: translate(-2px, 2px);\n    filter: hue-rotate(90deg);\n  }\n  40% {\n    transform: translate(-2px, -2px);\n    filter: hue-rotate(180deg);\n  }\n  60% {\n    transform: translate(2px, 2px);\n    filter: hue-rotate(270deg);\n  }\n  80% {\n    transform: translate(2px, -2px);\n    filter: hue-rotate(360deg);\n  }\n}\n\n@keyframes gradient-shift {\n  0% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n  100% { background-position: 0% 50%; }\n}\n\n@keyframes red-glow {\n  0% {\n    text-shadow: 0 0 20px #ff0000, 0 0 30px #ff0000;\n  }\n  50% {\n    text-shadow: 0 0 30px #ff0000, 0 0 40px #ff0000, 0 0 50px #ff0000;\n  }\n  100% {\n    text-shadow: 0 0 20px #ff0000, 0 0 30px #ff0000;\n  }\n}","size_bytes":12455},"client/src/main.tsx":{"content":"import { createRoot } from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":158},"client/src/vite-env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n","size_bytes":38},"client/src/components/AboutSection.tsx":{"content":"import { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\n\ninterface AboutSectionProps {\n  config: any;\n}\n\nexport const AboutSection = ({ config }: AboutSectionProps) => {\n  if (!config.about.enabled) return null;\n\n  const badges = [\n    { text: 'Verified Developer', color: 'primary' },\n    { text: 'Trusted Partner', color: 'secondary' },\n    { text: 'Crypto Trader', color: 'accent' },\n    { text: 'AI Engineer', color: 'neon-pink' },\n    { text: 'Cloud Expert', color: 'neon-gold' }\n  ];\n\n  return (\n    <section id=\"about\" className=\"py-20 bg-background relative overflow-hidden\">\n      {/* Background decorations */}\n      <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_30%_20%,rgba(0,255,255,0.1)_0%,transparent_50%)] pointer-events-none\" />\n      <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_70%_80%,rgba(139,92,246,0.1)_0%,transparent_50%)] pointer-events-none\" />\n\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n          {/* Content */}\n          <div className=\"space-y-8\">\n            <div>\n              <h2 className=\"text-4xl md:text-5xl font-bold mb-6 text-cyber-glow\">\n                {config.about.title}\n              </h2>\n              <p className=\"text-lg text-muted-foreground leading-relaxed mb-8\">\n                {config.about.content}\n              </p>\n            </div>\n\n            {/* Badges */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-primary\">Certifications & Badges</h3>\n              <div className=\"flex flex-wrap gap-3\">\n                {badges.map((badge, index) => (\n                  <Badge\n                    key={index}\n                    className={`px-4 py-2 text-sm font-medium border-2 transition-all duration-300 hover:scale-105 ${\n                      badge.color === 'primary'\n                        ? 'border-primary text-primary bg-primary/10 hover:bg-primary hover:text-primary-foreground glow-primary'\n                        : badge.color === 'secondary'\n                        ? 'border-secondary text-secondary bg-secondary/10 hover:bg-secondary hover:text-secondary-foreground glow-secondary'\n                        : badge.color === 'accent'\n                        ? 'border-accent text-accent bg-accent/10 hover:bg-accent hover:text-accent-foreground glow-accent'\n                        : badge.color === 'neon-pink'\n                        ? 'border-neon-pink text-neon-pink bg-neon-pink/10 hover:bg-neon-pink hover:text-neon-pink-foreground glow-pink'\n                        : 'border-neon-gold text-neon-gold bg-neon-gold/10 hover:bg-neon-gold hover:text-neon-gold-foreground glow-gold'\n                    }`}\n                  >\n                    {badge.text}\n                  </Badge>\n                ))}\n              </div>\n            </div>\n\n            {/* Quick stats */}\n            <div className=\"grid grid-cols-3 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-primary mb-2\">5+</div>\n                <div className=\"text-sm text-muted-foreground\">Years Experience</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-secondary mb-2\">24/7</div>\n                <div className=\"text-sm text-muted-foreground\">Availability</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-accent mb-2\">100%</div>\n                <div className=\"text-sm text-muted-foreground\">Satisfaction</div>\n              </div>\n            </div>\n          </div>\n\n          {/* Profile Image & Cards */}\n          <div className=\"relative\">\n            <div className=\"relative z-10\">\n              {/* Main profile card */}\n              <Card className=\"p-8 bg-card/50 backdrop-blur-sm border-primary/20 glow-primary\">\n                <div className=\"text-center space-y-6\">\n                  <div className=\"relative inline-block\">\n                    <div className=\"w-48 h-48 mx-auto rounded-2xl bg-gradient-cyber p-1 glow-primary\">\n                      <img\n                        src={config.personal.profileImage}\n                        alt={config.personal.name}\n                        className=\"w-full h-full object-cover rounded-xl\"\n                      />\n                    </div>\n                    <div className=\"absolute -bottom-2 -right-2 bg-accent text-accent-foreground rounded-full w-12 h-12 flex items-center justify-center font-bold text-xl glow-accent\">\n                      ✓\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <h3 className=\"text-2xl font-bold text-foreground mb-2\">\n                      {config.personal.name}\n                    </h3>\n                    <p className=\"text-primary font-medium\">\n                      {config.personal.tagline}\n                    </p>\n                  </div>\n                </div>\n              </Card>\n\n              {/* Floating achievement cards */}\n              <div className=\"absolute -top-4 -left-4 bg-card/80 backdrop-blur-sm border border-secondary/20 rounded-lg p-4 glow-secondary animate-float\">\n                <div className=\"text-lg font-bold text-secondary\">$50K+</div>\n                <div className=\"text-xs text-muted-foreground\">Deals Closed</div>\n              </div>\n\n              <div className=\"absolute -bottom-4 -right-4 bg-card/80 backdrop-blur-sm border border-accent/20 rounded-lg p-4 glow-accent animate-float\" style={{ animationDelay: '1s' }}>\n                <div className=\"text-lg font-bold text-accent\">2500+</div>\n                <div className=\"text-xs text-muted-foreground\">Vouches</div>\n              </div>\n            </div>\n\n            {/* Background decorative elements */}\n            <div className=\"absolute -top-8 -right-8 w-32 h-32 bg-primary/20 rounded-full blur-3xl animate-pulse-glow\" />\n            <div className=\"absolute -bottom-8 -left-8 w-24 h-24 bg-secondary/20 rounded-full blur-2xl animate-pulse-glow\" style={{ animationDelay: '1s' }} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":6285},"client/src/components/AdvancedContactSection.tsx":{"content":"import { useState } from 'react';\nimport { Card } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Mail, MessageCircle, Send, Github, Clock, \n  CheckCircle, Zap, Globe, MapPin, Calendar\n} from 'lucide-react';\n\ninterface AdvancedContactSectionProps {\n  config: any;\n}\n\nexport const AdvancedContactSection = ({ config }: AdvancedContactSectionProps) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    project: '',\n    budget: '',\n    message: ''\n  });\n\n  if (!config.contact.enabled) return null;\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Handle form submission here\n    console.log('Form submitted:', formData);\n  };\n\n  const getSocialIcon = (iconName: string) => {\n    switch (iconName) {\n      case 'github': return Github;\n      case 'message-circle': return MessageCircle;\n      case 'send': return Send;\n      default: return Mail;\n    }\n  };\n\n  const contactMethods = [\n    {\n      icon: Mail,\n      title: 'Email',\n      value: config.contact.email,\n      link: `mailto:${config.contact.email}`,\n      color: 'text-primary'\n    },\n    {\n      icon: MessageCircle,\n      title: 'Discord',\n      value: config.contact.discord[0],\n      link: config.contact.socialLinks.find((link: any) => link.platform === 'Discord')?.url,\n      color: 'text-secondary'\n    },\n    {\n      icon: Send,\n      title: 'Telegram',\n      value: config.contact.socialLinks.find((link: any) => link.platform === 'Telegram')?.username,\n      link: config.contact.socialLinks.find((link: any) => link.platform === 'Telegram')?.url,\n      color: 'text-accent'\n    }\n  ];\n\n  const availability = [\n    { icon: CheckCircle, text: config.contact.availability, color: 'text-accent' },\n    { icon: Clock, text: `Response time: ${config.contact.responseTime}`, color: 'text-primary' },\n    { icon: Globe, text: 'Available worldwide', color: 'text-secondary' },\n    { icon: MapPin, text: config.personal.location, color: 'text-neon-pink' }\n  ];\n\n  return (\n    <section className=\"py-24 bg-muted/5 relative overflow-hidden\">\n      {/* Background effects */}\n      <div className=\"absolute inset-0 bg-[linear-gradient(45deg,transparent_40%,rgba(0,255,65,0.03)_50%,transparent_60%)] animate-pulse\" />\n      <div className=\"absolute top-0 left-1/4 w-96 h-96 bg-gradient-to-r from-accent/10 to-primary/10 rounded-full blur-3xl\" />\n      <div className=\"absolute bottom-0 right-1/4 w-96 h-96 bg-gradient-to-r from-secondary/10 to-neon-pink/10 rounded-full blur-3xl\" />\n      \n      <div className=\"max-w-7xl mx-auto px-6 relative z-10\">\n        {/* Section header */}\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-accent/10 border border-accent/20 mb-6\">\n            <Zap className=\"w-4 h-4 text-accent mr-2\" />\n            <span className=\"text-accent text-sm font-medium\">Let's Connect</span>\n          </div>\n          \n          <h2 className=\"text-5xl md:text-6xl font-bold mb-6\">\n            <span className=\"bg-gradient-to-r from-accent via-primary to-secondary bg-clip-text text-transparent\">\n              {config.contact.title}\n            </span>\n          </h2>\n          \n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Ready to bring your ideas to life? Let's discuss your project and create something amazing together.\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-2 gap-12\">\n          {/* Contact form */}\n          <Card className=\"p-8 bg-card/30 backdrop-blur-sm border-primary/10\">\n            <h3 className=\"text-2xl font-bold mb-6 text-foreground\">\n              Start Your Project\n            </h3>\n            \n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"grid md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-foreground mb-2\">\n                    Your Name *\n                  </label>\n                  <Input\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleInputChange}\n                    className=\"bg-background/50 border-primary/20 focus:border-primary/50\"\n                    placeholder=\"John Doe\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-foreground mb-2\">\n                    Email Address *\n                  </label>\n                  <Input\n                    name=\"email\"\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    className=\"bg-background/50 border-primary/20 focus:border-primary/50\"\n                    placeholder=\"john@example.com\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-foreground mb-2\">\n                    Project Type\n                  </label>\n                  <select\n                    name=\"project\"\n                    value={formData.project}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 bg-background/50 border border-primary/20 rounded-md focus:border-primary/50 focus:outline-none text-foreground\"\n                  >\n                    <option value=\"\">Select project type</option>\n                    <option value=\"web\">Web Application</option>\n                    <option value=\"mobile\">Mobile App</option>\n                    <option value=\"bot\">Discord Bot</option>\n                    <option value=\"crypto\">Crypto Trading Bot</option>\n                    <option value=\"blockchain\">Blockchain/DeFi</option>\n                    <option value=\"ai\">AI/ML Project</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-foreground mb-2\">\n                    Budget Range\n                  </label>\n                  <select\n                    name=\"budget\"\n                    value={formData.budget}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 bg-background/50 border border-primary/20 rounded-md focus:border-primary/50 focus:outline-none text-foreground\"\n                  >\n                    <option value=\"\">Select budget</option>\n                    <option value=\"500-1000\">$500 - $1,000</option>\n                    <option value=\"1000-2500\">$1,000 - $2,500</option>\n                    <option value=\"2500-5000\">$2,500 - $5,000</option>\n                    <option value=\"5000+\">$5,000+</option>\n                  </select>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-foreground mb-2\">\n                  Project Description *\n                </label>\n                <Textarea\n                  name=\"message\"\n                  value={formData.message}\n                  onChange={handleInputChange}\n                  className=\"bg-background/50 border-primary/20 focus:border-primary/50 min-h-[120px]\"\n                  placeholder=\"Tell me about your project, requirements, and timeline...\"\n                  required\n                />\n              </div>\n\n              <Button \n                type=\"submit\"\n                className=\"w-full bg-gradient-to-r from-primary to-secondary text-primary-foreground py-3 rounded-xl font-semibold hover:scale-105 transition-transform\"\n              >\n                Send Message\n                <Send className=\"w-4 h-4 ml-2\" />\n              </Button>\n            </form>\n          </Card>\n\n          {/* Contact info */}\n          <div className=\"space-y-8\">\n            {/* Contact methods */}\n            <Card className=\"p-6 bg-card/20 backdrop-blur-sm border-secondary/10\">\n              <h3 className=\"text-xl font-bold mb-6 text-foreground\">\n                Get in Touch\n              </h3>\n              \n              <div className=\"space-y-4\">\n                {contactMethods.map((method, index) => (\n                  <a\n                    key={index}\n                    href={method.link}\n                    className=\"flex items-center gap-4 p-4 rounded-lg bg-background/20 border border-primary/10 hover:border-primary/30 transition-all duration-300 hover:scale-105 group\"\n                  >\n                    <div className={`w-10 h-10 rounded-lg bg-${method.color.split('-')[1]}/10 border border-${method.color.split('-')[1]}/20 flex items-center justify-center group-hover:scale-110 transition-transform`}>\n                      <method.icon className={`w-5 h-5 ${method.color}`} />\n                    </div>\n                    <div>\n                      <div className=\"font-medium text-foreground\">\n                        {method.title}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        {method.value}\n                      </div>\n                    </div>\n                  </a>\n                ))}\n              </div>\n            </Card>\n\n            {/* Availability */}\n            <Card className=\"p-6 bg-card/20 backdrop-blur-sm border-accent/10\">\n              <h3 className=\"text-xl font-bold mb-6 text-foreground\">\n                Availability\n              </h3>\n              \n              <div className=\"space-y-4\">\n                {availability.map((item, index) => (\n                  <div key={index} className=\"flex items-center gap-3\">\n                    <item.icon className={`w-5 h-5 ${item.color}`} />\n                    <span className=\"text-foreground\">{item.text}</span>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"mt-6 p-4 bg-accent/5 border border-accent/20 rounded-lg\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <Calendar className=\"w-4 h-4 text-accent\" />\n                  <span className=\"font-medium text-accent\">Quick Response</span>\n                </div>\n                <p className=\"text-sm text-muted-foreground\">\n                  I typically respond to all inquiries within 2 hours during business hours.\n                </p>\n              </div>\n            </Card>\n\n            {/* Social links */}\n            <Card className=\"p-6 bg-card/20 backdrop-blur-sm border-neon-pink/10\">\n              <h3 className=\"text-xl font-bold mb-6 text-foreground\">\n                Follow Me\n              </h3>\n              \n              <div className=\"flex gap-4\">\n                {config.contact.socialLinks.map((social: any, index: number) => {\n                  const IconComponent = getSocialIcon(social.icon);\n                  return (\n                    <a\n                      key={index}\n                      href={social.url}\n                      className=\"w-12 h-12 rounded-xl bg-background/30 border border-primary/20 flex items-center justify-center text-primary hover:border-primary/50 hover:bg-primary/10 transition-all duration-300 hover:scale-110\"\n                      title={social.platform}\n                    >\n                      <IconComponent className=\"w-5 h-5\" />\n                    </a>\n                  );\n                })}\n              </div>\n            </Card>\n\n            {/* Status badge */}\n            <div className=\"text-center\">\n              <Badge className=\"bg-accent/10 text-accent border-accent/20 px-4 py-2\">\n                <div className=\"w-2 h-2 bg-accent rounded-full animate-pulse mr-2\" />\n                Currently accepting new projects\n              </Badge>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":12379},"client/src/components/AdvancedHeroSection.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { ChevronDown, Github, Mail, MessageCircle, Zap, Code, Rocket } from 'lucide-react';\nimport { MatrixBackground } from './MatrixBackground';\n\ninterface AdvancedHeroSectionProps {\n  config: any;\n}\n\nexport const AdvancedHeroSection = ({ config }: AdvancedHeroSectionProps) => {\n  const [currentRoleIndex, setCurrentRoleIndex] = useState(0);\n  const [currentText, setCurrentText] = useState('');\n  const [isTyping, setIsTyping] = useState(true);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  useEffect(() => {\n    if (!config.roles || config.roles.length === 0) return;\n    \n    const currentRole = config.roles[currentRoleIndex];\n    \n    const timeout = setTimeout(() => {\n      if (isDeleting) {\n        if (currentText === '') {\n          setIsDeleting(false);\n          setCurrentRoleIndex((prev) => (prev + 1) % config.roles.length);\n        } else {\n          setCurrentText(currentRole.substring(0, currentText.length - 1));\n        }\n      } else {\n        if (currentText === currentRole) {\n          setTimeout(() => setIsDeleting(true), 2000);\n        } else {\n          setCurrentText(currentRole.substring(0, currentText.length + 1));\n        }\n      }\n    }, isDeleting ? 50 : 100);\n\n    return () => clearTimeout(timeout);\n  }, [currentText, isDeleting, currentRoleIndex, config.roles]);\n\n  // Floating particles animation data\n  const particles = Array.from({ length: 50 }, (_, i) => ({\n    id: i,\n    size: Math.random() * 4 + 1,\n    x: Math.random() * 100,\n    y: Math.random() * 100,\n    delay: Math.random() * 5,\n    duration: Math.random() * 3 + 2,\n  }));\n\n  return (\n    <section className=\"relative min-h-screen flex items-center justify-center overflow-hidden\">\n      {/* Matrix Background */}\n      <MatrixBackground />\n      \n      {/* Animated geometric background */}\n      <div className=\"absolute inset-0 bg-[linear-gradient(rgba(0,255,255,0.03)_1px,transparent_1px),linear-gradient(90deg,rgba(0,255,255,0.03)_1px,transparent_1px)] bg-[size:100px_100px] animate-pulse opacity-30\" />\n      \n      {/* Floating particles */}\n      <div className=\"absolute inset-0\">\n        {particles.map((particle) => (\n          <div\n            key={particle.id}\n            className=\"absolute rounded-full bg-gradient-to-r from-primary to-secondary animate-float opacity-70\"\n            style={{\n              width: `${particle.size}px`,\n              height: `${particle.size}px`,\n              left: `${particle.x}%`,\n              top: `${particle.y}%`,\n              animationDelay: `${particle.delay}s`,\n              animationDuration: `${particle.duration}s`,\n              boxShadow: `0 0 ${particle.size * 2}px hsl(var(--primary) / 0.5)`,\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Gradient orbs */}\n      <div className=\"absolute top-20 -left-20 w-96 h-96 bg-gradient-to-r from-primary/20 to-secondary/20 rounded-full blur-3xl animate-pulse\" />\n      <div className=\"absolute bottom-20 -right-20 w-96 h-96 bg-gradient-to-r from-accent/20 to-neon-pink/20 rounded-full blur-3xl animate-pulse\" style={{ animationDelay: '1s' }} />\n\n      <div className=\"relative z-10 text-center max-w-5xl mx-auto px-6\">\n        {/* Status badge */}\n        <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-accent/10 border border-accent/20 mb-8 animate-fade-in\">\n          <div className=\"w-2 h-2 bg-accent rounded-full animate-pulse mr-2\" />\n          <span className=\"text-accent text-sm font-medium\">{config.personal.status}</span>\n        </div>\n\n        {/* Main heading with enhanced styling */}\n        <h1 className=\"text-7xl md:text-9xl font-bold mb-8 animate-slide-up\">\n          <span className=\"bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent animate-cyber-flicker\">\n            {config.personal.name.split(' ').map((word: string, index: number) => (\n              <span key={index} className=\"inline-block mr-4 hover:scale-105 transition-transform duration-300\">\n                {word}\n              </span>\n            ))}\n          </span>\n        </h1>\n\n        {/* Typing Animation */}\n        <div className=\"min-h-[6rem] flex items-center justify-center mb-8\">\n          <div className=\"text-3xl md:text-5xl font-bold text-center relative\">\n            <span className=\"bg-gradient-to-r from-red-500 via-red-600 to-red-700 bg-clip-text text-transparent\">\n              {currentText || 'MINECRAFT SERVER MASTER'}\n            </span>\n            <span className=\"animate-pulse text-red-500 ml-1\">|</span>\n          </div>\n        </div>\n\n        {/* Enhanced tagline */}\n        <p className=\"text-2xl md:text-3xl text-muted-foreground mb-6 max-w-3xl mx-auto animate-fade-in font-light\">\n          {config.personal.tagline}\n        </p>\n\n        {/* Bio */}\n        <p className=\"text-lg md:text-xl text-foreground/80 mb-12 max-w-2xl mx-auto animate-fade-in leading-relaxed\">\n          {config.personal.bio}\n        </p>\n\n        {/* Enhanced stats preview */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mb-12 max-w-4xl mx-auto\">\n          {[\n            { icon: Zap, label: 'Years Experience', value: `${config.personal.yearsExperience}+`, color: 'text-primary' },\n            { icon: Code, label: 'Projects', value: '500+', color: 'text-secondary' },\n            { icon: Rocket, label: 'Success Rate', value: '99%', color: 'text-accent' },\n            { icon: MessageCircle, label: 'Happy Clients', value: '1000+', color: 'text-neon-pink' },\n          ].map((stat, index) => (\n            <div key={index} className=\"bg-card/20 backdrop-blur-sm border border-primary/10 rounded-xl p-6 hover:border-primary/30 transition-all duration-300 group\">\n              <stat.icon className={`w-8 h-8 ${stat.color} mb-3 group-hover:scale-110 transition-transform`} />\n              <div className={`text-2xl font-bold ${stat.color} mb-1`}>{stat.value}</div>\n              <div className=\"text-sm text-muted-foreground\">{stat.label}</div>\n            </div>\n          ))}\n        </div>\n\n        {/* Enhanced CTA Buttons */}\n        <div className=\"flex flex-col sm:flex-row gap-6 justify-center items-center mb-16\">\n          {config.hero.ctaButtons.map((button: any, index: number) => (\n            <Button\n              key={index}\n              className={`\n                text-lg px-8 py-4 rounded-xl font-semibold transition-all duration-300 transform hover:scale-105\n                ${button.variant === 'primary' \n                  ? 'bg-gradient-to-r from-primary to-secondary text-primary-foreground hover:shadow-2xl' \n                  : button.variant === 'secondary'\n                  ? 'bg-transparent border-2 border-accent text-accent hover:bg-accent hover:text-accent-foreground'\n                  : 'bg-gradient-to-r from-neon-pink to-neon-gold text-neon-pink-foreground hover:shadow-2xl'\n                }\n              `}\n              asChild\n            >\n              <a href={button.link} className=\"inline-flex items-center gap-2\">\n                {button.variant === 'primary' && <Rocket className=\"w-5 h-5\" />}\n                {button.variant === 'secondary' && <Code className=\"w-5 h-5\" />}\n                {button.variant === 'neon' && <MessageCircle className=\"w-5 h-5\" />}\n                {button.text}\n              </a>\n            </Button>\n          ))}\n        </div>\n\n        {/* Social links */}\n        <div className=\"flex justify-center gap-6 mb-16\">\n          {config.contact.socialLinks.map((social: any, index: number) => (\n            <a\n              key={index}\n              href={social.url}\n              className=\"w-12 h-12 rounded-xl bg-card/20 backdrop-blur-sm border border-primary/20 flex items-center justify-center text-primary hover:border-primary/50 hover:bg-primary/10 transition-all duration-300 hover:scale-110\"\n            >\n              {social.icon === 'github' && <Github className=\"w-6 h-6\" />}\n              {social.icon === 'message-circle' && <MessageCircle className=\"w-6 h-6\" />}\n              {social.icon === 'send' && <Mail className=\"w-6 h-6\" />}\n            </a>\n          ))}\n        </div>\n\n        {/* Scroll indicator */}\n        <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce\">\n          <div className=\"flex flex-col items-center gap-2\">\n            <span className=\"text-sm text-muted-foreground\">Scroll Down</span>\n            <ChevronDown className=\"w-6 h-6 text-primary\" style={{ filter: 'drop-shadow(0 0 10px hsl(var(--primary)))' }} />\n          </div>\n        </div>\n      </div>\n\n      {/* Side decorative elements */}\n      <div className=\"absolute left-6 top-1/2 transform -translate-y-1/2 hidden lg:block\">\n        <div className=\"flex flex-col gap-4\">\n          {[...Array(5)].map((_, i) => (\n            <div key={i} className=\"w-1 h-16 bg-gradient-to-b from-primary to-transparent rounded-full\" style={{ animationDelay: `${i * 0.2}s` }} />\n          ))}\n        </div>\n      </div>\n      <div className=\"absolute right-6 top-1/2 transform -translate-y-1/2 hidden lg:block\">\n        <div className=\"flex flex-col gap-4\">\n          {[...Array(5)].map((_, i) => (\n            <div key={i} className=\"w-1 h-16 bg-gradient-to-b from-secondary to-transparent rounded-full\" style={{ animationDelay: `${i * 0.2}s` }} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":9435},"client/src/components/AdvancedProjectsSection.tsx":{"content":"import { useState } from 'react';\nimport { Card } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Github, ExternalLink, Star, Eye, GitFork } from 'lucide-react';\n\ninterface AdvancedProjectsSectionProps {\n  config: any;\n}\n\nexport const AdvancedProjectsSection = ({ config }: AdvancedProjectsSectionProps) => {\n  const [activeFilter, setActiveFilter] = useState('all');\n  \n  if (!config.projects.enabled) return null;\n\n  const categories = ['all', ...new Set(config.projects.featured.map((project: any) => project.category))];\n\n  const filteredProjects = activeFilter === 'all' \n    ? config.projects.featured \n    : config.projects.featured.filter((project: any) => project.category === activeFilter);\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case 'active': return 'bg-accent text-accent-foreground';\n      case 'deployed': return 'bg-primary text-primary-foreground';\n      case 'mainnet': return 'bg-neon-gold text-neon-gold-foreground';\n      default: return 'bg-secondary text-secondary-foreground';\n    }\n  };\n\n  return (\n    <section className=\"py-24 bg-muted/5 relative overflow-hidden\">\n      {/* Background effects */}\n      <div className=\"absolute inset-0 bg-[linear-gradient(45deg,transparent_40%,rgba(0,255,255,0.03)_50%,transparent_60%)] animate-pulse\" />\n      <div className=\"absolute top-0 left-1/4 w-96 h-96 bg-gradient-to-r from-primary/10 to-secondary/10 rounded-full blur-3xl\" />\n      <div className=\"absolute bottom-0 right-1/4 w-96 h-96 bg-gradient-to-r from-accent/10 to-neon-pink/10 rounded-full blur-3xl\" />\n      \n      <div className=\"max-w-7xl mx-auto px-6 relative z-10\">\n        {/* Section header */}\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-primary/10 border border-primary/20 mb-6\">\n            <Star className=\"w-4 h-4 text-primary mr-2\" />\n            <span className=\"text-primary text-sm font-medium\">Featured Work</span>\n          </div>\n          \n          <h2 className=\"text-5xl md:text-6xl font-bold mb-6\">\n            <span className=\"bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent\">\n              {config.projects.title}\n            </span>\n          </h2>\n          \n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            A collection of cutting-edge projects that showcase advanced development skills and innovation\n          </p>\n        </div>\n\n        {/* Category filters */}\n        <div className=\"flex flex-wrap justify-center gap-4 mb-12\">\n          {categories.map((category: string) => (\n            <Button\n              key={category}\n              variant={activeFilter === category ? \"default\" : \"outline\"}\n              onClick={() => setActiveFilter(category)}\n              className={`capitalize px-6 py-2 rounded-full transition-all duration-300 ${\n                activeFilter === category \n                  ? 'bg-primary text-primary-foreground shadow-lg' \n                  : 'border-primary/20 text-primary hover:border-primary/50 hover:bg-primary/10'\n              }`}\n            >\n              {category}\n            </Button>\n          ))}\n        </div>\n\n        {/* Projects grid */}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {filteredProjects.map((project: any, index: number) => (\n            <Card \n              key={project.id} \n              className=\"group bg-card/50 backdrop-blur-sm border-primary/10 hover:border-primary/30 transition-all duration-500 hover:scale-105 hover:shadow-2xl overflow-hidden\"\n            >\n              {/* Project image */}\n              <div className=\"relative overflow-hidden\">\n                <div className=\"h-48 bg-gradient-to-br from-primary/20 via-secondary/20 to-accent/20 flex items-center justify-center\">\n                  <div className=\"text-6xl opacity-50\">\n                    {project.category === 'crypto' && '₿'}\n                    {project.category === 'bots' && '🤖'}\n                    {project.category === 'blockchain' && '⛓️'}\n                    {project.category === 'web' && '🌐'}\n                    {project.category === 'mobile' && '📱'}\n                  </div>\n                </div>\n                \n                {/* Overlay on hover */}\n                <div className=\"absolute inset-0 bg-background/80 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center gap-4\">\n                  <Button size=\"sm\" variant=\"outline\" asChild>\n                    <a href={project.github} target=\"_blank\" rel=\"noopener noreferrer\">\n                      <Github className=\"w-4 h-4 mr-2\" />\n                      Code\n                    </a>\n                  </Button>\n                  <Button size=\"sm\" asChild>\n                    <a href={project.live} target=\"_blank\" rel=\"noopener noreferrer\">\n                      <ExternalLink className=\"w-4 h-4 mr-2\" />\n                      Live\n                    </a>\n                  </Button>\n                </div>\n\n                {/* Status badge */}\n                <div className=\"absolute top-4 right-4\">\n                  <Badge className={`${getStatusColor(project.status)} text-xs font-medium`}>\n                    {project.status}\n                  </Badge>\n                </div>\n              </div>\n\n              <div className=\"p-6\">\n                {/* Project title */}\n                <h3 className=\"text-xl font-bold text-foreground mb-3 group-hover:text-primary transition-colors\">\n                  {project.title}\n                </h3>\n\n                {/* Project description */}\n                <p className=\"text-muted-foreground mb-4 line-clamp-3 leading-relaxed\">\n                  {project.description}\n                </p>\n\n                {/* Tech stack */}\n                <div className=\"flex flex-wrap gap-2 mb-4\">\n                  {project.tech.slice(0, 4).map((tech: string, techIndex: number) => (\n                    <Badge \n                      key={techIndex} \n                      variant=\"secondary\" \n                      className=\"text-xs bg-muted/50 text-muted-foreground hover:bg-primary/10 hover:text-primary transition-colors\"\n                    >\n                      {tech}\n                    </Badge>\n                  ))}\n                  {project.tech.length > 4 && (\n                    <Badge variant=\"secondary\" className=\"text-xs bg-muted/50 text-muted-foreground\">\n                      +{project.tech.length - 4} more\n                    </Badge>\n                  )}\n                </div>\n\n                {/* Project stats */}\n                <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"flex items-center gap-1\">\n                      <Star className=\"w-4 h-4\" />\n                      <span>{Math.floor(Math.random() * 100) + 50}</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <GitFork className=\"w-4 h-4\" />\n                      <span>{Math.floor(Math.random() * 30) + 10}</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <Eye className=\"w-4 h-4\" />\n                      <span>{Math.floor(Math.random() * 500) + 100}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Card>\n          ))}\n        </div>\n\n        {/* Call to action */}\n        <div className=\"text-center mt-16\">\n          <div className=\"bg-card/20 backdrop-blur-sm border border-primary/20 rounded-2xl p-8 max-w-2xl mx-auto\">\n            <h3 className=\"text-2xl font-bold mb-4 text-foreground\">\n              Want to see more projects?\n            </h3>\n            <p className=\"text-muted-foreground mb-6\">\n              Check out my complete portfolio with detailed case studies and technical breakdowns\n            </p>\n            <Button className=\"bg-gradient-to-r from-primary to-secondary text-primary-foreground px-8 py-3 rounded-xl font-semibold hover:scale-105 transition-transform\">\n              View Full Portfolio\n            </Button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":8470},"client/src/components/AdvancedServicesSection.tsx":{"content":"import { Card } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Crown, Skull, Zap, Target, Shield, Brain, \n  Code, Globe, Smartphone, Bot, Coins, Cpu,\n  ArrowRight, Star, CheckCircle\n} from 'lucide-react';\n\ninterface AdvancedServicesSectionProps {\n  config: any;\n}\n\nexport const AdvancedServicesSection = ({ config }: AdvancedServicesSectionProps) => {\n  if (!config.services.enabled) return null;\n\n  const getServiceIcon = (iconName: string) => {\n    switch (iconName) {\n      case 'crown': return Crown;\n      case 'skull': return Skull;\n      case 'zap': return Zap;\n      case 'target': return Target;\n      case 'shield': return Shield;\n      case 'brain': return Brain;\n      default: return Code;\n    }\n  };\n\n  const getServiceColor = (index: number) => {\n    const colors = ['primary', 'secondary', 'accent', 'neon-pink', 'neon-gold', 'neon-blue'];\n    return colors[index % colors.length];\n  };\n\n  const features = [\n    'Custom Development',\n    '24/7 Support',\n    'Source Code Included',\n    'Documentation',\n    'Free Updates (6 months)',\n    'Money Back Guarantee'\n  ];\n\n  return (\n    <section className=\"py-24 bg-muted/5 relative overflow-hidden\">\n      {/* Background effects */}\n      <div className=\"absolute inset-0 bg-[linear-gradient(45deg,transparent_40%,rgba(139,92,246,0.03)_50%,transparent_60%)] animate-pulse\" />\n      <div className=\"absolute top-0 right-1/3 w-96 h-96 bg-gradient-to-r from-secondary/10 to-accent/10 rounded-full blur-3xl\" />\n      <div className=\"absolute bottom-0 left-1/3 w-96 h-96 bg-gradient-to-r from-neon-pink/10 to-neon-gold/10 rounded-full blur-3xl\" />\n      \n      <div className=\"max-w-7xl mx-auto px-6 relative z-10\">\n        {/* Section header */}\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-neon-gold/10 border border-neon-gold/20 mb-6\">\n            <Crown className=\"w-4 h-4 text-neon-gold mr-2\" />\n            <span className=\"text-neon-gold text-sm font-medium\">Elite Services</span>\n          </div>\n          \n          <h2 className=\"text-5xl md:text-6xl font-bold mb-6\">\n            <span className=\"bg-gradient-to-r from-neon-gold via-primary to-secondary bg-clip-text text-transparent\">\n              {config.services.title}\n            </span>\n          </h2>\n          \n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Premium development services that transform your ideas into digital reality\n          </p>\n        </div>\n\n        {/* Services grid */}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n          {config.services.items.map((service: any, index: number) => {\n            const IconComponent = getServiceIcon(service.icon);\n            const colorClass = getServiceColor(index);\n            \n            return (\n              <Card \n                key={index}\n                className=\"group p-8 bg-card/30 backdrop-blur-sm border-primary/10 hover:border-primary/30 transition-all duration-500 hover:scale-105 hover:shadow-2xl relative overflow-hidden\"\n              >\n                {/* Background gradient on hover */}\n                <div className={`absolute inset-0 bg-gradient-to-br from-${colorClass}/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500`} />\n                \n                <div className=\"relative z-10\">\n                  {/* Service icon */}\n                  <div className={`w-16 h-16 rounded-2xl bg-${colorClass}/10 border border-${colorClass}/20 flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300`}>\n                    <IconComponent className={`w-8 h-8 text-${colorClass}`} />\n                  </div>\n\n                  {/* Service title */}\n                  <h3 className=\"text-xl font-bold text-foreground mb-4 group-hover:text-primary transition-colors\">\n                    {service.title}\n                  </h3>\n\n                  {/* Service description */}\n                  <p className=\"text-muted-foreground mb-6 leading-relaxed\">\n                    {service.description}\n                  </p>\n\n                  {/* Pricing */}\n                  <div className=\"mb-6\">\n                    <div className={`text-2xl font-bold text-${colorClass} mb-1`}>\n                      {service.price}\n                    </div>\n                    <div className=\"text-sm text-muted-foreground\">\n                      Starting price\n                    </div>\n                  </div>\n\n                  {/* CTA Button */}\n                  <Button \n                    className={`w-full bg-transparent border border-${colorClass}/30 text-${colorClass} hover:bg-${colorClass}/10 transition-all duration-300 group-hover:border-${colorClass}/60`}\n                  >\n                    Get Started\n                    <ArrowRight className=\"w-4 h-4 ml-2\" />\n                  </Button>\n                </div>\n              </Card>\n            );\n          })}\n        </div>\n\n        {/* Features section */}\n        <div className=\"bg-card/20 backdrop-blur-sm border border-primary/20 rounded-2xl p-8 mb-16\">\n          <div className=\"text-center mb-8\">\n            <h3 className=\"text-3xl font-bold mb-4 text-foreground\">\n              What's Included\n            </h3>\n            <p className=\"text-muted-foreground\">\n              Every project comes with premium features and support\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {features.map((feature, index) => (\n              <div key={index} className=\"flex items-center gap-3\">\n                <CheckCircle className=\"w-5 h-5 text-accent\" />\n                <span className=\"text-foreground\">{feature}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Process section */}\n        <div className=\"text-center mb-16\">\n          <h3 className=\"text-3xl font-bold mb-8 text-foreground\">\n            Development Process\n          </h3>\n          \n          <div className=\"grid md:grid-cols-4 gap-8\">\n            {[\n              { icon: Brain, title: 'Planning', desc: 'Requirements analysis and architecture design' },\n              { icon: Code, title: 'Development', desc: 'Clean, efficient code implementation' },\n              { icon: Cpu, title: 'Testing', desc: 'Comprehensive testing and optimization' },\n              { icon: Zap, title: 'Deployment', desc: 'Launch and ongoing support' },\n            ].map((step, index) => (\n              <div key={index} className=\"group\">\n                <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-primary/10 border border-primary/20 flex items-center justify-center group-hover:scale-110 transition-transform duration-300\">\n                  <step.icon className=\"w-8 h-8 text-primary\" />\n                </div>\n                <h4 className=\"font-bold text-foreground mb-2\">{step.title}</h4>\n                <p className=\"text-sm text-muted-foreground\">{step.desc}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Call to action */}\n        <div className=\"text-center\">\n          <div className=\"bg-gradient-to-r from-primary/10 via-secondary/10 to-accent/10 border border-primary/20 rounded-2xl p-8 max-w-3xl mx-auto\">\n            <div className=\"flex justify-center mb-4\">\n              <Star className=\"w-8 h-8 text-neon-gold\" />\n            </div>\n            <h3 className=\"text-3xl font-bold mb-4 text-foreground\">\n              Ready to start your project?\n            </h3>\n            <p className=\"text-muted-foreground mb-6 text-lg\">\n              Let's discuss your requirements and create something amazing together\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button className=\"bg-gradient-to-r from-primary to-secondary text-primary-foreground px-8 py-3 rounded-xl font-semibold hover:scale-105 transition-transform\">\n                Start Project\n              </Button>\n              <Button variant=\"outline\" className=\"border-accent text-accent hover:bg-accent/10 px-8 py-3 rounded-xl\">\n                Free Consultation\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":8410},"client/src/components/AdvancedSkillsSection.tsx":{"content":"import { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Code, Zap, Shield, Cpu, Database, Globe } from 'lucide-react';\nimport { AnimatedSkillBar } from '@/components/AnimatedSkillBar';\n\ninterface AdvancedSkillsSectionProps {\n  config: any;\n}\n\nconst getSkillIcon = (skillName: string) => {\n  const name = skillName.toLowerCase();\n  if (name.includes('python') || name.includes('ai')) return '🐍';\n  if (name.includes('discord') || name.includes('bot')) return '🤖';\n  if (name.includes('security') || name.includes('ethical')) return '🛡️';\n  if (name.includes('web') || name.includes('frontend')) return '🌐';\n  if (name.includes('backend') || name.includes('server')) return '⚙️';\n  if (name.includes('database') || name.includes('sql')) return '💾';\n  if (name.includes('cloud') || name.includes('aws')) return '☁️';\n  if (name.includes('blockchain') || name.includes('crypto')) return '⛓️';\n  if (name.includes('mobile') || name.includes('app')) return '📱';\n  if (name.includes('devops') || name.includes('docker')) return '🔧';\n  return '⚡';\n};\n\nexport const AdvancedSkillsSection = ({ config }: AdvancedSkillsSectionProps) => {\n  if (!config.skills.enabled) return null;\n\n  const getCategoryIcon = (iconName: string) => {\n    switch (iconName) {\n      case 'code': return Code;\n      case 'sword': return Zap;\n      case 'shield': return Shield;\n      case 'database': return Database;\n      case 'globe': return Globe;\n      default: return Cpu;\n    }\n  };\n\n  const getCategoryColor = (index: number) => {\n    const colors = ['primary', 'secondary', 'accent', 'neon-pink', 'neon-gold'];\n    return colors[index % colors.length];\n  };\n\n  return (\n    <section className=\"py-24 bg-background relative overflow-hidden\">\n      {/* Background effects */}\n      <div className=\"absolute inset-0 bg-[linear-gradient(rgba(0,255,255,0.02)_1px,transparent_1px),linear-gradient(90deg,rgba(0,255,255,0.02)_1px,transparent_1px)] bg-[size:80px_80px]\" />\n      <div className=\"absolute top-1/4 left-0 w-96 h-96 bg-gradient-to-r from-primary/5 to-secondary/5 rounded-full blur-3xl\" />\n      <div className=\"absolute bottom-1/4 right-0 w-96 h-96 bg-gradient-to-r from-accent/5 to-neon-pink/5 rounded-full blur-3xl\" />\n      \n      <div className=\"max-w-7xl mx-auto px-6 relative z-10\">\n        {/* Section header */}\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-secondary/10 border border-secondary/20 mb-6\">\n            <Cpu className=\"w-4 h-4 text-secondary mr-2\" />\n            <span className=\"text-secondary text-sm font-medium\">Technical Expertise</span>\n          </div>\n          \n          <h2 className=\"text-5xl md:text-6xl font-bold mb-6\">\n            <span className=\"bg-gradient-to-r from-secondary via-accent to-neon-pink bg-clip-text text-transparent\">\n              {config.skills.title}\n            </span>\n          </h2>\n          \n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Mastery across the full spectrum of modern development technologies and frameworks\n          </p>\n        </div>\n\n        {/* Skills categories */}\n        <div className=\"grid lg:grid-cols-2 gap-12\">\n          {config.skills.categories.map((category: any, categoryIndex: number) => {\n            const IconComponent = getCategoryIcon(category.icon);\n            const colorClass = getCategoryColor(categoryIndex);\n            \n            return (\n              <Card \n                key={categoryIndex}\n                className=\"p-8 bg-card/30 backdrop-blur-sm border-primary/10 hover:border-primary/20 transition-all duration-500 group\"\n              >\n                {/* Category header */}\n                <div className=\"flex items-center gap-4 mb-8\">\n                  <div className={`w-12 h-12 rounded-xl bg-${colorClass}/10 border border-${colorClass}/20 flex items-center justify-center group-hover:scale-110 transition-transform`}>\n                    <IconComponent className={`w-6 h-6 text-${colorClass}`} />\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-foreground\">\n                    {category.name}\n                  </h3>\n                </div>\n\n                {/* Skills list */}\n                <div className=\"space-y-6\">\n                  {category.skills.map((skill: any, skillIndex: number) => (\n                    <AnimatedSkillBar \n                      key={skillIndex} \n                      skill={skill.name}\n                      level={skill.level}\n                      icon={getSkillIcon(skill.name)}\n                    />\n                  ))}\n                </div>\n              </Card>\n            );\n          })}\n        </div>\n\n        {/* Additional skills showcase */}\n        <div className=\"mt-16\">\n          <h3 className=\"text-3xl font-bold text-center mb-8 text-foreground\">\n            Additional Technologies\n          </h3>\n          \n          <div className=\"flex flex-wrap justify-center gap-3\">\n            {[\n              'Docker', 'Kubernetes', 'AWS', 'Azure', 'MongoDB', 'Redis', \n              'GraphQL', 'TensorFlow', 'PyTorch', 'Blockchain', 'Solidity',\n              'WebAssembly', 'Microservices', 'DevOps', 'CI/CD', 'Testing'\n            ].map((tech, index) => (\n              <Badge \n                key={index} \n                className=\"px-4 py-2 text-sm bg-muted/20 text-muted-foreground border border-primary/10 hover:border-primary/30 hover:bg-primary/5 hover:text-primary transition-all duration-300 cursor-default\"\n              >\n                {tech}\n              </Badge>\n            ))}\n          </div>\n        </div>\n\n        {/* Experience highlights */}\n        <div className=\"mt-16 grid md:grid-cols-3 gap-8\">\n          <Card className=\"p-6 text-center bg-card/20 backdrop-blur-sm border-accent/20 hover:border-accent/40 transition-all duration-300\">\n            <div className=\"text-3xl font-bold text-accent mb-2\">8+</div>\n            <div className=\"text-sm text-muted-foreground\">Years of Experience</div>\n          </Card>\n          \n          <Card className=\"p-6 text-center bg-card/20 backdrop-blur-sm border-primary/20 hover:border-primary/40 transition-all duration-300\">\n            <div className=\"text-3xl font-bold text-primary mb-2\">50+</div>\n            <div className=\"text-sm text-muted-foreground\">Technologies Mastered</div>\n          </Card>\n          \n          <Card className=\"p-6 text-center bg-card/20 backdrop-blur-sm border-secondary/20 hover:border-secondary/40 transition-all duration-300\">\n            <div className=\"text-3xl font-bold text-secondary mb-2\">500+</div>\n            <div className=\"text-sm text-muted-foreground\">Projects Completed</div>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":6861},"client/src/components/AdvancedTestimonialsSection.tsx":{"content":"import { useState } from 'react';\nimport { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Star, Quote, CheckCircle, TrendingUp, Clock, Award } from 'lucide-react';\n\ninterface AdvancedTestimonialsSectionProps {\n  config: any;\n}\n\nexport const AdvancedTestimonialsSection = ({ config }: AdvancedTestimonialsSectionProps) => {\n  const [hoveredIndex, setHoveredIndex] = useState<number | null>(null);\n  \n  if (!config.testimonials.enabled) return null;\n\n  const renderStars = (rating: number) => {\n    return [...Array(5)].map((_, i) => (\n      <Star\n        key={i}\n        className={`w-4 h-4 ${\n          i < rating ? 'text-neon-gold fill-current' : 'text-muted-foreground'\n        }`}\n      />\n    ));\n  };\n\n  const trustIndicators = [\n    {\n      icon: CheckCircle,\n      value: \"3000+\",\n      label: \"Total Vouches\",\n      color: \"text-accent\"\n    },\n    {\n      icon: TrendingUp,\n      value: \"99.8%\",\n      label: \"Satisfaction Rate\",\n      color: \"text-primary\"\n    },\n    {\n      icon: Clock,\n      value: \"< 2hrs\",\n      label: \"Response Time\",\n      color: \"text-secondary\"\n    },\n    {\n      icon: Award,\n      value: \"100%\",\n      label: \"Project Success\",\n      color: \"text-neon-gold\"\n    }\n  ];\n\n  return (\n    <section className=\"py-24 bg-background relative overflow-hidden\">\n      {/* Background effects */}\n      <div className=\"absolute inset-0 bg-[linear-gradient(rgba(139,92,246,0.02)_1px,transparent_1px),linear-gradient(90deg,rgba(139,92,246,0.02)_1px,transparent_1px)] bg-[size:60px_60px]\" />\n      <div className=\"absolute top-1/3 left-1/4 w-96 h-96 bg-gradient-to-r from-neon-pink/5 to-neon-gold/5 rounded-full blur-3xl\" />\n      <div className=\"absolute bottom-1/3 right-1/4 w-96 h-96 bg-gradient-to-r from-primary/5 to-secondary/5 rounded-full blur-3xl\" />\n      \n      <div className=\"max-w-7xl mx-auto px-6 relative z-10\">\n        {/* Section header */}\n        <div className=\"text-center mb-16\">\n          <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-neon-pink/10 border border-neon-pink/20 mb-6\">\n            <Quote className=\"w-4 h-4 text-neon-pink mr-2\" />\n            <span className=\"text-neon-pink text-sm font-medium\">Client Testimonials</span>\n          </div>\n          \n          <h2 className=\"text-5xl md:text-6xl font-bold mb-6\">\n            <span className=\"bg-gradient-to-r from-neon-pink via-neon-gold to-accent bg-clip-text text-transparent\">\n              {config.testimonials.title}\n            </span>\n          </h2>\n          \n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Real feedback from satisfied clients who trusted me with their projects\n          </p>\n        </div>\n\n        {/* Trust indicators */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mb-16\">\n          {trustIndicators.map((indicator, index) => (\n            <Card \n              key={index}\n              className=\"p-6 text-center bg-card/20 backdrop-blur-sm border-primary/10 hover:border-primary/30 transition-all duration-300 hover:scale-105\"\n            >\n              <indicator.icon className={`w-8 h-8 ${indicator.color} mx-auto mb-3`} />\n              <div className={`text-2xl font-bold ${indicator.color} mb-1`}>\n                {indicator.value}\n              </div>\n              <div className=\"text-sm text-muted-foreground\">\n                {indicator.label}\n              </div>\n            </Card>\n          ))}\n        </div>\n\n        {/* Testimonials grid */}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n          {config.testimonials.items.map((testimonial: any, index: number) => (\n            <Card \n              key={index}\n              className=\"group p-6 bg-card/30 backdrop-blur-sm border-primary/10 hover:border-primary/30 transition-all duration-500 hover:scale-105 hover:shadow-2xl relative overflow-hidden\"\n              onMouseEnter={() => setHoveredIndex(index)}\n              onMouseLeave={() => setHoveredIndex(null)}\n            >\n              {/* Background gradient on hover */}\n              <div className=\"absolute inset-0 bg-gradient-to-br from-primary/5 to-secondary/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500\" />\n              \n              <div className=\"relative z-10\">\n                {/* Quote icon */}\n                <div className=\"flex justify-between items-start mb-4\">\n                  <Quote className=\"w-8 h-8 text-primary/50\" />\n                  {testimonial.verified && (\n                    <Badge className=\"bg-accent/10 text-accent border-accent/20\">\n                      <CheckCircle className=\"w-3 h-3 mr-1\" />\n                      Verified\n                    </Badge>\n                  )}\n                </div>\n\n                {/* Rating */}\n                <div className=\"flex items-center gap-1 mb-4\">\n                  {renderStars(testimonial.rating)}\n                </div>\n\n                {/* Testimonial content */}\n                <blockquote className=\"text-foreground mb-6 leading-relaxed italic\">\n                  \"{testimonial.content}\"\n                </blockquote>\n\n                {/* Author info */}\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"w-10 h-10 rounded-full bg-gradient-to-r from-primary to-secondary flex items-center justify-center text-primary-foreground font-bold\">\n                    {testimonial.name.charAt(0)}\n                  </div>\n                  <div>\n                    <div className=\"font-semibold text-foreground\">\n                      {testimonial.name}\n                    </div>\n                    <div className=\"text-sm text-muted-foreground\">\n                      {testimonial.role}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Hover effect */}\n                {hoveredIndex === index && (\n                  <div className=\"absolute top-2 right-2\">\n                    <div className=\"w-2 h-2 bg-primary rounded-full animate-pulse\" />\n                  </div>\n                )}\n              </div>\n            </Card>\n          ))}\n        </div>\n\n        {/* Featured testimonial */}\n        <Card className=\"p-8 bg-gradient-to-r from-card/50 to-card/30 backdrop-blur-sm border-primary/20 max-w-4xl mx-auto\">\n          <div className=\"text-center\">\n            <Quote className=\"w-12 h-12 text-primary mx-auto mb-6\" />\n            <blockquote className=\"text-2xl text-foreground mb-6 leading-relaxed italic\">\n              \"Working with DEATH was an absolute game-changer for our business. The level of expertise and attention to detail exceeded all expectations.\"\n            </blockquote>\n            <div className=\"flex justify-center mb-4\">\n              {renderStars(5)}\n            </div>\n            <div className=\"font-semibold text-foreground mb-1\">\n              Tech Entrepreneur\n            </div>\n            <div className=\"text-sm text-muted-foreground\">\n              Fortune 500 Company\n            </div>\n          </div>\n        </Card>\n\n        {/* Social proof */}\n        <div className=\"mt-16 text-center\">\n          <h3 className=\"text-2xl font-bold mb-8 text-foreground\">\n            Trusted by developers worldwide\n          </h3>\n          \n          <div className=\"flex flex-wrap justify-center gap-8 opacity-60\">\n            {['GitHub', 'Discord', 'Reddit', 'Stack Overflow', 'LinkedIn'].map((platform, index) => (\n              <div key={index} className=\"text-lg font-semibold text-muted-foreground hover:text-primary transition-colors cursor-default\">\n                {platform}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":7757},"client/src/components/HeroSection.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { ChevronDown } from 'lucide-react';\n\ninterface HeroSectionProps {\n  config: any;\n}\n\nexport const HeroSection = ({ config }: HeroSectionProps) => {\n  const [currentRoleIndex, setCurrentRoleIndex] = useState(0);\n  const [isVisible, setIsVisible] = useState(true);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setIsVisible(false);\n      setTimeout(() => {\n        setCurrentRoleIndex((prev) => (prev + 1) % config.roles.length);\n        setIsVisible(true);\n      }, 200);\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, [config.roles.length]);\n\n  const currentRole = config.roles[currentRoleIndex];\n\n  return (\n    <section className=\"relative min-h-screen flex items-center justify-center overflow-hidden bg-background\">\n      {/* Animated background grid */}\n      <div className=\"absolute inset-0 bg-[linear-gradient(rgba(0,255,255,0.1)_1px,transparent_1px),linear-gradient(90deg,rgba(0,255,255,0.1)_1px,transparent_1px)] bg-[size:50px_50px] animate-pulse-glow\" />\n      \n      {/* Floating particles */}\n      <div className=\"absolute inset-0\">\n        {[...Array(20)].map((_, i) => (\n          <div\n            key={i}\n            className=\"absolute w-1 h-1 bg-primary rounded-full animate-float\"\n            style={{\n              left: `${Math.random() * 100}%`,\n              top: `${Math.random() * 100}%`,\n              animationDelay: `${Math.random() * 3}s`,\n              animationDuration: `${3 + Math.random() * 2}s`\n            }}\n          />\n        ))}\n      </div>\n\n      <div className=\"relative z-10 text-center max-w-4xl mx-auto px-6\">\n        {/* Main heading */}\n        <h1 className=\"text-6xl md:text-8xl font-bold mb-6 text-cyber-glow animate-slide-up\">\n          {config.personal.name.split(' ').map((word: string, index: number) => (\n            <span\n              key={index}\n              className={index === 0 ? 'text-primary' : 'text-foreground'}\n            >\n              {word}{index === 0 ? ' ' : ''}\n            </span>\n          ))}\n        </h1>\n\n        {/* Rotating roles */}\n        <div className=\"h-20 flex items-center justify-center mb-8\">\n          <div\n            className={`text-2xl md:text-4xl font-bold transition-all duration-200 ${\n              isVisible \n                ? 'opacity-100 transform translate-y-0' \n                : 'opacity-0 transform translate-y-4'\n            }`}\n          >\n            <span className=\"bg-gradient-cyber bg-clip-text text-transparent animate-cyber-flicker\">\n              {currentRole}\n            </span>\n          </div>\n        </div>\n\n        {/* Hero subtitle */}\n        <p className=\"text-xl md:text-2xl text-muted-foreground mb-8 max-w-2xl mx-auto animate-fade-in\">\n          {config.hero.subtitle}\n        </p>\n\n        {/* Tagline */}\n        <p className=\"text-lg md:text-xl text-foreground/80 mb-12 animate-fade-in\">\n          {config.personal.tagline}\n        </p>\n\n        {/* CTA Buttons */}\n        <div className=\"flex flex-col sm:flex-row gap-6 justify-center items-center mb-16\">\n          {config.hero.ctaButtons.map((button: any, index: number) => (\n            <Button\n              key={index}\n              className={\n                button.variant === 'primary' \n                  ? 'btn-cyber-glow text-lg px-8 py-4' \n                  : 'btn-neon-pink text-lg px-8 py-4'\n              }\n              asChild\n            >\n              <a href={button.link}>{button.text}</a>\n            </Button>\n          ))}\n        </div>\n\n        {/* Scroll indicator */}\n        <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce\">\n          <ChevronDown className=\"w-8 h-8 text-primary glow-primary\" />\n        </div>\n      </div>\n\n      {/* Side decorative elements */}\n      <div className=\"absolute left-4 top-1/2 transform -translate-y-1/2\">\n        <div className=\"w-1 h-32 bg-gradient-cyber rounded-full glow-primary\" />\n      </div>\n      <div className=\"absolute right-4 top-1/2 transform -translate-y-1/2\">\n        <div className=\"w-1 h-32 bg-gradient-cyber rounded-full glow-primary\" />\n      </div>\n\n      {/* Stats preview */}\n      <div className=\"absolute bottom-20 left-6 hidden lg:block\">\n        <div className=\"bg-card/20 backdrop-blur-sm border border-primary/20 rounded-lg p-4 glow-primary\">\n          <div className=\"text-2xl font-bold text-primary\">{config.personal.yearsExperience}+</div>\n          <div className=\"text-sm text-muted-foreground\">Years Experience</div>\n        </div>\n      </div>\n\n      <div className=\"absolute bottom-20 right-6 hidden lg:block\">\n        <div className=\"bg-card/20 backdrop-blur-sm border border-secondary/20 rounded-lg p-4 glow-secondary\">\n          <div className=\"text-2xl font-bold text-secondary\">500+</div>\n          <div className=\"text-sm text-muted-foreground\">Projects Done</div>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":4988},"client/src/components/MatrixBackground.tsx":{"content":"import { useEffect, useRef } from 'react';\n\nexport const MatrixBackground = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    const matrix = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789@#$%^&*()*&^%+-/~{[|`]}\";\n    const matrixArray = matrix.split(\"\");\n\n    const fontSize = 10;\n    const columns = canvas.width / fontSize;\n\n    const drops: number[] = [];\n    for (let x = 0; x < columns; x++) {\n      drops[x] = 1;\n    }\n\n    function draw() {\n      if (!ctx || !canvas) return;\n      \n      ctx.fillStyle = 'rgba(0, 0, 0, 0.04)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.fillStyle = '#00ffff';\n      ctx.font = fontSize + 'px monospace';\n\n      for (let i = 0; i < drops.length; i++) {\n        const text = matrixArray[Math.floor(Math.random() * matrixArray.length)];\n        ctx.fillText(text, i * fontSize, drops[i] * fontSize);\n\n        if (drops[i] * fontSize > canvas.height && Math.random() > 0.975) {\n          drops[i] = 0;\n        }\n        drops[i]++;\n      }\n    }\n\n    const interval = setInterval(draw, 35);\n\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      clearInterval(interval);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"fixed inset-0 pointer-events-none opacity-10 z-0\"\n    />\n  );\n};","size_bytes":1714},"client/src/components/Navigation.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Menu, X } from 'lucide-react';\nimport { Link, useLocation } from 'react-router-dom';\n\ninterface NavigationProps {\n  config: any;\n}\n\nexport const Navigation = ({ config }: NavigationProps) => {\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 50);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const location = useLocation();\n  \n  const navItems = [\n    { label: 'Home', href: '/' },\n    { label: 'Portfolio', href: '/portfolio' },\n    { label: 'Skills', href: '/skills' },\n    { label: 'Services', href: '/services' },\n    { label: 'Contact', href: '/contact' },\n    { label: 'Blog', href: '/blog' }\n  ];\n\n  return (\n    <nav\n      className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${\n        isScrolled\n          ? 'bg-background/90 backdrop-blur-md border-b border-primary/20 glow-primary'\n          : 'bg-transparent'\n      }`}\n    >\n      <div className=\"max-w-7xl mx-auto px-6 py-4\">\n        <div className=\"flex items-center justify-between\">\n          {/* Logo/Brand */}\n          <div className=\"flex items-center\">\n            <span className=\"text-2xl font-bold text-primary text-cyber-glow\">\n              DEATH\n            </span>\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navItems.map((item) => (\n              <Link\n                key={item.label}\n                to={item.href}\n                className={`text-foreground hover:text-primary transition-colors duration-300 font-medium relative group ${\n                  location.pathname === item.href ? 'text-primary' : ''\n                }`}\n              >\n                {item.label}\n                <span className=\"absolute bottom-0 left-0 w-0 h-0.5 bg-primary transition-all duration-300 group-hover:w-full glow-primary\" />\n              </Link>\n            ))}\n          </div>\n\n          {/* CTA Button */}\n          <div className=\"hidden md:block\">\n            <Button asChild className=\"bg-primary text-primary-foreground hover:bg-primary/90\">\n              <Link to=\"/contact\">Hire Me</Link>\n            </Button>\n          </div>\n\n          {/* Mobile Menu Button */}\n          <button\n            className=\"md:hidden text-primary\"\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          >\n            {isMobileMenuOpen ? <X size={24} /> : <Menu size={24} />}\n          </button>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMobileMenuOpen && (\n          <div className=\"md:hidden absolute top-full left-0 right-0 bg-background/95 backdrop-blur-md border-b border-primary/20\">\n            <div className=\"px-6 py-4 space-y-4\">\n              {navItems.map((item) => (\n                <Link\n                  key={item.label}\n                  to={item.href}\n                  className=\"block text-foreground hover:text-primary transition-colors duration-300 font-medium py-2\"\n                  onClick={() => setIsMobileMenuOpen(false)}\n                >\n                  {item.label}\n                </Link>\n              ))}\n              <Button asChild className=\"bg-primary text-primary-foreground w-full mt-4\">\n                <Link to=\"/contact\" onClick={() => setIsMobileMenuOpen(false)}>Hire Me</Link>\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};","size_bytes":3705},"client/src/components/ProjectsSection.tsx":{"content":"import { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Github, ExternalLink, Crown, Skull, Zap, Shield } from 'lucide-react';\n\ninterface ProjectsSectionProps {\n  config: any;\n}\n\nexport const ProjectsSection = ({ config }: ProjectsSectionProps) => {\n  if (!config.projects.enabled) return null;\n\n  const getStatusIcon = (status: string) => {\n    switch(status) {\n      case 'ACTIVE': return Zap;\n      case 'DEPLOYED': return Crown;\n      case 'MAINNET': return Shield;\n      default: return Skull;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch(status) {\n      case 'ACTIVE': return 'text-accent border-accent glow-accent';\n      case 'DEPLOYED': return 'text-primary border-primary glow-primary';\n      case 'MAINNET': return 'text-secondary border-secondary glow-secondary';\n      default: return 'text-foreground border-muted';\n    }\n  };\n\n  return (\n    <section className=\"py-32 bg-black relative overflow-hidden\">\n      \n      {/* Background Effects */}\n      <div className=\"absolute inset-0\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-black via-gray-900/5 to-black\" />\n        <div className=\"absolute inset-0 bg-[linear-gradient(rgba(255,0,255,0.02)_1px,transparent_1px),linear-gradient(90deg,rgba(255,0,255,0.02)_1px,transparent_1px)] bg-[size:150px_150px] animate-pulse-glow\" />\n      </div>\n\n      <div className=\"relative max-w-7xl mx-auto px-6\">\n        \n        {/* Section Header */}\n        <div className=\"text-center mb-20\">\n          <div className=\"flex justify-center mb-6\">\n            <Skull className=\"w-16 h-16 text-primary animate-cyber-flicker glow-primary\" />\n          </div>\n          <h2 className=\"text-5xl md:text-7xl font-bold mb-8 text-cyber-glow\">\n            {config.projects.title}\n          </h2>\n          <p className=\"text-xl text-foreground/70 max-w-3xl mx-auto mb-8\">\n            Witness the digital weapons forged in the depths of code. Each project a testament to elite craftsmanship.\n          </p>\n          <div className=\"w-32 h-1 bg-gradient-cyber mx-auto rounded-full glow-primary\" />\n        </div>\n\n        {/* Featured Projects Grid */}\n        <div className=\"grid lg:grid-cols-3 gap-8 mb-16\">\n          {config.projects.featured.map((project: any, index: number) => {\n            const StatusIcon = getStatusIcon(project.status);\n            return (\n              <Card \n                key={project.id}\n                className=\"group relative overflow-hidden bg-black/80 backdrop-blur-md border border-primary/20 hover:border-primary/40 transition-all duration-500 hover:scale-105 glow-primary\"\n              >\n                {/* Project Image */}\n                <div className=\"relative h-64 overflow-hidden\">\n                  <img \n                    src={project.image} \n                    alt={project.title}\n                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover:scale-110\"\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/90 via-black/30 to-transparent\" />\n                  \n                  {/* Status Badge */}\n                  <Badge className={`absolute top-4 right-4 flex items-center gap-2 ${getStatusColor(project.status)}`}>\n                    <StatusIcon className=\"w-4 h-4\" />\n                    {project.status}\n                  </Badge>\n                  \n                  {/* Featured Badge */}\n                  {project.featured && (\n                    <Badge className=\"absolute top-4 left-4 bg-gradient-glow text-black font-bold border-0\">\n                      <Crown className=\"w-4 h-4 mr-1\" />\n                      ELITE\n                    </Badge>\n                  )}\n                </div>\n\n                <div className=\"p-8\">\n                  <h3 className=\"text-2xl font-bold mb-4 text-cyber-glow group-hover:text-primary transition-colors\">\n                    {project.title}\n                  </h3>\n                  \n                  <p className=\"text-foreground/80 mb-6 line-clamp-3 leading-relaxed\">\n                    {project.description}\n                  </p>\n\n                  {/* Tech Stack */}\n                  <div className=\"flex flex-wrap gap-2 mb-8\">\n                    {project.tech.map((tech: string, techIndex: number) => (\n                      <Badge \n                        key={techIndex}\n                        variant=\"outline\"\n                        className=\"text-xs border-muted/30 text-foreground/60 hover:border-primary hover:text-primary transition-colors\"\n                      >\n                        {tech}\n                      </Badge>\n                    ))}\n                  </div>\n\n                  {/* Action Buttons */}\n                  <div className=\"flex gap-3\">\n                    <Button \n                      size=\"sm\" \n                      className=\"btn-cyber-glow flex-1\"\n                      asChild\n                    >\n                      <a href={project.live} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <ExternalLink className=\"w-4 h-4 mr-2\" />\n                        DEPLOY\n                      </a>\n                    </Button>\n                    <Button \n                      size=\"sm\" \n                      className=\"btn-neon-pink\"\n                      asChild\n                    >\n                      <a href={project.github} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Github className=\"w-4 h-4\" />\n                      </a>\n                    </Button>\n                  </div>\n                </div>\n\n                {/* Hover Glow Effect */}\n                <div className=\"absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none\">\n                  <div className=\"absolute inset-0 bg-gradient-cyber opacity-5\" />\n                </div>\n              </Card>\n            );\n          })}\n        </div>\n\n        {/* Additional Project Stats */}\n        <div className=\"grid md:grid-cols-3 gap-8 mb-16\">\n          <Card className=\"p-8 text-center bg-black/60 backdrop-blur-md border border-primary/30 glow-primary group hover:scale-105 transition-all duration-300\">\n            <div className=\"text-4xl font-bold text-primary mb-2 group-hover:text-cyber-glow transition-colors\">\n              100+\n            </div>\n            <div className=\"text-foreground/70 font-medium\">\n              GitHub Repositories\n            </div>\n          </Card>\n          \n          <Card className=\"p-8 text-center bg-black/60 backdrop-blur-md border border-secondary/30 glow-secondary group hover:scale-105 transition-all duration-300\">\n            <div className=\"text-4xl font-bold text-secondary mb-2 group-hover:text-cyber-glow transition-colors\">\n              50K+\n            </div>\n            <div className=\"text-foreground/70 font-medium\">\n              Lines of Code\n            </div>\n          </Card>\n          \n          <Card className=\"p-8 text-center bg-black/60 backdrop-blur-md border border-accent/30 glow-accent group hover:scale-105 transition-all duration-300\">\n            <div className=\"text-4xl font-bold text-accent mb-2 group-hover:text-cyber-glow transition-colors\">\n              24/7\n            </div>\n            <div className=\"text-foreground/70 font-medium\">\n              System Uptime\n            </div>\n          </Card>\n        </div>\n\n        {/* Call to Action */}\n        <div className=\"text-center\">\n          <h3 className=\"text-3xl md:text-4xl font-bold mb-6 text-cyber-glow\">\n            READY TO BUILD YOUR <span className=\"text-primary\">DIGITAL EMPIRE</span>?\n          </h3>\n          <p className=\"text-xl text-foreground/70 mb-8 max-w-2xl mx-auto\">\n            Let the Reaper forge your vision into reality. Contact me for custom development.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button className=\"btn-cyber-glow text-lg px-8 py-4\" asChild>\n              <a href=\"/contact\">\n                <Skull className=\"w-5 h-5 mr-2\" />\n                HIRE THE REAPER\n              </a>\n            </Button>\n            <Button className=\"btn-neon-gold text-lg px-8 py-4\" asChild>\n              <a href=\"/portfolio\">\n                <Crown className=\"w-5 h-5 mr-2\" />\n                VIEW FULL ARSENAL\n              </a>\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Floating decorative elements */}\n      <div className=\"absolute top-32 left-8 w-3 h-24 bg-gradient-cyber rounded-full glow-primary animate-float opacity-40\" />\n      <div className=\"absolute bottom-32 right-8 w-3 h-24 bg-gradient-cyber rounded-full glow-secondary animate-float opacity-40\" style={{ animationDelay: '2s' }} />\n    </section>\n  );\n};","size_bytes":8895},"client/src/components/StatsSection.tsx":{"content":"import { useEffect, useState, useRef } from 'react';\nimport { Card } from '@/components/ui/card';\n\ninterface StatsSectionProps {\n  config: any;\n}\n\nconst AnimatedCounter = ({ end, suffix = '', duration = 2000 }: { end: number; suffix?: string; duration?: number }) => {\n  const [count, setCount] = useState(0);\n  const [isVisible, setIsVisible] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n        }\n      },\n      { threshold: 0.5 }\n    );\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => observer.disconnect();\n  }, []);\n\n  useEffect(() => {\n    if (!isVisible) return;\n\n    let start = 0;\n    const increment = end / (duration / 16);\n    \n    const timer = setInterval(() => {\n      start += increment;\n      if (start >= end) {\n        setCount(end);\n        clearInterval(timer);\n      } else {\n        setCount(Math.floor(start));\n      }\n    }, 16);\n\n    return () => clearInterval(timer);\n  }, [isVisible, end, duration]);\n\n  return (\n    <div ref={ref} className=\"text-4xl md:text-5xl font-bold\">\n      {count.toLocaleString()}{suffix}\n    </div>\n  );\n};\n\nexport const StatsSection = ({ config }: StatsSectionProps) => {\n  if (!config.stats.enabled) return null;\n\n  const getIconColor = (index: number) => {\n    const colors = ['text-primary', 'text-secondary', 'text-accent', 'text-neon-pink'];\n    return colors[index % colors.length];\n  };\n\n  const getGlowClass = (index: number) => {\n    const glows = ['glow-primary', 'glow-secondary', 'glow-accent', 'glow-pink'];\n    return glows[index % glows.length];\n  };\n\n  return (\n    <section className=\"py-20 bg-muted/5 relative overflow-hidden\">\n      {/* Background effects */}\n      <div className=\"absolute inset-0 bg-[linear-gradient(45deg,transparent_40%,rgba(0,255,255,0.05)_50%,transparent_60%)] animate-pulse-glow\" />\n      \n      <div className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-bold mb-6 text-cyber-glow\">\n            {config.stats.title}\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n            Real numbers that showcase our impact and success in the industry\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8\">\n          {config.stats.items.map((stat: any, index: number) => (\n            <Card\n              key={index}\n              className={`p-8 text-center bg-card/50 backdrop-blur-sm border-primary/20 hover:border-primary/40 transition-all duration-300 hover:scale-105 ${getGlowClass(index)} group`}\n            >\n              <div className=\"space-y-4\">\n                {/* Icon placeholder - you can add Lucide icons here based on stat.icon */}\n                <div className={`text-3xl ${getIconColor(index)} group-hover:animate-pulse-glow`}>\n                  {stat.icon === 'dollar-sign' && '💰'}\n                  {stat.icon === 'check-circle' && '✅'}\n                  {stat.icon === 'star' && '⭐'}\n                  {stat.icon === 'heart' && '❤️'}\n                </div>\n                \n                <div className={`${getIconColor(index)} group-hover:text-cyber-glow transition-all duration-300`}>\n                  <AnimatedCounter \n                    end={parseInt(stat.number)} \n                    suffix={stat.suffix}\n                    duration={2000 + index * 200}\n                  />\n                </div>\n                \n                <div className=\"text-muted-foreground font-medium\">\n                  {stat.label}\n                </div>\n              </div>\n            </Card>\n          ))}\n        </div>\n\n        {/* Additional achievement highlights */}\n        <div className=\"mt-16 grid md:grid-cols-3 gap-8\">\n          <Card className=\"p-6 bg-card/30 backdrop-blur-sm border-secondary/20 glow-secondary\">\n            <div className=\"text-center space-y-2\">\n              <div className=\"text-2xl font-bold text-secondary\">Verified Developer</div>\n              <div className=\"text-sm text-muted-foreground\">Certified and trusted by major platforms</div>\n            </div>\n          </Card>\n          \n          <Card className=\"p-6 bg-card/30 backdrop-blur-sm border-accent/20 glow-accent\">\n            <div className=\"text-center space-y-2\">\n              <div className=\"text-2xl font-bold text-accent\">5+ Years</div>\n              <div className=\"text-sm text-muted-foreground\">Professional development experience</div>\n            </div>\n          </Card>\n          \n          <Card className=\"p-6 bg-card/30 backdrop-blur-sm border-neon-pink/20 glow-pink\">\n            <div className=\"text-center space-y-2\">\n              <div className=\"text-2xl font-bold text-neon-pink\">100K+ Lines</div>\n              <div className=\"text-sm text-muted-foreground\">Of clean, production-ready code</div>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":5098},"client/src/components/TestimonialsSection.tsx":{"content":"import { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Star, Shield, CheckCircle } from 'lucide-react';\n\ninterface TestimonialsSectionProps {\n  config: any;\n}\n\nexport const TestimonialsSection = ({ config }: TestimonialsSectionProps) => {\n  if (!config.testimonials.enabled) return null;\n\n  const renderStars = (rating: number) => {\n    return Array.from({ length: 5 }, (_, i) => (\n      <Star \n        key={i} \n        className={`w-5 h-5 ${\n          i < rating \n            ? 'text-neon-gold fill-neon-gold glow-gold' \n            : 'text-muted-foreground/30'\n        }`} \n      />\n    ));\n  };\n\n  return (\n    <section className=\"py-32 bg-black relative overflow-hidden\">\n      \n      {/* Background Effects */}\n      <div className=\"absolute inset-0\">\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black via-gray-900/5 to-black\" />\n        <div className=\"absolute inset-0 bg-[linear-gradient(rgba(255,215,0,0.02)_1px,transparent_1px),linear-gradient(90deg,rgba(255,215,0,0.02)_1px,transparent_1px)] bg-[size:120px_120px] animate-pulse-glow\" />\n      </div>\n\n      <div className=\"relative max-w-7xl mx-auto px-6\">\n        \n        {/* Section Header */}\n        <div className=\"text-center mb-20\">\n          <div className=\"flex justify-center mb-6\">\n            <Shield className=\"w-16 h-16 text-neon-gold animate-cyber-flicker glow-gold\" />\n          </div>\n          <h2 className=\"text-5xl md:text-7xl font-bold mb-8 text-cyber-glow\">\n            {config.testimonials.title}\n          </h2>\n          <p className=\"text-xl text-foreground/70 max-w-3xl mx-auto mb-8\">\n            Words from those who witnessed the Reaper's digital dominance firsthand.\n          </p>\n          <div className=\"w-32 h-1 bg-gradient-glow mx-auto rounded-full glow-gold\" />\n        </div>\n\n        {/* Testimonials Grid */}\n        <div className=\"grid md:grid-cols-3 gap-8 mb-16\">\n          {config.testimonials.items.map((testimonial: any, index: number) => (\n            <Card \n              key={index}\n              className=\"group relative p-8 bg-black/80 backdrop-blur-md border border-neon-gold/20 hover:border-neon-gold/40 transition-all duration-500 hover:scale-105 glow-gold\"\n            >\n              {/* Quote Mark */}\n              <div className=\"absolute top-4 left-4 text-6xl text-neon-gold/20 font-serif leading-none\">\n                \"\n              </div>\n              \n              {/* Verified Badge */}\n              {testimonial.verified && (\n                <Badge className=\"absolute top-4 right-4 bg-accent/20 text-accent border-accent/30 flex items-center gap-1\">\n                  <CheckCircle className=\"w-3 h-3\" />\n                  VERIFIED\n                </Badge>\n              )}\n\n              <div className=\"relative z-10\">\n                {/* Rating */}\n                <div className=\"flex items-center gap-1 mb-6\">\n                  {renderStars(testimonial.rating)}\n                </div>\n\n                {/* Content */}\n                <p className=\"text-foreground/90 mb-8 leading-relaxed italic text-lg\">\n                  \"{testimonial.content}\"\n                </p>\n\n                {/* Author */}\n                <div className=\"space-y-2\">\n                  <div className=\"font-bold text-neon-gold text-lg\">\n                    {testimonial.name}\n                  </div>\n                  <div className=\"text-foreground/60 text-sm\">\n                    {testimonial.role}\n                  </div>\n                </div>\n              </div>\n\n              {/* Hover Effect */}\n              <div className=\"absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none\">\n                <div className=\"absolute inset-0 bg-gradient-glow opacity-5\" />\n              </div>\n            </Card>\n          ))}\n        </div>\n\n        {/* Trust Indicators */}\n        <div className=\"grid md:grid-cols-4 gap-8 mb-16\">\n          <Card className=\"p-6 text-center bg-black/60 backdrop-blur-md border border-primary/30 glow-primary\">\n            <div className=\"text-3xl font-bold text-primary mb-2\">3,333+</div>\n            <div className=\"text-foreground/70 text-sm\">Total Vouches</div>\n          </Card>\n          \n          <Card className=\"p-6 text-center bg-black/60 backdrop-blur-md border border-secondary/30 glow-secondary\">\n            <div className=\"text-3xl font-bold text-secondary mb-2\">99.9%</div>\n            <div className=\"text-foreground/70 text-sm\">Satisfaction Rate</div>\n          </Card>\n          \n          <Card className=\"p-6 text-center bg-black/60 backdrop-blur-md border border-accent/30 glow-accent\">\n            <div className=\"text-3xl font-bold text-accent mb-2\">24H</div>\n            <div className=\"text-foreground/70 text-sm\">Response Time</div>\n          </Card>\n          \n          <Card className=\"p-6 text-center bg-black/60 backdrop-blur-md border border-neon-gold/30 glow-gold\">\n            <div className=\"text-3xl font-bold text-neon-gold mb-2\">100%</div>\n            <div className=\"text-foreground/70 text-sm\">Project Success</div>\n          </Card>\n        </div>\n\n        {/* Call to Action */}\n        <div className=\"text-center\">\n          <h3 className=\"text-3xl md:text-4xl font-bold mb-6 text-cyber-glow\">\n            JOIN THE <span className=\"text-neon-gold\">ELITE CLIENTELE</span>\n          </h3>\n          <p className=\"text-xl text-foreground/70 mb-8 max-w-2xl mx-auto\">\n            Experience the legendary service that has earned thousands of vouches and satisfied clients.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button className=\"btn-cyber-glow text-lg px-8 py-4\" asChild>\n              <a href=\"/contact\">START YOUR PROJECT</a>\n            </Button>\n            <Button className=\"btn-neon-gold text-lg px-8 py-4\" asChild>\n              <a href=\"/services\">VIEW SERVICES</a>\n            </Button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":6085},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/Blog.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Navigation } from '@/components/Navigation';\nimport { Button } from '@/components/ui/button';\nimport { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { \n  Calendar, Clock, Eye, Heart, Share2, Search, \n  Filter, TrendingUp, Zap, Shield, Brain, Code \n} from 'lucide-react';\n\nconst Blog = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [config, setConfig] = useState(null);\n\n  useEffect(() => {\n    fetch('/config.json')\n      .then(response => response.json())\n      .then(data => setConfig(data))\n      .catch(error => console.error('Error loading config:', error));\n  }, []);\n\n  if (!config) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-background\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-primary border-t-transparent rounded-full animate-spin mx-auto mb-4 glow-primary\"></div>\n          <p className=\"text-xl text-primary\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const categories = [\n    { id: 'all', name: 'ALL POSTS', count: 24 },\n    { id: 'crypto', name: 'CRYPTO WARFARE', count: 8 },\n    { id: 'development', name: 'CODE MASTERY', count: 12 },\n    { id: 'ai', name: 'AI NECROMANCY', count: 6 },\n    { id: 'tutorials', name: 'TUTORIALS', count: 10 },\n    { id: 'industry', name: 'TECH INSIGHTS', count: 5 }\n  ];\n\n  const blogPosts = [\n    {\n      id: 1,\n      title: \"Building the Ultimate Crypto Trading Bot: A Reaper's Guide\",\n      excerpt: \"Learn how I built an AI-powered trading bot that generated $50K+ in profits using Python, machine learning, and advanced market analysis techniques.\",\n      content: \"Full tutorial on creating profitable trading algorithms...\",\n      category: 'crypto',\n      author: 'DEATH',\n      date: '2024-01-15',\n      readTime: '12 min',\n      views: 15420,\n      likes: 892,\n      image: '/placeholder.svg',\n      featured: true,\n      tags: ['Python', 'AI', 'Trading', 'Cryptocurrency', 'Machine Learning']\n    },\n    {\n      id: 2,\n      title: \"Discord Bot Empire: From Zero to 10,000 Servers\",\n      excerpt: \"The complete journey of building and scaling Discord bots that serve millions of users. Architecture, optimization, and monetization strategies revealed.\",\n      content: \"Step-by-step guide to Discord bot development...\",\n      category: 'development',\n      author: 'DEATH',\n      date: '2024-01-10',\n      readTime: '18 min',\n      views: 23150,\n      likes: 1247,\n      image: '/placeholder.svg',\n      featured: true,\n      tags: ['Discord.py', 'Python', 'Scaling', 'Architecture', 'Monetization']\n    },\n    {\n      id: 3,\n      title: \"AI Code Generation: Teaching Machines to Write Perfect Code\",\n      excerpt: \"Exploring the latest advances in AI-powered code generation. How I built a system that writes production-ready code from natural language descriptions.\",\n      content: \"Deep dive into AI code generation techniques...\",\n      category: 'ai',\n      author: 'DEATH', \n      date: '2024-01-08',\n      readTime: '15 min',\n      views: 18730,\n      likes: 956,\n      image: '/placeholder.svg',\n      featured: false,\n      tags: ['AI', 'OpenAI', 'Code Generation', 'Natural Language Processing']\n    },\n    {\n      id: 4,\n      title: \"Cybersecurity in Web3: Protecting Your Digital Assets\",\n      excerpt: \"Essential security practices for blockchain applications. Smart contract auditing, wallet security, and protecting against common attack vectors.\",\n      content: \"Comprehensive security guide for Web3 developers...\",\n      category: 'tutorials',\n      author: 'DEATH',\n      date: '2024-01-05',\n      readTime: '20 min',\n      views: 12450,\n      likes: 743,\n      image: '/placeholder.svg',\n      featured: false,\n      tags: ['Security', 'Blockchain', 'Smart Contracts', 'Web3', 'Auditing']\n    },\n    {\n      id: 5,\n      title: \"The Future of Full-Stack Development: My Tech Stack for 2024\",\n      excerpt: \"Breaking down my current technology stack and why these tools dominate the development landscape. From React to Python, databases to deployment.\",\n      content: \"Detailed analysis of modern development tools...\",\n      category: 'development',\n      author: 'DEATH',\n      date: '2024-01-03',\n      readTime: '10 min',\n      views: 9876,\n      likes: 567,\n      image: '/placeholder.svg',\n      featured: false,\n      tags: ['Full-Stack', 'React', 'Python', 'Tech Stack', 'Development']\n    },\n    {\n      id: 6,\n      title: \"DeFi Revolution: Building the Next Generation of Finance\",\n      excerpt: \"How decentralized finance is reshaping the financial world. Case studies from my latest DeFi projects and what's coming next in the space.\",\n      content: \"Analysis of DeFi trends and future predictions...\",\n      category: 'industry',\n      author: 'DEATH',\n      date: '2024-01-01',\n      readTime: '14 min',\n      views: 14320,\n      likes: 821,\n      image: '/placeholder.svg',\n      featured: false,\n      tags: ['DeFi', 'Blockchain', 'Finance', 'Cryptocurrency', 'Innovation']\n    }\n  ];\n\n  const filteredPosts = blogPosts.filter(post => {\n    const matchesSearch = post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         post.excerpt.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         post.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));\n    const matchesCategory = selectedCategory === 'all' || post.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  });\n\n  const featuredPosts = blogPosts.filter(post => post.featured);\n\n  const getCategoryColor = (category: string) => {\n    switch(category) {\n      case 'crypto': return 'text-primary border-primary';\n      case 'development': return 'text-secondary border-secondary';\n      case 'ai': return 'text-accent border-accent';\n      case 'tutorials': return 'text-neon-pink border-neon-pink';\n      case 'industry': return 'text-neon-gold border-neon-gold';\n      default: return 'text-foreground border-muted';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation config={config} />\n      \n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-[linear-gradient(rgba(128,0,128,0.1)_1px,transparent_1px),linear-gradient(90deg,rgba(128,0,128,0.1)_1px,transparent_1px)] bg-[size:50px_50px] animate-pulse-glow\" />\n        \n        <div className=\"relative max-w-7xl mx-auto px-6 text-center\">\n          <h1 className=\"text-6xl md:text-8xl font-bold mb-6 text-cyber-glow\">\n            <span className=\"text-primary\">REAPER'S</span> CODEX\n          </h1>\n          <p className=\"text-2xl text-muted-foreground mb-12\">\n            Chronicles from the Digital Underworld - Insights, Tutorials & Tech Mastery\n          </p>\n          \n          {/* Search & Filter */}\n          <div className=\"max-w-2xl mx-auto space-y-6\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-muted-foreground w-5 h-5\" />\n              <Input\n                placeholder=\"Search the archives...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-12 py-4 text-lg bg-background/50 border-primary/30 focus:border-primary\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Categories */}\n      <section className=\"py-8 bg-muted/5\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"flex flex-wrap gap-4 justify-center\">\n            {categories.map((category) => (\n              <Button\n                key={category.id}\n                onClick={() => setSelectedCategory(category.id)}\n                variant={selectedCategory === category.id ? \"default\" : \"outline\"}\n                className={`${\n                  selectedCategory === category.id \n                    ? 'btn-cyber-glow' \n                    : 'btn-cyber'\n                }`}\n              >\n                {category.name}\n                <Badge className=\"ml-2\" variant=\"secondary\">\n                  {category.count}\n                </Badge>\n              </Button>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Posts */}\n      {selectedCategory === 'all' && (\n        <section className=\"py-12\">\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <h2 className=\"text-3xl font-bold mb-8 text-center text-cyber-glow\">\n              <span className=\"text-primary\">FEATURED</span> CHRONICLES\n            </h2>\n            \n            <div className=\"grid md:grid-cols-2 gap-8\">\n              {featuredPosts.map((post) => (\n                <Card \n                  key={post.id}\n                  className=\"group overflow-hidden bg-card/50 backdrop-blur-sm border-primary/20 hover:border-primary/40 transition-all duration-500 hover:scale-105 glow-primary\"\n                >\n                  <div className=\"relative h-64 overflow-hidden\">\n                    <img \n                      src={post.image} \n                      alt={post.title}\n                      className=\"w-full h-full object-cover transition-transform duration-500 group-hover:scale-110\"\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-background/80 to-transparent\" />\n                    <Badge className=\"absolute top-4 left-4 bg-gradient-cyber text-background\">\n                      FEATURED\n                    </Badge>\n                    <Badge className={`absolute top-4 right-4 ${getCategoryColor(post.category)}`} variant=\"outline\">\n                      {post.category.toUpperCase()}\n                    </Badge>\n                  </div>\n\n                  <div className=\"p-6\">\n                    <h3 className=\"text-2xl font-bold mb-3 text-cyber-glow group-hover:text-primary transition-colors line-clamp-2\">\n                      {post.title}\n                    </h3>\n                    \n                    <p className=\"text-muted-foreground mb-4 line-clamp-3\">\n                      {post.excerpt}\n                    </p>\n\n                    <div className=\"flex items-center justify-between text-sm text-muted-foreground mb-4\">\n                      <div className=\"flex items-center gap-4\">\n                        <span className=\"flex items-center gap-1\">\n                          <Calendar className=\"w-4 h-4\" />\n                          {new Date(post.date).toLocaleDateString()}\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <Clock className=\"w-4 h-4\" />\n                          {post.readTime}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center gap-3\">\n                        <span className=\"flex items-center gap-1\">\n                          <Eye className=\"w-4 h-4\" />\n                          {post.views.toLocaleString()}\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <Heart className=\"w-4 h-4\" />\n                          {post.likes}\n                        </span>\n                      </div>\n                    </div>\n\n                    <div className=\"flex flex-wrap gap-2 mb-4\">\n                      {post.tags.slice(0, 3).map((tag, index) => (\n                        <Badge \n                          key={index}\n                          variant=\"outline\"\n                          className=\"text-xs border-muted text-muted-foreground\"\n                        >\n                          {tag}\n                        </Badge>\n                      ))}\n                    </div>\n\n                    <Button className=\"w-full btn-cyber-glow\">\n                      READ FULL POST\n                    </Button>\n                  </div>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* All Posts */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <h2 className=\"text-3xl font-bold mb-12 text-center text-cyber-glow\">\n            {selectedCategory === 'all' ? 'ALL' : selectedCategory.toUpperCase()} CHRONICLES\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {filteredPosts.map((post) => (\n              <Card \n                key={post.id}\n                className=\"group overflow-hidden bg-card/30 backdrop-blur-sm border-primary/20 hover:border-primary/40 transition-all duration-300 hover:scale-105\"\n              >\n                <div className=\"relative h-48 overflow-hidden\">\n                  <img \n                    src={post.image} \n                    alt={post.title}\n                    className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-110\"\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-background/60 to-transparent\" />\n                  <Badge className={`absolute top-3 right-3 ${getCategoryColor(post.category)}`} variant=\"outline\">\n                    {post.category.toUpperCase()}\n                  </Badge>\n                </div>\n\n                <div className=\"p-6\">\n                  <h3 className=\"text-xl font-bold mb-3 text-foreground group-hover:text-primary transition-colors line-clamp-2\">\n                    {post.title}\n                  </h3>\n                  \n                  <p className=\"text-muted-foreground mb-4 line-clamp-2 text-sm\">\n                    {post.excerpt}\n                  </p>\n\n                  <div className=\"flex items-center justify-between text-xs text-muted-foreground mb-4\">\n                    <span className=\"flex items-center gap-1\">\n                      <Clock className=\"w-3 h-3\" />\n                      {post.readTime}\n                    </span>\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"flex items-center gap-1\">\n                        <Eye className=\"w-3 h-3\" />\n                        {(post.views / 1000).toFixed(1)}K\n                      </span>\n                      <span className=\"flex items-center gap-1\">\n                        <Heart className=\"w-3 h-3\" />\n                        {post.likes}\n                      </span>\n                    </div>\n                  </div>\n\n                  <Button size=\"sm\" className=\"w-full btn-cyber\">\n                    READ MORE\n                  </Button>\n                </div>\n              </Card>\n            ))}\n          </div>\n\n          {filteredPosts.length === 0 && (\n            <div className=\"text-center py-20\">\n              <h3 className=\"text-2xl font-bold text-muted-foreground mb-4\">\n                No Chronicles Found\n              </h3>\n              <p className=\"text-muted-foreground\">\n                Try adjusting your search or category filter.\n              </p>\n            </div>\n          )}\n        </div>\n      </section>\n\n      {/* Newsletter */}\n      <section className=\"py-20 bg-muted/5\">\n        <div className=\"max-w-4xl mx-auto px-6 text-center\">\n          <h2 className=\"text-4xl md:text-6xl font-bold mb-6 text-cyber-glow\">\n            JOIN THE <span className=\"text-primary\">CODEX</span>\n          </h2>\n          <p className=\"text-xl text-muted-foreground mb-8\">\n            Get exclusive insights, tutorials, and updates delivered directly to your digital fortress.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 max-w-md mx-auto\">\n            <Input \n              placeholder=\"Enter your email...\"\n              className=\"flex-1 bg-background/50 border-primary/30 focus:border-primary\"\n            />\n            <Button className=\"btn-cyber-glow\">\n              SUBSCRIBE\n            </Button>\n          </div>\n          \n          <p className=\"text-sm text-muted-foreground mt-4\">\n            No spam, only legendary content. Unsubscribe anytime.\n          </p>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Blog;","size_bytes":16426},"client/src/pages/Contact.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Navigation } from '@/components/Navigation';\nimport { Button } from '@/components/ui/button';\nimport { Card } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Badge } from '@/components/ui/badge';\nimport { useToast } from '@/hooks/use-toast';\nimport { \n  MessageCircle, Mail, Clock, Zap, Shield, Crown, \n  Send, User, FileText, DollarSign \n} from 'lucide-react';\n\nconst Contact = () => {\n  const { toast } = useToast();\n  const [config, setConfig] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    service: '',\n    budget: '',\n    timeline: '',\n    message: ''\n  });\n\n  useEffect(() => {\n    fetch('/config.json')\n      .then(response => response.json())\n      .then(data => setConfig(data))\n      .catch(error => console.error('Error loading config:', error));\n  }, []);\n\n  if (!config) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-background\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-primary border-t-transparent rounded-full animate-spin mx-auto mb-4 glow-primary\"></div>\n          <p className=\"text-xl text-primary\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      const response = await fetch('/api/contact', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        toast({\n          title: \"MESSAGE SENT SUCCESSFULLY!\",\n          description: result.message || \"I'll respond within 24 hours with a battle plan.\",\n        });\n        setFormData({ name: '', email: '', service: '', budget: '', timeline: '', message: '' });\n      } else {\n        const error = await response.json();\n        toast({\n          title: \"MESSAGE FAILED\",\n          description: error.error || \"Failed to send message. Please try again.\",\n          variant: \"destructive\",\n        });\n      }\n    } catch (error) {\n      toast({\n        title: \"CONNECTION ERROR\",\n        description: \"Failed to send message. Please check your connection and try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const contactMethods = [\n    {\n      icon: MessageCircle,\n      title: \"DISCORD REALM\",\n      primary: \"@vouch.darkex\",\n      secondary: \"@catuop\",\n      description: \"Primary communication channel\",\n      color: \"text-primary\",\n      glow: \"glow-primary\"\n    },\n    {\n      icon: Mail,\n      title: \"EMAIL FORTRESS\",\n      primary: \"deathop.og@gmail.com\",\n      secondary: \"Available 24/7\",\n      description: \"Professional inquiries\",\n      color: \"text-secondary\", \n      glow: \"glow-secondary\"\n    },\n    {\n      icon: Clock,\n      title: \"RESPONSE TIME\",\n      primary: \"< 24 Hours\",\n      secondary: \"Usually within 6h\",\n      description: \"Lightning-fast replies\",\n      color: \"text-accent\",\n      glow: \"glow-accent\"\n    }\n  ];\n\n  const services = [\n    \"Web Development\",\n    \"Discord Bot Creation\", \n    \"Crypto Trading Bots\",\n    \"Mobile Applications\",\n    \"Blockchain/DeFi\",\n    \"AI/ML Solutions\",\n    \"Custom Software\",\n    \"Consultation\"\n  ];\n\n  const budgetRanges = [\n    \"Under $1,000\",\n    \"$1,000 - $5,000\", \n    \"$5,000 - $10,000\",\n    \"$10,000 - $25,000\",\n    \"$25,000+\",\n    \"Let's Discuss\"\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation config={config} />\n      \n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-[linear-gradient(rgba(255,215,0,0.1)_1px,transparent_1px),linear-gradient(90deg,rgba(255,215,0,0.1)_1px,transparent_1px)] bg-[size:40px_40px] animate-pulse-glow\" />\n        \n        <div className=\"relative max-w-7xl mx-auto px-6 text-center\">\n          <h1 className=\"text-6xl md:text-8xl font-bold mb-6 text-cyber-glow\">\n            <span className=\"text-primary\">SUMMON</span> THE REAPER\n          </h1>\n          <p className=\"text-2xl text-muted-foreground mb-8\">\n            Ready to forge your digital empire? Let's begin the conquest.\n          </p>\n          <div className=\"flex flex-wrap justify-center gap-4\">\n            <Badge className=\"text-lg px-4 py-2 bg-gradient-cyber text-background\">\n              D E A T H\n            </Badge>\n            <Badge className=\"text-lg px-4 py-2 bg-gradient-glow text-background\">\n              8+ YEARS EXPERIENCE\n            </Badge>\n            <Badge className=\"text-lg px-4 py-2 bg-primary text-primary-foreground\">\n              500+ PROJECTS\n            </Badge>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"max-w-7xl mx-auto px-6 py-20\">\n        <div className=\"grid lg:grid-cols-2 gap-12\">\n          \n          {/* Contact Form */}\n          <Card className=\"p-8 bg-card/50 backdrop-blur-sm border-primary/20 glow-primary\">\n            <h2 className=\"text-3xl font-bold mb-8 text-cyber-glow flex items-center gap-3\">\n              <Crown className=\"w-8 h-8 text-primary\" />\n              PROJECT BRIEFING\n            </h2>\n            \n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-bold mb-2 text-primary\">\n                    NAME *\n                  </label>\n                  <Input\n                    required\n                    value={formData.name}\n                    onChange={(e) => setFormData({...formData, name: e.target.value})}\n                    placeholder=\"Your name or alias\"\n                    className=\"bg-background/50 border-primary/30 focus:border-primary\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-bold mb-2 text-primary\">\n                    EMAIL *\n                  </label>\n                  <Input\n                    type=\"email\"\n                    required\n                    value={formData.email}\n                    onChange={(e) => setFormData({...formData, email: e.target.value})}\n                    placeholder=\"your@email.com\"\n                    className=\"bg-background/50 border-primary/30 focus:border-primary\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-bold mb-2 text-primary\">\n                  SERVICE REQUIRED *\n                </label>\n                <select\n                  required\n                  value={formData.service}\n                  onChange={(e) => setFormData({...formData, service: e.target.value})}\n                  className=\"w-full p-3 rounded-lg bg-background/50 border border-primary/30 focus:border-primary text-foreground\"\n                >\n                  <option value=\"\">Select a service...</option>\n                  {services.map((service) => (\n                    <option key={service} value={service}>{service}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-bold mb-2 text-primary\">\n                    BUDGET RANGE\n                  </label>\n                  <select\n                    value={formData.budget}\n                    onChange={(e) => setFormData({...formData, budget: e.target.value})}\n                    className=\"w-full p-3 rounded-lg bg-background/50 border border-primary/30 focus:border-primary text-foreground\"\n                  >\n                    <option value=\"\">Select budget...</option>\n                    {budgetRanges.map((range) => (\n                      <option key={range} value={range}>{range}</option>\n                    ))}\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-bold mb-2 text-primary\">\n                    TIMELINE\n                  </label>\n                  <Input\n                    value={formData.timeline}\n                    onChange={(e) => setFormData({...formData, timeline: e.target.value})}\n                    placeholder=\"e.g., 2-4 weeks\"\n                    className=\"bg-background/50 border-primary/30 focus:border-primary\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-bold mb-2 text-primary\">\n                  PROJECT DETAILS *\n                </label>\n                <Textarea\n                  required\n                  value={formData.message}\n                  onChange={(e) => setFormData({...formData, message: e.target.value})}\n                  placeholder=\"Describe your project vision, requirements, and any specific features you need...\"\n                  className=\"min-h-32 bg-background/50 border-primary/30 focus:border-primary\"\n                />\n              </div>\n\n              <Button type=\"submit\" className=\"w-full btn-cyber-glow text-lg py-6\">\n                <Send className=\"w-5 h-5 mr-2\" />\n                SEND TO THE REAPER\n              </Button>\n            </form>\n          </Card>\n\n          {/* Contact Info & Methods */}\n          <div className=\"space-y-8\">\n            \n            {/* Contact Methods */}\n            <div className=\"space-y-6\">\n              {contactMethods.map((method, index) => {\n                const Icon = method.icon;\n                return (\n                  <Card \n                    key={index}\n                    className={`p-6 bg-card/30 backdrop-blur-sm border-secondary/20 hover:border-secondary/40 transition-all duration-300 hover:scale-105 ${method.glow} group`}\n                  >\n                    <div className=\"flex items-start gap-4\">\n                      <div className={`p-3 rounded-lg bg-background/20 ${method.color} group-hover:animate-pulse-glow`}>\n                        <Icon className=\"w-6 h-6\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className={`font-bold text-lg ${method.color} group-hover:text-cyber-glow transition-colors`}>\n                          {method.title}\n                        </h3>\n                        <div className=\"text-foreground font-medium text-lg\">\n                          {method.primary}\n                        </div>\n                        <div className=\"text-muted-foreground\">\n                          {method.secondary}\n                        </div>\n                        <p className=\"text-sm text-muted-foreground mt-2\">\n                          {method.description}\n                        </p>\n                      </div>\n                    </div>\n                  </Card>\n                );\n              })}\n            </div>\n\n            {/* Quick Stats */}\n            <Card className=\"p-8 bg-card/20 backdrop-blur-sm border-accent/20 glow-accent\">\n              <h3 className=\"text-2xl font-bold mb-6 text-accent text-cyber-glow\">\n                WHY CHOOSE THE REAPER?\n              </h3>\n              <div className=\"space-y-4\">\n                {[\n                  { icon: Shield, text: \"100% Secure & Confidential\", color: \"text-primary\" },\n                  { icon: Zap, text: \"Lightning-Fast Delivery\", color: \"text-secondary\" },\n                  { icon: Crown, text: \"Premium Quality Guaranteed\", color: \"text-accent\" },\n                  { icon: User, text: \"24/7 Support & Updates\", color: \"text-neon-pink\" }\n                ].map((item, index) => {\n                  const Icon = item.icon;\n                  return (\n                    <div key={index} className=\"flex items-center gap-3\">\n                      <Icon className={`w-5 h-5 ${item.color}`} />\n                      <span className=\"text-foreground/90\">{item.text}</span>\n                    </div>\n                  );\n                })}\n              </div>\n            </Card>\n\n            {/* Testimonial Preview */}\n            <Card className=\"p-8 bg-card/20 backdrop-blur-sm border-neon-pink/20 glow-pink\">\n              <div className=\"text-center\">\n                <div className=\"text-4xl mb-4\">⭐⭐⭐⭐⭐</div>\n                <p className=\"text-lg italic text-foreground/90 mb-4\">\n                  \"DEATH delivered exactly what I needed. Professional, fast, and the code quality is insane. Will definitely work with him again!\"\n                </p>\n                <div className=\"text-muted-foreground\">\n                  - Client Review #2,847\n                </div>\n              </div>\n            </Card>\n          </div>\n        </div>\n      </div>\n\n      {/* FAQ Section */}\n      <section className=\"py-20 bg-muted/5\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <h2 className=\"text-4xl md:text-6xl font-bold text-center mb-16 text-cyber-glow\">\n            <span className=\"text-primary\">FREQUENTLY</span> ASKED\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 gap-8 max-w-6xl mx-auto\">\n            {[\n              {\n                q: \"How long does a typical project take?\",\n                a: \"Depends on complexity. Discord bots: 1-2 weeks. Web apps: 2-4 weeks. Complex systems: 4-8 weeks.\"\n              },\n              {\n                q: \"Do you provide source code?\",\n                a: \"Yes, you get full source code ownership for all custom projects. Add-on available for premium packages.\"\n              },\n              {\n                q: \"What's your payment structure?\",\n                a: \"50% upfront, 50% on completion. For larger projects, we can discuss milestone-based payments.\"\n              },\n              {\n                q: \"Do you offer post-launch support?\",\n                a: \"Absolutely. All projects include free support period. Extended support packages available.\"\n              },\n              {\n                q: \"Can you work with existing teams?\",\n                a: \"Yes, I integrate seamlessly with existing development teams and workflows.\"\n              },\n              {\n                q: \"What about NDAs and confidentiality?\",\n                a: \"100% confidential. Happy to sign NDAs and work under strict confidentiality agreements.\"\n              }\n            ].map((faq, index) => (\n              <Card key={index} className=\"p-6 bg-card/30 backdrop-blur-sm border-primary/20\">\n                <h3 className=\"font-bold text-lg text-primary mb-3\">{faq.q}</h3>\n                <p className=\"text-muted-foreground\">{faq.a}</p>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Contact;","size_bytes":14918},"client/src/pages/Index.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Navigation } from '@/components/Navigation';\nimport { AdvancedHeroSection } from '@/components/AdvancedHeroSection';\nimport { AboutSection } from '@/components/AboutSection';\nimport { StatsSection } from '@/components/StatsSection';\nimport { AdvancedProjectsSection } from '@/components/AdvancedProjectsSection';\nimport { AdvancedSkillsSection } from '@/components/AdvancedSkillsSection';\nimport { AdvancedServicesSection } from '@/components/AdvancedServicesSection';\nimport { TestimonialsCarousel } from '@/components/TestimonialsCarousel';\nimport { PricingTables } from '@/components/PricingTables';\nimport { FAQ } from '@/components/FAQ';\nimport { AdvancedContactSection } from '@/components/AdvancedContactSection';\nimport { InteractiveParticles } from '@/components/InteractiveParticles';\nimport { ThemeToggle } from '@/components/ThemeToggle';\nimport { LiveChat } from '@/components/LiveChat';\nimport { PortfolioFilter } from '@/components/PortfolioFilter';\nimport { InteractiveTimeline } from '@/components/InteractiveTimeline';\n\nconst Index = () => {\n  const [config, setConfig] = useState(null);\n\n  useEffect(() => {\n    fetch('/config.json')\n      .then(response => response.json())\n      .then(data => setConfig(data))\n      .catch(error => console.error('Error loading config:', error));\n  }, []);\n\n  if (!config) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-background\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-primary border-t-transparent rounded-full animate-spin mx-auto mb-4 glow-primary\"></div>\n          <p className=\"text-xl text-primary\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background relative\">\n      <InteractiveParticles />\n      <ThemeToggle />\n      <Navigation config={config} />\n      <AdvancedHeroSection config={config} />\n      <AboutSection config={config} />\n      <StatsSection config={config} />\n      <PortfolioFilter />\n      <AdvancedSkillsSection config={config} />\n      <InteractiveTimeline />\n      <AdvancedServicesSection config={config} />\n      <PricingTables />\n      <TestimonialsCarousel />\n      <FAQ />\n      <AdvancedContactSection config={config} />\n      <LiveChat />\n    </div>\n  );\n};\n\nexport default Index;\n","size_bytes":2376},"client/src/pages/NotFound.tsx":{"content":"import { useLocation } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nconst NotFound = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    console.error(\n      \"404 Error: User attempted to access non-existent route:\",\n      location.pathname\n    );\n  }, [location.pathname]);\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl font-bold mb-4\">404</h1>\n        <p className=\"text-xl text-gray-600 mb-4\">Oops! Page not found</p>\n        <a href=\"/\" className=\"text-blue-500 hover:text-blue-700 underline\">\n          Return to Home\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","size_bytes":739},"client/src/pages/Portfolio.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Navigation } from '@/components/Navigation';\nimport { Button } from '@/components/ui/button';\nimport { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { ExternalLink, Github, Eye, Zap, Skull, Target } from 'lucide-react';\n\nconst Portfolio = () => {\n  const [filter, setFilter] = useState('all');\n  const [config, setConfig] = useState(null);\n\n  useEffect(() => {\n    fetch('/config.json')\n      .then(response => response.json())\n      .then(data => setConfig(data))\n      .catch(error => console.error('Error loading config:', error));\n  }, []);\n\n  if (!config) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-background\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-primary border-t-transparent rounded-full animate-spin mx-auto mb-4 glow-primary\"></div>\n          <p className=\"text-xl text-primary\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n  \n  const projects = [\n    {\n      id: 1,\n      title: \"CRYPTO REAPER BOT\",\n      description: \"Automated crypto trading bot that harvests profits while you sleep. Built with Python and machine learning algorithms.\",\n      category: \"crypto\",\n      tech: [\"Python\", \"TensorFlow\", \"Binance API\", \"WebSocket\"],\n      image: \"/placeholder.svg\",\n      github: \"https://github.com\",\n      live: \"https://demo.com\",\n      featured: true,\n      status: \"ACTIVE\"\n    },\n    {\n      id: 2,\n      title: \"SHADOW DISCORD BOT\",\n      description: \"Ultimate Discord management bot with moderation, economy, and custom features. Serves 10,000+ servers.\",\n      category: \"bots\",\n      tech: [\"Python\", \"Discord.py\", \"PostgreSQL\", \"Redis\"],\n      image: \"/placeholder.svg\", \n      github: \"https://github.com\",\n      live: \"https://demo.com\",\n      featured: true,\n      status: \"DEPLOYED\"\n    },\n    {\n      id: 3,\n      title: \"CYBER MARKETPLACE\",\n      description: \"Dark-themed e-commerce platform with crypto payments and secure transactions.\",\n      category: \"web\",\n      tech: [\"React\", \"Node.js\", \"Stripe\", \"Web3\"],\n      image: \"/placeholder.svg\",\n      github: \"https://github.com\",\n      live: \"https://demo.com\",\n      featured: false,\n      status: \"LIVE\"\n    },\n    {\n      id: 4,\n      title: \"AI CODE ASSASSIN\",\n      description: \"AI-powered code generation tool that writes perfect code from natural language descriptions.\",\n      category: \"ai\",\n      tech: [\"Python\", \"OpenAI\", \"FastAPI\", \"React\"],\n      image: \"/placeholder.svg\",\n      github: \"https://github.com\",\n      live: \"https://demo.com\",\n      featured: true,\n      status: \"BETA\"\n    },\n    {\n      id: 5,\n      title: \"BLOCKCHAIN EMPIRE\",\n      description: \"Complete DeFi platform with staking, yield farming, and NFT marketplace.\",\n      category: \"blockchain\",\n      tech: [\"Solidity\", \"React\", \"Web3.js\", \"IPFS\"],\n      image: \"/placeholder.svg\",\n      github: \"https://github.com\",\n      live: \"https://demo.com\",\n      featured: false,\n      status: \"MAINNET\"\n    },\n    {\n      id: 6,\n      title: \"MOBILE DESTROYER\",\n      description: \"High-performance mobile game with real-time multiplayer and in-app purchases.\",\n      category: \"mobile\",\n      tech: [\"React Native\", \"Firebase\", \"Unity\", \"C#\"],\n      image: \"/placeholder.svg\",\n      github: \"https://github.com\",\n      live: \"https://demo.com\",\n      featured: false,\n      status: \"PUBLISHED\"\n    }\n  ];\n\n  const categories = [\n    { id: 'all', name: 'ALL WEAPONS', icon: Target },\n    { id: 'crypto', name: 'CRYPTO BOTS', icon: Zap },\n    { id: 'bots', name: 'DISCORD BOTS', icon: Skull },\n    { id: 'web', name: 'WEB APPS', icon: Eye },\n    { id: 'ai', name: 'AI TOOLS', icon: Target },\n    { id: 'blockchain', name: 'BLOCKCHAIN', icon: Zap },\n    { id: 'mobile', name: 'MOBILE APPS', icon: Skull }\n  ];\n\n  const filteredProjects = filter === 'all' \n    ? projects \n    : projects.filter(project => project.category === filter);\n\n  const getStatusColor = (status: string) => {\n    switch(status) {\n      case 'ACTIVE': return 'text-accent border-accent glow-accent';\n      case 'DEPLOYED': return 'text-primary border-primary glow-primary';\n      case 'LIVE': return 'text-secondary border-secondary glow-secondary';\n      case 'BETA': return 'text-neon-gold border-neon-gold glow-gold';\n      case 'MAINNET': return 'text-neon-pink border-neon-pink glow-pink';\n      default: return 'text-foreground border-muted';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation config={config} />\n      \n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-[linear-gradient(rgba(0,255,255,0.1)_1px,transparent_1px),linear-gradient(90deg,rgba(0,255,255,0.1)_1px,transparent_1px)] bg-[size:50px_50px] animate-pulse-glow\" />\n        \n        <div className=\"relative max-w-7xl mx-auto px-6 text-center\">\n          <h1 className=\"text-6xl md:text-8xl font-bold mb-6 text-cyber-glow\">\n            <span className=\"text-primary\">DEATH'S</span> ARSENAL\n          </h1>\n          <p className=\"text-2xl text-muted-foreground mb-12\">\n            Witness the Digital Weapons Forged in Code\n          </p>\n        </div>\n      </section>\n\n      {/* Filter Tabs */}\n      <section className=\"py-8 bg-muted/5\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"flex flex-wrap gap-4 justify-center\">\n            {categories.map((category) => {\n              const Icon = category.icon;\n              return (\n                <Button\n                  key={category.id}\n                  onClick={() => setFilter(category.id)}\n                  className={`btn-cyber ${filter === category.id ? 'bg-primary text-primary-foreground glow-primary' : ''}`}\n                >\n                  <Icon className=\"w-4 h-4 mr-2\" />\n                  {category.name}\n                </Button>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Projects Grid */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {filteredProjects.map((project) => (\n              <Card \n                key={project.id}\n                className={`group relative overflow-hidden bg-card/50 backdrop-blur-sm border-primary/20 hover:border-primary/40 transition-all duration-500 hover:scale-105 ${project.featured ? 'glow-primary ring-2 ring-primary/20' : ''}`}\n              >\n                {/* Project Image */}\n                <div className=\"relative h-48 overflow-hidden\">\n                  <img \n                    src={project.image} \n                    alt={project.title}\n                    className=\"w-full h-full object-cover transition-transform duration-500 group-hover:scale-110\"\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-background/80 to-transparent\" />\n                  \n                  {/* Status Badge */}\n                  <Badge className={`absolute top-4 right-4 ${getStatusColor(project.status)}`}>\n                    {project.status}\n                  </Badge>\n                  \n                  {/* Featured Badge */}\n                  {project.featured && (\n                    <Badge className=\"absolute top-4 left-4 bg-gradient-glow text-background\">\n                      FEATURED\n                    </Badge>\n                  )}\n                </div>\n\n                <div className=\"p-6\">\n                  <h3 className=\"text-2xl font-bold mb-3 text-cyber-glow group-hover:text-primary transition-colors\">\n                    {project.title}\n                  </h3>\n                  \n                  <p className=\"text-muted-foreground mb-4 line-clamp-3\">\n                    {project.description}\n                  </p>\n\n                  {/* Tech Stack */}\n                  <div className=\"flex flex-wrap gap-2 mb-6\">\n                    {project.tech.map((tech, index) => (\n                      <Badge \n                        key={index}\n                        variant=\"outline\"\n                        className=\"text-xs border-muted text-muted-foreground hover:border-primary hover:text-primary transition-colors\"\n                      >\n                        {tech}\n                      </Badge>\n                    ))}\n                  </div>\n\n                  {/* Action Buttons */}\n                  <div className=\"flex gap-3\">\n                    <Button \n                      size=\"sm\" \n                      className=\"btn-cyber-glow flex-1\"\n                      asChild\n                    >\n                      <a href={project.live} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Eye className=\"w-4 h-4 mr-2\" />\n                        DEPLOY\n                      </a>\n                    </Button>\n                    <Button \n                      size=\"sm\" \n                      className=\"btn-neon-pink\"\n                      asChild\n                    >\n                      <a href={project.github} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Github className=\"w-4 h-4\" />\n                      </a>\n                    </Button>\n                  </div>\n                </div>\n\n                {/* Hover Glow Effect */}\n                <div className=\"absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none\">\n                  <div className=\"absolute inset-0 bg-gradient-cyber opacity-10\" />\n                </div>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-muted/5\">\n        <div className=\"max-w-4xl mx-auto text-center px-6\">\n          <h2 className=\"text-4xl md:text-6xl font-bold mb-6 text-cyber-glow\">\n            READY TO <span className=\"text-primary\">DOMINATE</span>?\n          </h2>\n          <p className=\"text-xl text-muted-foreground mb-8\">\n            Let's forge your digital empire together. Contact the Reaper for custom development.\n          </p>\n          <Button className=\"btn-cyber-glow text-lg px-8 py-4\" asChild>\n            <a href=\"/contact\">HIRE THE REAPER</a>\n          </Button>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Portfolio;","size_bytes":10445},"client/src/pages/Services.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Navigation } from '@/components/Navigation';\nimport { Button } from '@/components/ui/button';\nimport { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { CheckCircle, Zap, Shield, Crown, Skull, Target, Flame, Swords } from 'lucide-react';\n\nconst Services = () => {\n  const [config, setConfig] = useState(null);\n\n  useEffect(() => {\n    fetch('/config.json')\n      .then(response => response.json())\n      .then(data => setConfig(data))\n      .catch(error => console.error('Error loading config:', error));\n  }, []);\n\n  if (!config) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-background\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-primary border-t-transparent rounded-full animate-spin mx-auto mb-4 glow-primary\"></div>\n          <p className=\"text-xl text-primary\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n  const services = [\n    {\n      id: 1,\n      title: \"CYBER WEB DOMINATION\",\n      subtitle: \"Full-Stack Web Applications\",\n      description: \"Complete web applications that dominate the digital realm. From concept to deployment, I forge web empires that convert visitors into loyal subjects.\",\n      price: \"Starting at $2,500\",\n      duration: \"2-4 weeks\",\n      icon: Crown,\n      color: \"text-primary\",\n      glow: \"glow-primary\",\n      features: [\n        \"React/Next.js Frontend Mastery\",\n        \"Node.js/Python Backend Architecture\", \n        \"Database Design & Optimization\",\n        \"API Development & Integration\",\n        \"Responsive Mobile-First Design\",\n        \"SEO & Performance Optimization\",\n        \"Deployment & Cloud Setup\",\n        \"3 Months Free Support\"\n      ],\n      popular: true\n    },\n    {\n      id: 2,\n      title: \"DISCORD BOT ARMY\", \n      subtitle: \"Custom Discord Bot Development\",\n      description: \"Unleash the power of automation with custom Discord bots. From moderation to economy systems, I create bots that rule servers with an iron fist.\",\n      price: \"Starting at $500\",\n      duration: \"1-2 weeks\",\n      icon: Skull,\n      color: \"text-secondary\",\n      glow: \"glow-secondary\",\n      features: [\n        \"Custom Commands & Features\",\n        \"Moderation & Anti-Spam\",\n        \"Economy & Leveling Systems\",\n        \"Music & Entertainment\",\n        \"Database Integration\",\n        \"Server Analytics\",\n        \"24/7 Hosting Setup\",\n        \"1 Month Free Updates\"\n      ]\n    },\n    {\n      id: 3,\n      title: \"CRYPTO REAPER BOTS\",\n      subtitle: \"Automated Trading Systems\",\n      description: \"AI-powered trading bots that harvest profits while you sleep. Built with advanced algorithms and risk management to dominate crypto markets.\",\n      price: \"Starting at $3,000\",\n      duration: \"3-5 weeks\", \n      icon: Zap,\n      color: \"text-accent\",\n      glow: \"glow-accent\",\n      features: [\n        \"Advanced Trading Algorithms\",\n        \"Multi-Exchange Support\",\n        \"Risk Management Systems\",\n        \"Real-time Market Analysis\",\n        \"Profit/Loss Tracking\",\n        \"Custom Strategy Implementation\",\n        \"Secure API Integration\",\n        \"6 Months Support & Updates\"\n      ]\n    },\n    {\n      id: 4,\n      title: \"MOBILE APP DESTROYER\",\n      subtitle: \"iOS & Android Applications\",\n      description: \"Native and cross-platform mobile applications that conquer app stores. From concept to publication, I create apps that users can't resist.\",\n      price: \"Starting at $4,000\",\n      duration: \"4-8 weeks\",\n      icon: Target,\n      color: \"text-neon-pink\",\n      glow: \"glow-pink\",\n      features: [\n        \"React Native Development\",\n        \"Native iOS/Android Options\",\n        \"UI/UX Design Excellence\",\n        \"Backend API Integration\",\n        \"Push Notifications\",\n        \"App Store Optimization\",\n        \"Analytics Integration\",\n        \"Post-Launch Support\"\n      ]\n    },\n    {\n      id: 5,\n      title: \"BLOCKCHAIN EMPIRE\",\n      subtitle: \"DeFi & Smart Contract Development\",\n      description: \"Build your decentralized empire with custom smart contracts, DeFi protocols, and blockchain applications that revolutionize finance.\",\n      price: \"Starting at $5,000\",\n      duration: \"4-6 weeks\",\n      icon: Shield,\n      color: \"text-neon-gold\",\n      glow: \"glow-gold\",\n      features: [\n        \"Smart Contract Development\",\n        \"DeFi Protocol Creation\",\n        \"Token & NFT Systems\",\n        \"Web3 Frontend Integration\",\n        \"Security Audits\",\n        \"Multi-Chain Deployment\",\n        \"Liquidity Pool Setup\",\n        \"Ongoing Security Updates\"\n      ]\n    },\n    {\n      id: 6,\n      title: \"AI NECROMANCY\",\n      subtitle: \"AI-Powered Applications\",\n      description: \"Harness the power of artificial intelligence to create applications that think, learn, and adapt. From chatbots to predictive analytics.\",\n      price: \"Starting at $3,500\",\n      duration: \"3-6 weeks\",\n      icon: Flame,\n      color: \"text-primary\",\n      glow: \"glow-primary\",\n      features: [\n        \"Custom AI Model Training\",\n        \"Natural Language Processing\",\n        \"Computer Vision Solutions\",\n        \"Predictive Analytics\",\n        \"Chatbot Development\",\n        \"API Integration (OpenAI, etc.)\",\n        \"Real-time Learning Systems\",\n        \"Scalable AI Infrastructure\"\n      ]\n    }\n  ];\n\n  const addOns = [\n    { name: \"RUSH DELIVERY\", price: \"+50%\", description: \"Half the timeline\" },\n    { name: \"PREMIUM SUPPORT\", price: \"+$500\", description: \"6 months extended support\" },\n    { name: \"SOURCE CODE\", price: \"+$1000\", description: \"Complete codebase ownership\" },\n    { name: \"TRAINING SESSION\", price: \"+$300\", description: \"1-hour personalized training\" }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation config={config} />\n      \n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-[linear-gradient(rgba(255,0,255,0.1)_1px,transparent_1px),linear-gradient(90deg,rgba(255,0,255,0.1)_1px,transparent_1px)] bg-[size:60px_60px] animate-pulse-glow\" />\n        \n        <div className=\"relative max-w-7xl mx-auto px-6 text-center\">\n          <h1 className=\"text-6xl md:text-8xl font-bold mb-6 text-cyber-glow\">\n            <span className=\"text-primary\">DEATH'S</span> SERVICES\n          </h1>\n          <p className=\"text-2xl text-muted-foreground mb-12\">\n            Elite Digital Solutions Forged in the Depths of Code\n          </p>\n          <Badge className=\"text-lg px-6 py-2 bg-gradient-glow text-background font-bold\">\n            D E A T H\n          </Badge>\n        </div>\n      </section>\n\n      {/* Services Grid */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"grid lg:grid-cols-2 gap-8\">\n            {services.map((service) => {\n              const Icon = service.icon;\n              return (\n                <Card \n                  key={service.id}\n                  className={`relative p-8 bg-card/50 backdrop-blur-sm border-primary/20 hover:border-primary/40 transition-all duration-500 hover:scale-105 ${service.glow} group ${service.popular ? 'ring-2 ring-primary/30' : ''}`}\n                >\n                  {service.popular && (\n                    <Badge className=\"absolute -top-3 left-8 bg-gradient-cyber text-background px-4 py-1 font-bold\">\n                      MOST POPULAR\n                    </Badge>\n                  )}\n\n                  <div className=\"flex items-start justify-between mb-6\">\n                    <div className=\"flex items-center gap-4\">\n                      <div className={`p-3 rounded-lg bg-background/20 ${service.color} group-hover:animate-pulse-glow`}>\n                        <Icon className=\"w-8 h-8\" />\n                      </div>\n                      <div>\n                        <h3 className={`text-2xl font-bold ${service.color} text-cyber-glow`}>\n                          {service.title}\n                        </h3>\n                        <p className=\"text-muted-foreground font-medium\">\n                          {service.subtitle}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className={`text-2xl font-bold ${service.color}`}>\n                        {service.price}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        {service.duration}\n                      </div>\n                    </div>\n                  </div>\n\n                  <p className=\"text-foreground/80 mb-8 text-lg leading-relaxed\">\n                    {service.description}\n                  </p>\n\n                  <div className=\"space-y-3 mb-8\">\n                    {service.features.map((feature, index) => (\n                      <div key={index} className=\"flex items-center gap-3\">\n                        <CheckCircle className={`w-5 h-5 ${service.color} flex-shrink-0`} />\n                        <span className=\"text-foreground/90\">{feature}</span>\n                      </div>\n                    ))}\n                  </div>\n\n                  <Button \n                    className={`w-full text-lg py-6 ${\n                      service.popular \n                        ? 'btn-cyber-glow' \n                        : 'btn-neon-pink'\n                    }`}\n                    asChild\n                  >\n                    <a href=\"/contact\">ORDER NOW</a>\n                  </Button>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Add-ons */}\n      <section className=\"py-20 bg-muted/5\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <h2 className=\"text-4xl md:text-6xl font-bold text-center mb-16 text-cyber-glow\">\n            <span className=\"text-primary\">POWER</span> ADD-ONS\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {addOns.map((addon, index) => (\n              <Card \n                key={index}\n                className=\"p-6 text-center bg-card/30 backdrop-blur-sm border-secondary/20 hover:border-secondary/40 transition-all duration-300 hover:scale-105 glow-secondary group\"\n              >\n                <h3 className=\"text-lg font-bold mb-2 text-secondary group-hover:text-cyber-glow transition-colors\">\n                  {addon.name}\n                </h3>\n                <div className=\"text-2xl font-bold text-primary mb-2\">\n                  {addon.price}\n                </div>\n                <p className=\"text-muted-foreground text-sm\">\n                  {addon.description}\n                </p>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Process */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <h2 className=\"text-4xl md:text-6xl font-bold text-center mb-16 text-cyber-glow\">\n            THE <span className=\"text-primary\">REAPER'S</span> PROCESS\n          </h2>\n          \n          <div className=\"grid md:grid-cols-4 gap-8\">\n            {[\n              { step: \"01\", title: \"CONSULTATION\", desc: \"We discuss your vision and requirements\" },\n              { step: \"02\", title: \"STRATEGY\", desc: \"I forge the perfect battle plan\" },\n              { step: \"03\", title: \"EXECUTION\", desc: \"Code comes to life in the shadows\" },\n              { step: \"04\", title: \"DOMINATION\", desc: \"Your digital empire goes live\" }\n            ].map((phase, index) => (\n              <Card \n                key={index}\n                className=\"p-8 text-center bg-card/20 backdrop-blur-sm border-primary/20 hover:border-primary/40 transition-all duration-300 hover:scale-105 group\"\n              >\n                <div className=\"text-4xl font-bold text-primary mb-4 group-hover:text-cyber-glow transition-colors\">\n                  {phase.step}\n                </div>\n                <h3 className=\"text-xl font-bold mb-3 text-foreground group-hover:text-primary transition-colors\">\n                  {phase.title}\n                </h3>\n                <p className=\"text-muted-foreground\">\n                  {phase.desc}\n                </p>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA */}\n      <section className=\"py-20 bg-muted/5\">\n        <div className=\"max-w-4xl mx-auto text-center px-6\">\n          <h2 className=\"text-4xl md:text-6xl font-bold mb-6 text-cyber-glow\">\n            READY TO <span className=\"text-primary\">CONQUER</span>?\n          </h2>\n          <p className=\"text-xl text-muted-foreground mb-8\">\n            The Reaper awaits your command. Let's forge your digital destiny.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button className=\"btn-cyber-glow text-lg px-8 py-4\" asChild>\n              <a href=\"/contact\">START YOUR PROJECT</a>\n            </Button>\n            <Button className=\"btn-neon-gold text-lg px-8 py-4\" asChild>\n              <a href=\"/portfolio\">VIEW PAST CONQUESTS</a>\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Services;","size_bytes":13335},"client/src/pages/Skills.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Navigation } from '@/components/Navigation';\nimport { Button } from '@/components/ui/button';\nimport { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { \n  Code2, Database, Cloud, Shield, Brain, Gamepad2, \n  Zap, Skull, Target, Crown, Swords, Flame \n} from 'lucide-react';\n\nconst Skills = () => {\n  const [hoveredSkill, setHoveredSkill] = useState<string | null>(null);\n  const [config, setConfig] = useState(null);\n\n  useEffect(() => {\n    fetch('/config.json')\n      .then(response => response.json())\n      .then(data => setConfig(data))\n      .catch(error => console.error('Error loading config:', error));\n  }, []);\n\n  if (!config) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-background\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-primary border-t-transparent rounded-full animate-spin mx-auto mb-4 glow-primary\"></div>\n          <p className=\"text-xl text-primary\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const skillCategories = {\n    languages: {\n      title: \"DEADLY LANGUAGES\",\n      icon: Code2,\n      color: \"text-primary\",\n      skills: [\n        { name: \"Python\", level: 98, icon: \"🐍\", description: \"The serpent's language - my weapon of choice\" },\n        { name: \"JavaScript\", level: 95, icon: \"⚡\", description: \"Lightning-fast frontend domination\" },\n        { name: \"TypeScript\", level: 92, icon: \"💎\", description: \"Type-safe empire building\" },\n        { name: \"Solidity\", level: 88, icon: \"⛓️\", description: \"Blockchain mastery and smart contracts\" },\n        { name: \"C++\", level: 85, icon: \"⚔️\", description: \"Low-level system destruction\" },\n        { name: \"C#\", level: 82, icon: \"🛡️\", description: \"Microsoft stack conquest\" },\n        { name: \"Java\", level: 80, icon: \"☕\", description: \"Enterprise-level warfare\" },\n        { name: \"Go\", level: 78, icon: \"🚀\", description: \"Concurrent programming supremacy\" },\n        { name: \"Rust\", level: 75, icon: \"🦀\", description: \"Memory-safe systems programming\" }\n      ]\n    },\n    frameworks: {\n      title: \"FRAMEWORK ARSENAL\",\n      icon: Swords,\n      color: \"text-secondary\",\n      skills: [\n        { name: \"React\", level: 96, icon: \"⚛️\", description: \"Frontend empire builder\" },\n        { name: \"Next.js\", level: 94, icon: \"▲\", description: \"Full-stack dominance\" },\n        { name: \"Django\", level: 90, icon: \"🎯\", description: \"Python web framework mastery\" },\n        { name: \"FastAPI\", level: 88, icon: \"🏃‍♂️\", description: \"High-performance API creation\" },\n        { name: \"Express.js\", level: 85, icon: \"🚂\", description: \"Node.js backend excellence\" },\n        { name: \"Vue.js\", level: 82, icon: \"💚\", description: \"Progressive framework control\" },\n        { name: \"Angular\", level: 78, icon: \"🅰️\", description: \"Enterprise frontend solutions\" },\n        { name: \"Flask\", level: 88, icon: \"🧪\", description: \"Lightweight Python web magic\" }\n      ]\n    },\n    databases: {\n      title: \"DATA DOMINION\",\n      icon: Database,\n      color: \"text-accent\",\n      skills: [\n        { name: \"PostgreSQL\", level: 92, icon: \"🐘\", description: \"Advanced relational database mastery\" },\n        { name: \"MongoDB\", level: 90, icon: \"🍃\", description: \"NoSQL document domination\" },\n        { name: \"Redis\", level: 88, icon: \"💎\", description: \"In-memory data structure supremacy\" },\n        { name: \"MySQL\", level: 85, icon: \"🐬\", description: \"Traditional SQL mastery\" },\n        { name: \"Firebase\", level: 83, icon: \"🔥\", description: \"Real-time database control\" },\n        { name: \"Supabase\", level: 87, icon: \"⚡\", description: \"Open-source Firebase alternative\" },\n        { name: \"SQLite\", level: 80, icon: \"💽\", description: \"Embedded database expertise\" }\n      ]\n    },\n    cloud: {\n      title: \"CLOUD EMPIRE\",\n      icon: Cloud,\n      color: \"text-neon-pink\",\n      skills: [\n        { name: \"AWS\", level: 90, icon: \"☁️\", description: \"Amazon cloud architecture mastery\" },\n        { name: \"Google Cloud\", level: 85, icon: \"🌐\", description: \"GCP infrastructure dominance\" },\n        { name: \"Azure\", level: 82, icon: \"🔵\", description: \"Microsoft cloud solutions\" },\n        { name: \"Docker\", level: 88, icon: \"🐳\", description: \"Containerization supremacy\" },\n        { name: \"Kubernetes\", level: 85, icon: \"⚙️\", description: \"Container orchestration mastery\" },\n        { name: \"Vercel\", level: 90, icon: \"▲\", description: \"Serverless deployment excellence\" },\n        { name: \"Heroku\", level: 88, icon: \"💜\", description: \"PaaS deployment mastery\" }\n      ]\n    },\n    security: {\n      title: \"CYBER DEFENSE\",\n      icon: Shield,\n      color: \"text-neon-gold\",\n      skills: [\n        { name: \"Penetration Testing\", level: 85, icon: \"🔓\", description: \"Ethical hacking expertise\" },\n        { name: \"Cryptography\", level: 88, icon: \"🔐\", description: \"Data encryption mastery\" },\n        { name: \"OAuth & JWT\", level: 90, icon: \"🛡️\", description: \"Authentication security\" },\n        { name: \"SSL/TLS\", level: 87, icon: \"🔒\", description: \"Transport layer security\" },\n        { name: \"Blockchain Security\", level: 89, icon: \"⛓️\", description: \"Smart contract auditing\" },\n        { name: \"OWASP\", level: 86, icon: \"🎯\", description: \"Web application security\" }\n      ]\n    },\n    ai: {\n      title: \"AI NECROMANCY\",\n      icon: Brain,\n      color: \"text-primary\",\n      skills: [\n        { name: \"Machine Learning\", level: 88, icon: \"🤖\", description: \"Intelligent system creation\" },\n        { name: \"Deep Learning\", level: 85, icon: \"🧠\", description: \"Neural network mastery\" },\n        { name: \"OpenAI API\", level: 92, icon: \"✨\", description: \"GPT integration expertise\" },\n        { name: \"TensorFlow\", level: 83, icon: \"🔥\", description: \"Google's ML framework\" },\n        { name: \"PyTorch\", level: 80, icon: \"🔦\", description: \"Dynamic neural networks\" },\n        { name: \"Computer Vision\", level: 78, icon: \"👁️\", description: \"Image processing mastery\" },\n        { name: \"NLP\", level: 85, icon: \"💬\", description: \"Natural language processing\" }\n      ]\n    }\n  };\n\n  const achievements = [\n    { title: \"CRYPTO REAPER\", description: \"Built 10+ trading bots\", icon: \"💰\" },\n    { title: \"BOT COMMANDER\", description: \"Created 50+ Discord bots\", icon: \"🤖\" },\n    { title: \"FULL-STACK EMPEROR\", description: \"500+ complete applications\", icon: \"👑\" },\n    { title: \"BLOCKCHAIN PHANTOM\", description: \"20+ DeFi protocols\", icon: \"⛓️\" },\n    { title: \"AI NECROMANCER\", description: \"15+ AI-powered tools\", icon: \"🧠\" },\n    { title: \"SECURITY GHOST\", description: \"Zero security breaches\", icon: \"🛡️\" }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation config={config} />\n      \n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-[linear-gradient(45deg,transparent_40%,rgba(0,255,255,0.05)_50%,transparent_60%)] animate-pulse-glow\" />\n        \n        <div className=\"relative max-w-7xl mx-auto px-6 text-center\">\n          <h1 className=\"text-6xl md:text-8xl font-bold mb-6 text-cyber-glow\">\n            <span className=\"text-primary\">REAPER'S</span> SKILLS\n          </h1>\n          <p className=\"text-2xl text-muted-foreground mb-12\">\n            8+ Years of Digital Mastery Across Every Domain\n          </p>\n        </div>\n      </section>\n\n      {/* Skills Tabs */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <Tabs defaultValue=\"languages\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-6 mb-12 bg-card/50 backdrop-blur-sm\">\n              {Object.entries(skillCategories).map(([key, category]) => {\n                const Icon = category.icon;\n                return (\n                  <TabsTrigger \n                    key={key} \n                    value={key}\n                    className=\"flex flex-col items-center gap-2 py-4 data-[state=active]:bg-primary data-[state=active]:text-primary-foreground\"\n                  >\n                    <Icon className=\"w-5 h-5\" />\n                    <span className=\"hidden sm:block text-xs font-bold\">\n                      {category.title}\n                    </span>\n                  </TabsTrigger>\n                );\n              })}\n            </TabsList>\n\n            {Object.entries(skillCategories).map(([key, category]) => (\n              <TabsContent key={key} value={key} className=\"space-y-8\">\n                <div className=\"text-center mb-12\">\n                  <h2 className={`text-4xl font-bold mb-4 ${category.color} text-cyber-glow`}>\n                    {category.title}\n                  </h2>\n                </div>\n\n                <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  {category.skills.map((skill, index) => (\n                    <Card\n                      key={skill.name}\n                      className=\"p-6 bg-card/50 backdrop-blur-sm border-primary/20 hover:border-primary/40 transition-all duration-300 hover:scale-105 cursor-pointer group\"\n                      onMouseEnter={() => setHoveredSkill(skill.name)}\n                      onMouseLeave={() => setHoveredSkill(null)}\n                    >\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <div className=\"flex items-center gap-3\">\n                          <span className=\"text-2xl\">{skill.icon}</span>\n                          <h3 className=\"font-bold text-lg group-hover:text-primary transition-colors\">\n                            {skill.name}\n                          </h3>\n                        </div>\n                        <Badge \n                          className={`${category.color} border-current`}\n                          variant=\"outline\"\n                        >\n                          {skill.level}%\n                        </Badge>\n                      </div>\n                      \n                      <Progress \n                        value={skill.level} \n                        className=\"mb-4\"\n                      />\n                      \n                      <p className={`text-sm text-muted-foreground transition-all duration-300 ${\n                        hoveredSkill === skill.name ? 'opacity-100' : 'opacity-70'\n                      }`}>\n                        {skill.description}\n                      </p>\n                    </Card>\n                  ))}\n                </div>\n              </TabsContent>\n            ))}\n          </Tabs>\n        </div>\n      </section>\n\n      {/* Achievements */}\n      <section className=\"py-20 bg-muted/5\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <h2 className=\"text-4xl md:text-6xl font-bold text-center mb-16 text-cyber-glow\">\n            <span className=\"text-primary\">LEGENDARY</span> ACHIEVEMENTS\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {achievements.map((achievement, index) => (\n              <Card\n                key={index}\n                className=\"p-8 text-center bg-card/30 backdrop-blur-sm border-secondary/20 hover:border-secondary/40 transition-all duration-300 hover:scale-105 group glow-secondary\"\n              >\n                <div className=\"text-4xl mb-4 group-hover:animate-pulse-glow\">\n                  {achievement.icon}\n                </div>\n                <h3 className=\"text-xl font-bold mb-2 text-secondary group-hover:text-cyber-glow transition-colors\">\n                  {achievement.title}\n                </h3>\n                <p className=\"text-muted-foreground\">\n                  {achievement.description}\n                </p>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20\">\n        <div className=\"max-w-4xl mx-auto text-center px-6\">\n          <h2 className=\"text-4xl md:text-6xl font-bold mb-6 text-cyber-glow\">\n            NEED THESE <span className=\"text-primary\">SKILLS</span>?\n          </h2>\n          <p className=\"text-xl text-muted-foreground mb-8\">\n            The Reaper's arsenal is at your service. Let's build something legendary.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button className=\"btn-cyber-glow text-lg px-8 py-4\" asChild>\n              <a href=\"/contact\">HIRE THE REAPER</a>\n            </Button>\n            <Button className=\"btn-neon-pink text-lg px-8 py-4\" asChild>\n              <a href=\"/portfolio\">VIEW ARSENAL</a>\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Skills;","size_bytes":13052},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1405},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:size-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2701},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { DayPicker } from \"react-day-picker\";\n\nimport { cn } from \"@/lib/utils\";\nimport { buttonVariants } from \"@/components/ui/button\";\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>;\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ..._props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ..._props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  );\n}\nCalendar.displayName = \"Calendar\";\n\nexport { Calendar };\n","size_bytes":2620},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1877},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"import * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([_, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10466},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":315},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\ninterface CommandDialogProps extends DialogProps {}\n\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4879},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7246},"client/src/components/ui/dialog.tsx":{"content":"import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3835},"client/src/components/ui/drawer.tsx":{"content":"import * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3007},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7295},"client/src/components/ui/form.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4085},"client/src/components/ui/hover-card.tsx":{"content":"import * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1184},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"import * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":7974},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5046},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1230},"client/src/components/ui/progress.tsx":{"content":"import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":777},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"import { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1709},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5615},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"import * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n  VariantProps<typeof sheetVariants> { }\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet, SheetClose,\n  SheetContent, SheetDescription, SheetFooter, SheetHeader, SheetOverlay, SheetPortal, SheetTitle, SheetTrigger\n}\n\n","size_bytes":4250},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar:state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContext = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContext>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden md:block text-sidebar-foreground\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex min-h-svh flex-1 flex-col bg-background\",\n        \"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"rounded-md h-8 flex gap-2 px-2 items-center\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 flex-1 max-w-[--skeleton-width]\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23367},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/sonner.tsx":{"content":"import { useTheme } from \"next-themes\"\nimport { Toaster as Sonner, toast } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster, toast }\n","size_bytes":894},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":772},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"import * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1739},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3\",\n        sm: \"h-9 px-2.5\",\n        lg: \"h-11 px-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1435},"client/src/components/ui/tooltip.tsx":{"content":"import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1145},"client/src/components/ui/use-toast.ts":{"content":"import { useToast, toast } from \"@/hooks/use-toast\";\n\nexport { useToast, toast };\n","size_bytes":82},"server/email.ts":{"content":"// Simple email forwarding utility\n// For now, this just formats the email content\n// Later, you can integrate with SendGrid or another email service\n\nexport interface ContactSubmission {\n  name: string;\n  email: string;\n  service?: string;\n  budget?: string;\n  timeline?: string;\n  message: string;\n  createdAt: Date;\n}\n\nexport function formatEmailContent(submission: ContactSubmission): string {\n  return `\nNew Contact Form Submission from D E A T H Portfolio\n\nFrom: ${submission.name}\nEmail: ${submission.email}\nService Requested: ${submission.service || 'General Inquiry'}\nBudget: ${submission.budget || 'Not specified'}\nTimeline: ${submission.timeline || 'Flexible'}\n\nMessage:\n${submission.message}\n\nSubmitted: ${submission.createdAt}\n\n---\nReply directly to ${submission.email} to respond to this inquiry.\n`;\n}\n\n// Function to handle email notifications\nexport async function sendEmailNotification(submission: ContactSubmission): Promise<void> {\n  // For now, just log the formatted email\n  // This is where you would integrate with SendGrid or another email service\n  const emailContent = formatEmailContent(submission);\n  \n  console.log('\\n📨 EMAIL CONTENT TO FORWARD:');\n  console.log('To: deathop.og@gmail.com');\n  console.log(`Subject: Portfolio Contact: ${submission.name}`);\n  console.log('\\n' + emailContent);\n  console.log('📧 Copy the above content and email it to yourself manually,');\n  console.log('   or set up SendGrid integration for automatic delivery.');\n}","size_bytes":1483},"client/src/components/AnimatedCounter.tsx":{"content":"import { useState, useEffect, useRef } from 'react';\n\ninterface AnimatedCounterProps {\n  end: number;\n  duration?: number;\n  suffix?: string;\n  prefix?: string;\n}\n\nexport const AnimatedCounter = ({ \n  end, \n  duration = 2000, \n  suffix = '', \n  prefix = '' \n}: AnimatedCounterProps) => {\n  const [count, setCount] = useState(0);\n  const [isVisible, setIsVisible] = useState(false);\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && !isVisible) {\n          setIsVisible(true);\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    if (elementRef.current) {\n      observer.observe(elementRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) return;\n\n    let startTime: number;\n    let animationFrame: number;\n\n    const animate = (currentTime: number) => {\n      if (!startTime) startTime = currentTime;\n      const progress = Math.min((currentTime - startTime) / duration, 1);\n      \n      // Easing function for smooth animation\n      const easeOutQuart = 1 - Math.pow(1 - progress, 4);\n      setCount(Math.floor(end * easeOutQuart));\n\n      if (progress < 1) {\n        animationFrame = requestAnimationFrame(animate);\n      }\n    };\n\n    animationFrame = requestAnimationFrame(animate);\n\n    return () => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n    };\n  }, [isVisible, end, duration]);\n\n  return (\n    <div ref={elementRef} className=\"text-4xl font-bold text-primary\">\n      {prefix}{count.toLocaleString()}{suffix}\n    </div>\n  );\n};","size_bytes":1675},"client/src/components/AnimatedSkillBar.tsx":{"content":"import { useState, useEffect, useRef } from 'react';\n\ninterface AnimatedSkillBarProps {\n  skill: string;\n  level: number;\n  color?: string;\n  icon?: string;\n}\n\nexport const AnimatedSkillBar = ({ \n  skill, \n  level, \n  color = 'primary',\n  icon = '⚡'\n}: AnimatedSkillBarProps) => {\n  const [animatedLevel, setAnimatedLevel] = useState(0);\n  const [isVisible, setIsVisible] = useState(false);\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && !isVisible) {\n          setIsVisible(true);\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    if (elementRef.current) {\n      observer.observe(elementRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) return;\n\n    const duration = 1500;\n    let startTime: number;\n    let animationFrame: number;\n\n    const animate = (currentTime: number) => {\n      if (!startTime) startTime = currentTime;\n      const progress = Math.min((currentTime - startTime) / duration, 1);\n      \n      // Easing function\n      const easeOutCubic = 1 - Math.pow(1 - progress, 3);\n      setAnimatedLevel(level * easeOutCubic);\n\n      if (progress < 1) {\n        animationFrame = requestAnimationFrame(animate);\n      }\n    };\n\n    animationFrame = requestAnimationFrame(animate);\n\n    return () => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n    };\n  }, [isVisible, level]);\n\n  return (\n    <div ref={elementRef} className=\"mb-6 group\">\n      <div className=\"flex justify-between items-center mb-2\">\n        <span className=\"text-foreground font-medium flex items-center gap-2\">\n          <span className=\"text-lg\">{icon}</span>\n          {skill}\n        </span>\n        <span className=\"text-primary font-bold\">{Math.round(animatedLevel)}%</span>\n      </div>\n      <div className=\"h-3 bg-muted rounded-full overflow-hidden relative\">\n        <div \n          className={`h-full bg-gradient-to-r from-primary to-secondary rounded-full transition-all duration-1000 ease-out relative overflow-hidden`}\n          style={{ width: `${animatedLevel}%` }}\n        >\n          {/* Animated shine effect */}\n          <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent animate-pulse\" />\n          \n          {/* Glow effect */}\n          <div className=\"absolute inset-0 rounded-full shadow-[0_0_10px_hsl(var(--primary))] opacity-50\" />\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":2577},"client/src/components/FAQ.tsx":{"content":"import { useState } from 'react';\nimport { Card } from '@/components/ui/card';\nimport { ChevronDown, ChevronUp } from 'lucide-react';\n\ninterface FAQItem {\n  question: string;\n  answer: string;\n}\n\nconst faqData: FAQItem[] = [\n  {\n    question: \"What types of security audits do you perform?\",\n    answer: \"I conduct comprehensive penetration testing, vulnerability assessments, web application security testing, network security audits, and red team operations. My ethical hacking approach ensures thorough identification of security weaknesses while maintaining complete confidentiality.\"\n  },\n  {\n    question: \"How experienced are you with Python development?\",\n    answer: \"I'm a Python master with 8+ years of experience developing AI applications, automation scripts, web scrapers, Discord bots, machine learning models, and enterprise-level backend systems. I specialize in Django, FastAPI, TensorFlow, and custom automation solutions.\"\n  },\n  {\n    question: \"Can you create custom Discord bots for my server?\",\n    answer: \"Absolutely! I've created 50+ Discord bots with features like moderation, economy systems, music, games, custom commands, database integration, and advanced automation. I can build anything from simple utility bots to complex multi-server networks.\"\n  },\n  {\n    question: \"What's included in your VPS hosting services?\",\n    answer: \"My VPS hosting includes server setup, security hardening, monitoring, backups, performance optimization, 24/7 support, and maintenance. I manage Linux/Windows servers, implement load balancing, and ensure 99.9% uptime with enterprise-grade infrastructure.\"\n  },\n  {\n    question: \"Do you offer ongoing security monitoring?\",\n    answer: \"Yes! I provide continuous security monitoring, threat detection, incident response, regular vulnerability scans, and monthly security reports. My enterprise packages include 24/7 monitoring with immediate alerts for any security issues.\"\n  },\n  {\n    question: \"How do you ensure project confidentiality?\",\n    answer: \"I maintain strict confidentiality through NDAs, secure development practices, encrypted communications, and isolated development environments. All client data is protected with enterprise-grade security measures and never shared with third parties.\"\n  },\n  {\n    question: \"What's your typical project delivery time?\",\n    answer: \"Project timelines vary based on complexity: Security audits (1-2 weeks), Discord bots (3-7 days), web applications (2-6 weeks), and enterprise solutions (1-3 months). I always provide detailed timelines upfront and keep clients updated throughout development.\"\n  },\n  {\n    question: \"Do you provide training and documentation?\",\n    answer: \"Yes! Every project includes comprehensive documentation, user guides, and optional training sessions. For enterprise clients, I offer custom training programs covering security best practices, system administration, and technology implementation.\"\n  }\n];\n\nexport const FAQ = () => {\n  const [openItems, setOpenItems] = useState<number[]>([]);\n\n  const toggleItem = (index: number) => {\n    setOpenItems(prev => \n      prev.includes(index) \n        ? prev.filter(i => i !== index)\n        : [...prev, index]\n    );\n  };\n\n  return (\n    <section className=\"py-20 relative\">\n      <div className=\"max-w-4xl mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-bold mb-4\">\n            <span className=\"bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n              FREQUENTLY ASKED QUESTIONS\n            </span>\n          </h2>\n          <p className=\"text-xl text-muted-foreground\">\n            Everything you need to know about working with DEATH\n          </p>\n        </div>\n\n        <div className=\"space-y-4\">\n          {faqData.map((item, index) => {\n            const isOpen = openItems.includes(index);\n            \n            return (\n              <Card \n                key={index}\n                className=\"border-primary/20 bg-card/20 backdrop-blur-sm overflow-hidden transition-all duration-300 hover:border-primary/40\"\n              >\n                <button\n                  onClick={() => toggleItem(index)}\n                  className=\"w-full p-6 text-left flex justify-between items-center group\"\n                  data-testid={`faq-question-${index}`}\n                >\n                  <h3 className=\"text-lg font-semibold text-foreground group-hover:text-primary transition-colors\">\n                    {item.question}\n                  </h3>\n                  <div className=\"flex-shrink-0 ml-4\">\n                    {isOpen ? (\n                      <ChevronUp className=\"w-5 h-5 text-primary\" />\n                    ) : (\n                      <ChevronDown className=\"w-5 h-5 text-muted-foreground group-hover:text-primary transition-colors\" />\n                    )}\n                  </div>\n                </button>\n                \n                <div \n                  className={`transition-all duration-300 ease-in-out ${\n                    isOpen ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0'\n                  } overflow-hidden`}\n                >\n                  <div className=\"px-6 pb-6\">\n                    <p className=\"text-muted-foreground leading-relaxed\">\n                      {item.answer}\n                    </p>\n                  </div>\n                </div>\n              </Card>\n            );\n          })}\n        </div>\n\n        <div className=\"text-center mt-12\">\n          <p className=\"text-muted-foreground mb-4\">\n            Still have questions? Get in touch for personalized answers.\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":5700},"client/src/components/InteractiveParticles.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\n\ninterface Particle {\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  life: number;\n  maxLife: number;\n  size: number;\n  color: string;\n}\n\nexport const InteractiveParticles = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [particles, setParticles] = useState<Particle[]>([]);\n  const mouseRef = useRef({ x: 0, y: 0 });\n  const animationRef = useRef<number>();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Mouse tracking\n    const handleMouseMove = (e: MouseEvent) => {\n      mouseRef.current = { x: e.clientX, y: e.clientY };\n      \n      // Add particles near mouse\n      if (Math.random() < 0.3) {\n        const newParticle: Particle = {\n          x: e.clientX + (Math.random() - 0.5) * 20,\n          y: e.clientY + (Math.random() - 0.5) * 20,\n          vx: (Math.random() - 0.5) * 2,\n          vy: (Math.random() - 0.5) * 2,\n          life: 60,\n          maxLife: 60,\n          size: Math.random() * 3 + 1,\n          color: `hsl(${180 + Math.random() * 60}, 100%, ${50 + Math.random() * 30}%)`\n        };\n        setParticles(prev => [...prev.slice(-50), newParticle]);\n      }\n    };\n\n    // Animation loop\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      setParticles(prev => {\n        return prev.map(particle => {\n          // Update particle\n          particle.x += particle.vx;\n          particle.y += particle.vy;\n          particle.life--;\n          \n          // Draw particle\n          const alpha = particle.life / particle.maxLife;\n          ctx.globalAlpha = alpha;\n          ctx.beginPath();\n          ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n          ctx.fillStyle = particle.color;\n          ctx.fill();\n          \n          // Add glow effect\n          ctx.shadowColor = particle.color;\n          ctx.shadowBlur = 10;\n          ctx.fill();\n          ctx.shadowBlur = 0;\n          \n          return particle;\n        }).filter(particle => particle.life > 0);\n      });\n      \n      animationRef.current = requestAnimationFrame(animate);\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    animate();\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"fixed inset-0 pointer-events-none z-10\"\n      style={{ mixBlendMode: 'screen' }}\n    />\n  );\n};","size_bytes":2934},"client/src/components/InteractiveTimeline.tsx":{"content":"import { useState, useRef, useEffect } from 'react';\nimport { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Calendar, MapPin, Award, TrendingUp } from 'lucide-react';\n\ninterface TimelineEvent {\n  id: number;\n  year: string;\n  title: string;\n  company: string;\n  location: string;\n  description: string;\n  achievements: string[];\n  technologies: string[];\n  type: 'work' | 'education' | 'achievement' | 'milestone';\n}\n\nconst timelineEvents: TimelineEvent[] = [\n  {\n    id: 1,\n    year: \"2024-Present\",\n    title: \"Lead Cybersecurity Consultant\",\n    company: \"Freelance / Enterprise Clients\",\n    location: \"Global Remote\",\n    description: \"Providing comprehensive cybersecurity solutions, ethical hacking services, and full-stack development for enterprise clients worldwide.\",\n    achievements: [\n      \"Conducted 100+ penetration tests\",\n      \"Secured $50M+ in client infrastructure\", \n      \"Developed 25+ Discord bot solutions\",\n      \"Built 50+ web applications\"\n    ],\n    technologies: [\"Python\", \"React\", \"Kubernetes\", \"AWS\", \"Penetration Testing\"],\n    type: \"work\"\n  },\n  {\n    id: 2,\n    year: \"2023\",\n    title: \"Senior Full-Stack Developer & Security Expert\",\n    company: \"Tech Innovation Labs\",\n    location: \"San Francisco, CA\",\n    description: \"Led development of secure enterprise applications while conducting regular security audits and implementing DevOps practices.\",\n    achievements: [\n      \"Reduced security vulnerabilities by 95%\",\n      \"Improved application performance by 300%\",\n      \"Mentored 10+ junior developers\",\n      \"Implemented CI/CD for 15+ projects\"\n    ],\n    technologies: [\"Node.js\", \"PostgreSQL\", \"Docker\", \"Jenkins\", \"Security Auditing\"],\n    type: \"work\"\n  },\n  {\n    id: 3,\n    year: \"2022\",\n    title: \"Certified Ethical Hacker (CEH)\",\n    company: \"EC-Council\",\n    location: \"Online Certification\",\n    description: \"Obtained advanced certification in ethical hacking and penetration testing methodologies.\",\n    achievements: [\n      \"Scored 95% on CEH exam\",\n      \"Specialized in web application security\",\n      \"Advanced social engineering techniques\", \n      \"Red team operations certified\"\n    ],\n    technologies: [\"Kali Linux\", \"Metasploit\", \"Burp Suite\", \"Nmap\", \"Wireshark\"],\n    type: \"achievement\"\n  },\n  {\n    id: 4,\n    year: \"2021-2022\",\n    title: \"Python AI Developer\",\n    company: \"DataMind Solutions\",\n    location: \"New York, NY\",\n    description: \"Developed machine learning models and AI-powered automation systems for enterprise clients.\",\n    achievements: [\n      \"Built 20+ ML models\",\n      \"Automated 80% of manual processes\",\n      \"Increased client efficiency by 250%\",\n      \"Published 5 research papers\"\n    ],\n    technologies: [\"Python\", \"TensorFlow\", \"scikit-learn\", \"pandas\", \"AWS SageMaker\"],\n    type: \"work\"\n  },\n  {\n    id: 5,\n    year: \"2020-2021\", \n    title: \"Discord Bot Developer & Community Manager\",\n    company: \"Gaming Communities Network\",\n    location: \"Remote\",\n    description: \"Created custom Discord bots for gaming communities and managed multiple large-scale Discord servers.\",\n    achievements: [\n      \"Developed 30+ Discord bots\",\n      \"Managed 500K+ users across servers\",\n      \"Created moderation systems\",\n      \"Built economy and gaming features\"\n    ],\n    technologies: [\"Discord.py\", \"MongoDB\", \"Redis\", \"Heroku\", \"Bot Development\"],\n    type: \"work\"\n  },\n  {\n    id: 6,\n    year: \"2017-2019\",\n    title: \"Minecraft Server Developer & VPS Manager\",\n    company: \"Gaming Infrastructure Co.\",\n    location: \"Remote\",\n    description: \"Specialized in Minecraft server development, custom plugin creation, and VPS hosting management.\",\n    achievements: [\n      \"Built 200+ Minecraft servers\",\n      \"Created 50+ custom plugins\",\n      \"Managed 100+ VPS instances\",\n      \"Achieved 99.9% uptime\"\n    ],\n    technologies: [\"Java\", \"Spigot/Bukkit\", \"Linux\", \"MySQL\", \"Server Administration\"],\n    type: \"work\"\n  }\n];\n\nconst getTypeIcon = (type: string) => {\n  switch (type) {\n    case 'work': return '💼';\n    case 'education': return '🎓';\n    case 'achievement': return '🏆';\n    case 'milestone': return '🎯';\n    default: return '📅';\n  }\n};\n\nconst getTypeColor = (type: string) => {\n  switch (type) {\n    case 'work': return 'border-primary';\n    case 'education': return 'border-secondary';\n    case 'achievement': return 'border-yellow-500';\n    case 'milestone': return 'border-green-500';\n    default: return 'border-primary';\n  }\n};\n\nexport const InteractiveTimeline = () => {\n  const [visibleItems, setVisibleItems] = useState<number[]>([]);\n  const [selectedEvent, setSelectedEvent] = useState<number | null>(null);\n  const itemRefs = useRef<(HTMLDivElement | null)[]>([]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          const index = parseInt(entry.target.getAttribute('data-index') || '0');\n          if (entry.isIntersecting) {\n            setVisibleItems(prev => {\n              const newSet = new Set([...prev, index]);\n              return Array.from(newSet);\n            });\n          }\n        });\n      },\n      { threshold: 0.1 }\n    );\n\n    itemRefs.current.forEach((ref) => {\n      if (ref) observer.observe(ref);\n    });\n\n    return () => observer.disconnect();\n  }, []);\n\n  return (\n    <section className=\"py-20 relative overflow-hidden\">\n      <div className=\"max-w-6xl mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-bold mb-4\">\n            <span className=\"bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n              PROFESSIONAL TIMELINE\n            </span>\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n            Journey through my career evolution from coding to cybersecurity expertise\n          </p>\n        </div>\n\n        <div className=\"relative\">\n          {/* Central Timeline Line */}\n          <div className=\"absolute left-1/2 transform -translate-x-1/2 w-1 bg-gradient-to-b from-primary via-secondary to-primary h-full\" />\n\n          {/* Timeline Events */}\n          <div className=\"space-y-12\">\n            {timelineEvents.map((event, index) => {\n              const isLeft = index % 2 === 0;\n              const isVisible = visibleItems.includes(index);\n              const isSelected = selectedEvent === event.id;\n\n              return (\n                <div\n                  key={event.id}\n                  ref={(el) => itemRefs.current[index] = el}\n                  data-index={index}\n                  className={`relative flex ${isLeft ? 'justify-start' : 'justify-end'} transition-all duration-700 ${\n                    isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'\n                  }`}\n                  style={{ transitionDelay: `${index * 100}ms` }}\n                >\n                  {/* Timeline Node */}\n                  <div className={`absolute left-1/2 transform -translate-x-1/2 w-6 h-6 rounded-full border-4 ${getTypeColor(event.type)} bg-background z-10 transition-all duration-300 ${\n                    isVisible ? 'scale-100' : 'scale-0'\n                  }`} />\n\n                  {/* Event Card */}\n                  <Card\n                    className={`w-5/12 ${isLeft ? 'mr-auto pr-12' : 'ml-auto pl-12'} border-primary/20 bg-card/20 backdrop-blur-sm hover:border-primary/40 transition-all duration-300 cursor-pointer ${\n                      isSelected ? 'border-primary shadow-lg scale-105' : ''\n                    }`}\n                    onClick={() => setSelectedEvent(isSelected ? null : event.id)}\n                    data-testid={`timeline-event-${event.id}`}\n                  >\n                    <div className=\"p-6\">\n                      {/* Header */}\n                      <div className=\"flex items-start gap-4 mb-4\">\n                        <div className=\"text-3xl\">{getTypeIcon(event.type)}</div>\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center gap-2 mb-2\">\n                            <Calendar className=\"w-4 h-4 text-primary\" />\n                            <span className=\"text-sm font-medium text-primary\">{event.year}</span>\n                          </div>\n                          <h3 className=\"text-xl font-bold mb-1\">{event.title}</h3>\n                          <div className=\"flex items-center gap-2 text-muted-foreground mb-2\">\n                            <TrendingUp className=\"w-4 h-4\" />\n                            <span className=\"font-medium\">{event.company}</span>\n                          </div>\n                          <div className=\"flex items-center gap-2 text-muted-foreground\">\n                            <MapPin className=\"w-4 h-4\" />\n                            <span className=\"text-sm\">{event.location}</span>\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* Description */}\n                      <p className=\"text-muted-foreground mb-4\">{event.description}</p>\n\n                      {/* Achievements (shown when selected) */}\n                      {isSelected && (\n                        <div className=\"mb-4 animate-in fade-in duration-300\">\n                          <h4 className=\"font-semibold mb-2 flex items-center gap-2\">\n                            <Award className=\"w-4 h-4 text-primary\" />\n                            Key Achievements\n                          </h4>\n                          <ul className=\"space-y-1 text-sm text-muted-foreground\">\n                            {event.achievements.map((achievement, achIndex) => (\n                              <li key={achIndex} className=\"flex items-center gap-2\">\n                                <span className=\"w-2 h-2 bg-primary rounded-full\" />\n                                {achievement}\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                      )}\n\n                      {/* Technologies */}\n                      <div className=\"flex flex-wrap gap-2\">\n                        {event.technologies.slice(0, isSelected ? undefined : 3).map((tech, techIndex) => (\n                          <Badge \n                            key={techIndex}\n                            variant=\"secondary\"\n                            className=\"text-xs bg-primary/10 text-primary\"\n                          >\n                            {tech}\n                          </Badge>\n                        ))}\n                        {!isSelected && event.technologies.length > 3 && (\n                          <Badge \n                            variant=\"secondary\"\n                            className=\"text-xs bg-muted text-muted-foreground\"\n                          >\n                            +{event.technologies.length - 3} more\n                          </Badge>\n                        )}\n                      </div>\n                    </div>\n                  </Card>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":11248},"client/src/components/LiveChat.tsx":{"content":"import { useState, useRef, useEffect } from 'react';\nimport { Card } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { MessageCircle, X, Send, Minimize2, Bot, User } from 'lucide-react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\n\ninterface Message {\n  id: number;\n  text: string;\n  isUser: boolean;\n  timestamp: Date;\n  isTyping?: boolean;\n}\n\n// Fallback responses in case AI fails\nconst fallbackResponses = [\n  \"Thanks for reaching out! I'm DEATH's AI assistant. How can I help you today?\",\n  \"I specialize in cybersecurity, Python development, Discord bots, and full-stack solutions. What project are you interested in?\",\n  \"That's a great question! Let me connect you with DEATH for a detailed discussion. Please share your contact info.\",\n  \"I'd be happy to help with that! DEATH has extensive experience in that area. Would you like to schedule a consultation?\"\n];\n\nexport const LiveChat = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: 1,\n      text: \"👋 Hello! I'm DEATH's AI assistant powered by advanced AI. I can help answer questions about cybersecurity services, Python development, Discord bots, web development, and much more. What would you like to know?\",\n      isUser: false,\n      timestamp: new Date()\n    }\n  ]);\n  const [inputValue, setInputValue] = useState('');\n  const [conversationHistory, setConversationHistory] = useState<string[]>([]);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const queryClient = useQueryClient();\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // AI Chat mutation\n  const chatMutation = useMutation({\n    mutationFn: async (userMessage: string) => {\n      const response = await apiRequest('/api/chat', {\n        method: 'POST',\n        body: JSON.stringify({ \n          message: userMessage,\n          history: conversationHistory.slice(-10) // Keep last 10 messages for context\n        })\n      });\n      return response;\n    },\n    onSuccess: (data, userMessage) => {\n      // Update conversation history\n      setConversationHistory(prev => [...prev, `User: ${userMessage}`, `Assistant: ${data.response}`]);\n      \n      // Add AI response to messages\n      const botMessage: Message = {\n        id: Date.now() + 1,\n        text: data.response,\n        isUser: false,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, botMessage]);\n    },\n    onError: (error) => {\n      console.error('Chat error:', error);\n      // Fallback to random response\n      const botMessage: Message = {\n        id: Date.now() + 1,\n        text: fallbackResponses[Math.floor(Math.random() * fallbackResponses.length)] + \" (AI temporarily unavailable)\",\n        isUser: false,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, botMessage]);\n    }\n  });\n\n  const sendMessage = () => {\n    if (!inputValue.trim() || chatMutation.isPending) return;\n\n    const userMessage: Message = {\n      id: Date.now(),\n      text: inputValue,\n      isUser: true,\n      timestamp: new Date()\n    };\n\n    const messageText = inputValue;\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    \n    // Send to AI\n    chatMutation.mutate(messageText);\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  if (!isOpen) {\n    return (\n      <Button\n        onClick={() => setIsOpen(true)}\n        className=\"fixed bottom-6 right-6 z-50 rounded-full w-14 h-14 bg-primary text-primary-foreground shadow-lg hover:scale-110 transition-all duration-300\"\n        data-testid=\"chat-open-button\"\n      >\n        <MessageCircle className=\"w-6 h-6\" />\n      </Button>\n    );\n  }\n\n  return (\n    <Card className={`fixed bottom-6 right-6 z-50 w-80 bg-background border-primary/20 shadow-2xl transition-all duration-300 ${\n      isMinimized ? 'h-14' : 'h-96'\n    }`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-primary/20 bg-primary/5\">\n        <div className=\"flex items-center gap-2\">\n          <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\" />\n          <Bot className=\"w-4 h-4 text-primary\" />\n          <span className=\"font-semibold\">DEATH's AI Assistant</span>\n        </div>\n        <div className=\"flex gap-1\">\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={() => setIsMinimized(!isMinimized)}\n            className=\"h-8 w-8\"\n          >\n            <Minimize2 className=\"w-4 h-4\" />\n          </Button>\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={() => setIsOpen(false)}\n            className=\"h-8 w-8\"\n            data-testid=\"chat-close-button\"\n          >\n            <X className=\"w-4 h-4\" />\n          </Button>\n        </div>\n      </div>\n\n      {!isMinimized && (\n        <>\n          {/* Messages */}\n          <div className=\"flex-1 p-4 space-y-3 overflow-y-auto max-h-64\">\n            {messages.map((message) => (\n              <div\n                key={message.id}\n                className={`flex items-end gap-2 ${message.isUser ? 'justify-end' : 'justify-start'}`}\n              >\n                {!message.isUser && <Bot className=\"w-6 h-6 text-primary mb-1\" />}\n                <div\n                  className={`max-w-[80%] p-3 rounded-lg text-sm whitespace-pre-wrap ${\n                    message.isUser\n                      ? 'bg-primary text-primary-foreground rounded-br-none'\n                      : 'bg-muted text-foreground rounded-bl-none'\n                  }`}\n                >\n                  {message.text}\n                </div>\n                {message.isUser && <User className=\"w-6 h-6 text-muted-foreground mb-1\" />}\n              </div>\n            ))}\n            \n            {chatMutation.isPending && (\n              <div className=\"flex justify-start items-end gap-2\">\n                <Bot className=\"w-6 h-6 text-primary\" />\n                <div className=\"bg-muted text-foreground p-3 rounded-lg text-sm\">\n                  <div className=\"flex gap-1 items-center\">\n                    <span className=\"text-xs text-muted-foreground mr-2\">AI is thinking...</span>\n                    <div className=\"w-2 h-2 bg-primary rounded-full animate-bounce\" />\n                    <div className=\"w-2 h-2 bg-primary rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }} />\n                    <div className=\"w-2 h-2 bg-primary rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }} />\n                  </div>\n                </div>\n              </div>\n            )}\n            <div ref={messagesEndRef} />\n          </div>\n\n          {/* Input */}\n          <div className=\"p-4 border-t border-primary/20\">\n            <div className=\"flex gap-2\">\n              <Input\n                value={inputValue}\n                onChange={(e) => setInputValue(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Type your message...\"\n                className=\"flex-1\"\n                data-testid=\"chat-input\"\n              />\n              <Button\n                onClick={sendMessage}\n                disabled={!inputValue.trim() || chatMutation.isPending}\n                size=\"icon\"\n                data-testid=\"chat-send-button\"\n                className={chatMutation.isPending ? 'opacity-50 cursor-not-allowed' : ''}\n              >\n                <Send className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </div>\n        </>\n      )}\n    </Card>\n  );\n};","size_bytes":7929},"client/src/components/PortfolioFilter.tsx":{"content":"import { useState } from 'react';\nimport { Card } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { ExternalLink, Github, Filter } from 'lucide-react';\n\ninterface Project {\n  id: number;\n  title: string;\n  description: string;\n  category: string;\n  technologies: string[];\n  image: string;\n  demoUrl?: string;\n  githubUrl?: string;\n  featured?: boolean;\n}\n\nconst portfolioProjects: Project[] = [\n  {\n    id: 1,\n    title: \"Enterprise Security Audit Platform\",\n    description: \"Comprehensive penetration testing dashboard with automated vulnerability scanning, red team operations management, and real-time threat detection.\",\n    category: \"Security\",\n    technologies: [\"Python\", \"React\", \"PostgreSQL\", \"Docker\", \"Kali Linux\"],\n    image: \"🛡️\",\n    featured: true\n  },\n  {\n    id: 2,\n    title: \"AI-Powered Discord Bot Network\",\n    description: \"Multi-server Discord bot ecosystem with machine learning moderation, economy systems, custom commands, and advanced community management.\",\n    category: \"Discord Bots\",\n    technologies: [\"Python\", \"Discord.py\", \"TensorFlow\", \"Redis\", \"MongoDB\"],\n    image: \"🤖\",\n    featured: true\n  },\n  {\n    id: 3,\n    title: \"Blockchain Mining Pool Manager\",\n    description: \"Full-stack cryptocurrency mining pool management system with real-time statistics, automated payouts, and worker monitoring.\",\n    category: \"Blockchain\",\n    technologies: [\"Node.js\", \"React\", \"Web3.js\", \"Ethereum\", \"Smart Contracts\"],\n    image: \"⛏️\"\n  },\n  {\n    id: 4,\n    title: \"Cloud Infrastructure Orchestrator\",\n    description: \"Automated cloud deployment and management platform supporting AWS, Azure, and GCP with Kubernetes orchestration and monitoring.\",\n    category: \"DevOps\",\n    technologies: [\"Python\", \"Kubernetes\", \"Docker\", \"Terraform\", \"AWS\"],\n    image: \"☁️\",\n    featured: true\n  },\n  {\n    id: 5,\n    title: \"Real-time Chat & Collaboration Platform\",\n    description: \"Enterprise-grade communication platform with end-to-end encryption, file sharing, video calls, and project management integration.\",\n    category: \"Web Development\",\n    technologies: [\"React\", \"Node.js\", \"Socket.io\", \"WebRTC\", \"MongoDB\"],\n    image: \"💬\"\n  },\n  {\n    id: 6,\n    title: \"Ethical Hacking Training Simulator\",\n    description: \"Interactive cybersecurity training platform with virtual labs, capture-the-flag challenges, and progress tracking for security professionals.\",\n    category: \"Security\",\n    technologies: [\"Python\", \"Django\", \"Vue.js\", \"Docker\", \"VirtualBox\"],\n    image: \"🎯\"\n  },\n  {\n    id: 7,\n    title: \"Mobile Gaming Community Hub\",\n    description: \"Cross-platform mobile application for gaming communities with tournaments, leaderboards, social features, and in-app purchases.\",\n    category: \"Mobile Apps\",\n    technologies: [\"React Native\", \"Node.js\", \"PostgreSQL\", \"Push Notifications\", \"Stripe\"],\n    image: \"🎮\"\n  },\n  {\n    id: 8,\n    title: \"IoT Device Management System\",\n    description: \"Comprehensive IoT platform for device monitoring, firmware updates, data analytics, and remote control with enterprise security.\",\n    category: \"IoT\",\n    technologies: [\"Python\", \"MQTT\", \"InfluxDB\", \"Grafana\", \"Raspberry Pi\"],\n    image: \"📡\"\n  }\n];\n\nconst categories = [\"All\", \"Security\", \"Discord Bots\", \"Web Development\", \"Blockchain\", \"DevOps\", \"Mobile Apps\", \"IoT\"];\n\nexport const PortfolioFilter = () => {\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\n  const [showFeaturedOnly, setShowFeaturedOnly] = useState(false);\n\n  const filteredProjects = portfolioProjects.filter(project => {\n    const categoryMatch = selectedCategory === \"All\" || project.category === selectedCategory;\n    const featuredMatch = !showFeaturedOnly || project.featured;\n    return categoryMatch && featuredMatch;\n  });\n\n  return (\n    <section className=\"py-20 relative\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-bold mb-4\">\n            <span className=\"bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n              PROJECT PORTFOLIO\n            </span>\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n            Explore my diverse range of cybersecurity, development, and infrastructure projects\n          </p>\n        </div>\n\n        {/* Filter Controls */}\n        <div className=\"flex flex-wrap justify-center gap-4 mb-12\">\n          <div className=\"flex flex-wrap gap-2\">\n            {categories.map((category) => (\n              <Button\n                key={category}\n                variant={selectedCategory === category ? \"default\" : \"outline\"}\n                onClick={() => setSelectedCategory(category)}\n                className={`${\n                  selectedCategory === category \n                    ? 'bg-primary text-primary-foreground' \n                    : 'border-primary/20 hover:border-primary/40'\n                }`}\n                data-testid={`filter-${category.toLowerCase().replace(' ', '-')}`}\n              >\n                {category}\n              </Button>\n            ))}\n          </div>\n          \n          <Button\n            variant={showFeaturedOnly ? \"default\" : \"outline\"}\n            onClick={() => setShowFeaturedOnly(!showFeaturedOnly)}\n            className={`${\n              showFeaturedOnly \n                ? 'bg-primary text-primary-foreground' \n                : 'border-primary/20 hover:border-primary/40'\n            }`}\n            data-testid=\"filter-featured\"\n          >\n            <Filter className=\"w-4 h-4 mr-2\" />\n            Featured Only\n          </Button>\n        </div>\n\n        {/* Projects Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {filteredProjects.map((project, index) => (\n            <Card\n              key={project.id}\n              className=\"group border-primary/20 bg-card/20 backdrop-blur-sm hover:border-primary/40 transition-all duration-300 hover:scale-105 overflow-hidden\"\n              style={{ animationDelay: `${index * 100}ms` }}\n            >\n              <div className=\"p-6\">\n                {/* Project Icon & Featured Badge */}\n                <div className=\"flex justify-between items-start mb-4\">\n                  <div className=\"text-4xl\">{project.image}</div>\n                  {project.featured && (\n                    <Badge className=\"bg-primary text-primary-foreground\">\n                      Featured\n                    </Badge>\n                  )}\n                </div>\n\n                {/* Project Info */}\n                <h3 className=\"text-xl font-bold mb-2 group-hover:text-primary transition-colors\">\n                  {project.title}\n                </h3>\n                <p className=\"text-muted-foreground mb-4 line-clamp-3\">\n                  {project.description}\n                </p>\n\n                {/* Category */}\n                <Badge \n                  variant=\"outline\" \n                  className=\"mb-4 border-primary/20 text-primary\"\n                >\n                  {project.category}\n                </Badge>\n\n                {/* Technologies */}\n                <div className=\"flex flex-wrap gap-2 mb-6\">\n                  {project.technologies.slice(0, 3).map((tech, techIndex) => (\n                    <Badge \n                      key={techIndex}\n                      variant=\"secondary\"\n                      className=\"text-xs bg-primary/10 text-primary\"\n                    >\n                      {tech}\n                    </Badge>\n                  ))}\n                  {project.technologies.length > 3 && (\n                    <Badge \n                      variant=\"secondary\"\n                      className=\"text-xs bg-muted text-muted-foreground\"\n                    >\n                      +{project.technologies.length - 3} more\n                    </Badge>\n                  )}\n                </div>\n\n                {/* Action Buttons */}\n                <div className=\"flex gap-2\">\n                  {project.demoUrl && (\n                    <Button\n                      size=\"sm\"\n                      className=\"flex-1 bg-primary/10 text-primary border border-primary/20 hover:bg-primary hover:text-primary-foreground\"\n                      data-testid={`demo-${project.id}`}\n                    >\n                      <ExternalLink className=\"w-4 h-4 mr-2\" />\n                      Demo\n                    </Button>\n                  )}\n                  {project.githubUrl && (\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      className=\"flex-1 border-primary/20 hover:border-primary/40\"\n                      data-testid={`github-${project.id}`}\n                    >\n                      <Github className=\"w-4 h-4 mr-2\" />\n                      Code\n                    </Button>\n                  )}\n                  {!project.demoUrl && !project.githubUrl && (\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      className=\"w-full border-primary/20 hover:border-primary/40\"\n                      data-testid={`contact-${project.id}`}\n                    >\n                      Contact for Details\n                    </Button>\n                  )}\n                </div>\n              </div>\n            </Card>\n          ))}\n        </div>\n\n        {filteredProjects.length === 0 && (\n          <div className=\"text-center py-12\">\n            <p className=\"text-xl text-muted-foreground\">\n              No projects found for the selected filters.\n            </p>\n            <Button\n              onClick={() => {\n                setSelectedCategory(\"All\");\n                setShowFeaturedOnly(false);\n              }}\n              variant=\"outline\"\n              className=\"mt-4 border-primary/20 hover:border-primary/40\"\n            >\n              Clear Filters\n            </Button>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};","size_bytes":10156},"client/src/components/PricingTables.tsx":{"content":"import { Card } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Check, Zap, Crown, Shield } from 'lucide-react';\n\ninterface PricingTier {\n  name: string;\n  price: string;\n  period: string;\n  description: string;\n  features: string[];\n  highlighted?: boolean;\n  icon: React.ReactNode;\n  buttonText: string;\n  badge?: string;\n}\n\nconst pricingTiers: PricingTier[] = [\n  {\n    name: \"Basic Security Audit\",\n    price: \"$299\",\n    period: \"one-time\",\n    description: \"Essential security assessment for small projects\",\n    features: [\n      \"Basic vulnerability scan\",\n      \"Security report with findings\",\n      \"Remediation recommendations\",\n      \"Email support\",\n      \"1 week delivery\"\n    ],\n    icon: <Shield className=\"w-6 h-6\" />,\n    buttonText: \"Get Started\"\n  },\n  {\n    name: \"Professional Development\",\n    price: \"$899\",\n    period: \"project\",\n    description: \"Complete full-stack development solution\",\n    features: [\n      \"Custom web application\",\n      \"Discord bot integration\",\n      \"Python automation scripts\",\n      \"Database optimization\",\n      \"Security implementation\",\n      \"API development\",\n      \"Mobile responsive design\",\n      \"Priority support\",\n      \"2-4 weeks delivery\"\n    ],\n    highlighted: true,\n    icon: <Zap className=\"w-6 h-6\" />,\n    buttonText: \"Most Popular\",\n    badge: \"RECOMMENDED\"\n  },\n  {\n    name: \"Enterprise Solutions\",\n    price: \"$2499\",\n    period: \"monthly\",\n    description: \"Complete cybersecurity and development package\",\n    features: [\n      \"Everything in Professional\",\n      \"Penetration testing\",\n      \"Red team operations\",\n      \"24/7 monitoring\",\n      \"Infrastructure management\",\n      \"VPS hosting included\",\n      \"Dedicated support team\",\n      \"Monthly security audits\",\n      \"Custom training sessions\",\n      \"Unlimited revisions\"\n    ],\n    icon: <Crown className=\"w-6 h-6\" />,\n    buttonText: \"Contact Sales\",\n    badge: \"ENTERPRISE\"\n  }\n];\n\nexport const PricingTables = () => {\n  return (\n    <section className=\"py-20 relative\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl md:text-5xl font-bold mb-4\">\n            <span className=\"bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n              PRICING PLANS\n            </span>\n          </h2>\n          <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n            Choose the perfect plan for your cybersecurity and development needs\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          {pricingTiers.map((tier, index) => (\n            <Card\n              key={index}\n              className={`p-8 relative transition-all duration-300 hover:scale-105 ${\n                tier.highlighted\n                  ? 'border-primary bg-primary/5 shadow-[0_0_30px_hsl(var(--primary)/0.3)]'\n                  : 'border-primary/20 bg-card/20 backdrop-blur-sm hover:border-primary/40'\n              }`}\n            >\n              {tier.badge && (\n                <Badge className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 bg-primary text-primary-foreground\">\n                  {tier.badge}\n                </Badge>\n              )}\n\n              <div className=\"text-center mb-6\">\n                <div className=\"flex justify-center mb-4\">\n                  <div className={`p-3 rounded-full ${\n                    tier.highlighted ? 'bg-primary text-primary-foreground' : 'bg-primary/10 text-primary'\n                  }`}>\n                    {tier.icon}\n                  </div>\n                </div>\n                <h3 className=\"text-2xl font-bold mb-2\">{tier.name}</h3>\n                <p className=\"text-muted-foreground mb-4\">{tier.description}</p>\n                <div className=\"mb-4\">\n                  <span className=\"text-4xl font-bold text-primary\">{tier.price}</span>\n                  <span className=\"text-muted-foreground\">/{tier.period}</span>\n                </div>\n              </div>\n\n              <ul className=\"space-y-3 mb-8\">\n                {tier.features.map((feature, featureIndex) => (\n                  <li key={featureIndex} className=\"flex items-center gap-3\">\n                    <Check className=\"w-5 h-5 text-primary flex-shrink-0\" />\n                    <span className=\"text-foreground\">{feature}</span>\n                  </li>\n                ))}\n              </ul>\n\n              <Button\n                className={`w-full ${\n                  tier.highlighted\n                    ? 'bg-primary text-primary-foreground hover:bg-primary/90'\n                    : 'bg-primary/10 text-primary border border-primary/20 hover:bg-primary hover:text-primary-foreground'\n                }`}\n                data-testid={`pricing-button-${index}`}\n              >\n                {tier.buttonText}\n              </Button>\n            </Card>\n          ))}\n        </div>\n\n        <div className=\"text-center mt-12\">\n          <p className=\"text-muted-foreground mb-4\">\n            Need a custom solution? Let's discuss your specific requirements.\n          </p>\n          <Button variant=\"outline\" className=\"border-primary/20 hover:border-primary/40\">\n            Contact for Custom Quote\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":5394},"client/src/components/TestimonialsCarousel.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Card } from '@/components/ui/card';\nimport { ChevronLeft, ChevronRight, Star, Quote } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\n\ninterface Testimonial {\n  id: number;\n  name: string;\n  role: string;\n  company: string;\n  content: string;\n  rating: number;\n  avatar: string;\n}\n\nconst testimonials: Testimonial[] = [\n  {\n    id: 1,\n    name: \"Alex Rodriguez\",\n    role: \"CEO\",\n    company: \"TechCorp Gaming\",\n    content: \"DEATH delivered an incredible Minecraft server setup that exceeded all expectations. The security implementation and custom plugins are absolutely top-tier!\",\n    rating: 5,\n    avatar: \"👨‍💼\"\n  },\n  {\n    id: 2,\n    name: \"Sarah Chen\",\n    role: \"Security Director\",\n    company: \"CyberShield Inc\",\n    content: \"Outstanding penetration testing and security audit. Found vulnerabilities we never knew existed and provided comprehensive solutions. A true ethical hacking expert!\",\n    rating: 5,\n    avatar: \"👩‍💻\"\n  },\n  {\n    id: 3,\n    name: \"Mike Johnson\",\n    role: \"Community Manager\",\n    company: \"Discord Servers Network\",\n    content: \"The Discord bots DEATH created are phenomenal! Automated our entire server management and increased engagement by 300%. Python mastery at its finest!\",\n    rating: 5,\n    avatar: \"🎮\"\n  },\n  {\n    id: 4,\n    name: \"Elena Vasquez\",\n    role: \"Startup Founder\",\n    company: \"NextGen Solutions\",\n    content: \"Full-stack development excellence! Built our entire platform from scratch with perfect security implementation. The AI integration is revolutionary!\",\n    rating: 5,\n    avatar: \"🚀\"\n  },\n  {\n    id: 5,\n    name: \"David Kim\",\n    role: \"IT Director\",\n    company: \"Enterprise Systems\",\n    content: \"VPS management and infrastructure setup was flawless. 99.9% uptime and lightning-fast performance. Best hosting provider we've ever worked with!\",\n    rating: 5,\n    avatar: \"⚡\"\n  }\n];\n\nexport const TestimonialsCarousel = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isAutoPlaying, setIsAutoPlaying] = useState(true);\n\n  useEffect(() => {\n    if (!isAutoPlaying) return;\n\n    const interval = setInterval(() => {\n      setCurrentIndex((prev) => (prev + 1) % testimonials.length);\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [isAutoPlaying]);\n\n  const goToPrevious = () => {\n    setCurrentIndex((prev) => (prev - 1 + testimonials.length) % testimonials.length);\n    setIsAutoPlaying(false);\n  };\n\n  const goToNext = () => {\n    setCurrentIndex((prev) => (prev + 1) % testimonials.length);\n    setIsAutoPlaying(false);\n  };\n\n  const currentTestimonial = testimonials[currentIndex];\n\n  return (\n    <section className=\"py-20 relative overflow-hidden\">\n      <div className=\"max-w-4xl mx-auto px-6 text-center\">\n        <h2 className=\"text-4xl md:text-5xl font-bold mb-4\">\n          <span className=\"bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n            CLIENT TESTIMONIALS\n          </span>\n        </h2>\n        <p className=\"text-xl text-muted-foreground mb-12\">\n          What experts say about working with DEATH\n        </p>\n\n        <div className=\"relative\">\n          <Card className=\"p-8 md:p-12 bg-card/20 backdrop-blur-sm border-primary/20 relative overflow-hidden group\">\n            {/* Quote icon */}\n            <Quote className=\"absolute top-4 left-4 w-8 h-8 text-primary/30\" />\n            \n            {/* Content */}\n            <div className=\"space-y-6\">\n              {/* Stars */}\n              <div className=\"flex justify-center gap-1\">\n                {[...Array(currentTestimonial.rating)].map((_, i) => (\n                  <Star key={i} className=\"w-5 h-5 fill-yellow-400 text-yellow-400\" />\n                ))}\n              </div>\n\n              {/* Testimonial text */}\n              <blockquote className=\"text-lg md:text-xl text-foreground italic leading-relaxed\">\n                \"{currentTestimonial.content}\"\n              </blockquote>\n\n              {/* Author */}\n              <div className=\"flex items-center justify-center gap-4\">\n                <div className=\"text-4xl\">{currentTestimonial.avatar}</div>\n                <div className=\"text-left\">\n                  <div className=\"font-bold text-primary\">{currentTestimonial.name}</div>\n                  <div className=\"text-sm text-muted-foreground\">\n                    {currentTestimonial.role} at {currentTestimonial.company}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Navigation */}\n            <div className=\"flex justify-between items-center mt-8\">\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                onClick={goToPrevious}\n                className=\"border-primary/20 hover:border-primary/40\"\n                data-testid=\"testimonial-prev\"\n              >\n                <ChevronLeft className=\"w-4 h-4\" />\n              </Button>\n\n              {/* Dots indicator */}\n              <div className=\"flex gap-2\">\n                {testimonials.map((_, index) => (\n                  <button\n                    key={index}\n                    onClick={() => {\n                      setCurrentIndex(index);\n                      setIsAutoPlaying(false);\n                    }}\n                    className={`w-3 h-3 rounded-full transition-all duration-300 ${\n                      index === currentIndex \n                        ? 'bg-primary scale-125' \n                        : 'bg-primary/30 hover:bg-primary/60'\n                    }`}\n                    data-testid={`testimonial-dot-${index}`}\n                  />\n                ))}\n              </div>\n\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                onClick={goToNext}\n                className=\"border-primary/20 hover:border-primary/40\"\n                data-testid=\"testimonial-next\"\n              >\n                <ChevronRight className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":6148},"client/src/components/ThemeToggle.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Moon, Sun } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\n\nexport const ThemeToggle = () => {\n  const [isDark, setIsDark] = useState(true);\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    \n    const shouldBeDark = savedTheme ? savedTheme === 'dark' : prefersDark;\n    setIsDark(shouldBeDark);\n    \n    if (shouldBeDark) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, []);\n\n  const toggleTheme = () => {\n    const newTheme = !isDark;\n    setIsDark(newTheme);\n    \n    if (newTheme) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    }\n  };\n\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"icon\"\n      onClick={toggleTheme}\n      className=\"fixed top-20 right-4 z-50 bg-background/80 backdrop-blur-sm border-primary/20 hover:border-primary/40 transition-all duration-300\"\n      data-testid=\"theme-toggle\"\n    >\n      {isDark ? (\n        <Sun className=\"h-5 w-5 text-primary\" />\n      ) : (\n        <Moon className=\"h-5 w-5 text-primary\" />\n      )}\n    </Button>\n  );\n};","size_bytes":1431}},"version":1}